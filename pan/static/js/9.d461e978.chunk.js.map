{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Common/FileSelector.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/AddPack.js","component/Admin/Dialogs/AddGroupk.js","component/Admin/Dialogs/AddRedeem.js","component/Admin/Setting/VAS.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Aria2.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Common/DomainInput.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Order/Order.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Report/ReportList.js","component/Admin/Setting/Captcha.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","AttachMoney","Palette","CloudDownload","Image","Category","Storage","Group","Person","InsertDriveFile","Share","Report","ShoppingCart","Assignment","ListAlt","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","alt","relationships","startUser","avatarUrl","Fragment","inline","username","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","siteDes","siteICPId","siteScript","siteNotice","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","placeholder","Select","MenuItem","disabled","AlertDialog","FileSelector","ID","Name","selectValue","setSelectValue","inputValue","setInputValue","findIndex","toString","page","page_size","order_by","conditions","searches","newOptions","Autocomplete","multiple","getOptionLabel","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onInputChange","newInputValue","newValue","JSON","stringify","renderInput","params","TextField","renderOption","Access","initCompleted","setInitComplete","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","qq_login","qq_direct_login","qq_login_id","qq_login_key","authn_enabled","mail_domain_filter","mail_domain_filter_list","initial_files","groups","setGroups","httpAlert","setHttpAlert","checked","handleInputChange","FormControlLabel","control","Switch","parse","i","rowsMax","Alert","severity","endsWith","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","over_used_template","mail_activation_template","mail_reset_pwd_template","autoFocus","to","inputProps","min","step","SizeInput","max","suffix","unit","setUnit","first","transform","Math","round","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","defaultPack","time","price","score","AddPack","packEdit","pack","setPack","packCopy","parseInt","Date","valueOf","defaultGroup","group_id","des","highlight","AddGroup","groupEdit","group","setGroup","join","length","scroll","groupCopy","split","AddRedeem","products","onSuccess","num","input","setInput","data-type","tabForm","tableContainer","navigator","product","VAS","tab","setTab","alipay_enabled","payjs_enabled","wechat_enabled","payjs_id","appid","appkey","shopid","payjs_secret","wechat_appid","wechat_mchid","wechat_serial_no","wechat_api_key","wechat_pk_content","score_enabled","share_score_rate","score_price","ban_time","group_sell_data","pack_data","packs","setPacks","addPack","setAddPack","addGroup","setAddGroup","setPackEdit","setGroupEdit","addRedeem","setAddRedeem","redeems","setRedeems","redeemsRes","setRedeemsRes","redeemsResOpen","setRedeemsResOpen","setPage","pageSize","total","setTotal","loadRedeemList","handleCheckChange","updatePackOption","Tabs","indicatorColor","textColor","scrollButtons","Tab","updateOption","Link","href","Table","TableHead","TableRow","TableCell","TableBody","row","scope","ceil","sizeToString","Edit","newPacks","filter","newPackData","deletePack","Delete","newGroups","deleteGroup","ProductID","Num","Code","Used","Box","delete","Pagination","count","isEdit","newGroup","newGroupData","codes","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","themeString","helperText","onBlur","themeCopy","resStr","deleteTheme","newTheme","Aria2","aria2_rpcurl","aria2_token","aria2_temp_path","aria2_options","aria2_interval","aria2_call_timeout","server","token","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","dividers","index","sm","Card","CardActionArea","CardMedia","image","CardContent","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","setPageSize","addDialog","setAddDialog","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","Boolean","TableContainer","column","hover","policyTypeMap","Type","toLocaleString","currentTarget","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","MagicVar","isFile","isSlave","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","steps","optional","LocalGuide","props","activeStep","setActiveStep","Set","skipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","BaseURL","IsPrivate","MaxSize","OptionsSerialized","file_type","setPolicy","Stepper","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","RadioGroup","Radio","Collapse","in","policyCopy","code","fontFamily","pre","overflow","RemoteGuide","Server","SecretKey","randomStr","minlength","secret","AccessKey","mimetype","handleOptionChange","BucketName","getNumber","viewButtonLabel","textTransform","OSSGuide","setSkipped","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","policyID","setPolicyID","submitPolicy","pattern","n","prevActiveStep","prevSkipped","newSkipped","values","add","UpyunGuide","COSGuide","region","setRegion","stepContental","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","httpsAlert","setHttpsAlert","URL","regions","S3Guide","alertOpen","setAlertOpen","freeSolo","_","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","PolicyList","pid","MaxStorage","getStyles","personName","indexOf","typography","fontWeightRegular","fontWeightMedium","GroupForm","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","compress_size","decompress_size","handleOptionCheckChange","renderValue","selected","chips","chip","share_free","one_time_download","aria2","archive_download","archive_task","relocate","EditGroupPreload","UserFilter","setSearch","status","keywords","setKeywords","nick","email","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","setSelected","isSelected","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","Score","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","deleteBatch","force","DeleteForever","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Order","orders","setOrders","OrderNo","Method","Price","toFixed","Download","downloads","setDownloads","Source","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","ReportList","reports","setReports","IsDir","reportReasons","Reason","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/9.d461e978.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport UserAvatar from \"../Navbar/UserAvatar\";\r\nimport {\r\n    Contacts,\r\n    Home,\r\n    Language,\r\n    Settings,\r\n    Mail,\r\n    SettingsEthernet,\r\n    AttachMoney,\r\n    Palette,\r\n    CloudDownload,\r\n    Image,\r\n    Storage,\r\n    Group,\r\n    Person,\r\n    InsertDriveFile,\r\n    Share,\r\n    ShoppingCart,\r\n    Assignment,\r\n    ListAlt,\r\n    Report,\r\n    Category,\r\n} from \"@material-ui/icons\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": { margin: 0 },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    sub: {\r\n        paddingLeft: 36,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    subMenu: {\r\n        backgroundColor: theme.palette.background.default,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    active: {\r\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\r\n        color: theme.palette.primary.main,\r\n        \"&:hover\": {\r\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\r\n        },\r\n    },\r\n    activeText: {\r\n        fontWeight: 500,\r\n    },\r\n    activeIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst items = [\r\n    {\r\n        title: \"面板首页\",\r\n        icon: <Home />,\r\n        path: \"home\",\r\n    },\r\n    {\r\n        title: \"参数设置\",\r\n        icon: <Settings />,\r\n        sub: [\r\n            {\r\n                title: \"站点信息\",\r\n                path: \"basic\",\r\n                icon: <Language />,\r\n            },\r\n            {\r\n                title: \"注册与登录\",\r\n                path: \"access\",\r\n                icon: <Contacts />,\r\n            },\r\n            {\r\n                title: \"邮件\",\r\n                path: \"mail\",\r\n                icon: <Mail />,\r\n            },\r\n            {\r\n                title: \"上传与下载\",\r\n                path: \"upload\",\r\n                icon: <SettingsEthernet />,\r\n            },\r\n            {\r\n                title: \"增值服务\",\r\n                path: \"vas\",\r\n                icon: <AttachMoney />,\r\n            },\r\n            {\r\n                title: \"外观\",\r\n                path: \"theme\",\r\n                icon: <Palette />,\r\n            },\r\n            {\r\n                title: \"离线下载\",\r\n                path: \"aria2\",\r\n                icon: <CloudDownload />,\r\n            },\r\n            {\r\n                title: \"图像处理\",\r\n                path: \"image\",\r\n                icon: <Image />,\r\n            },\r\n            {\r\n                title: \"验证码\",\r\n                path: \"captcha\",\r\n                icon: <Category />,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: \"存储策略\",\r\n        icon: <Storage />,\r\n        path: \"policy\",\r\n    },\r\n    {\r\n        title: \"用户组\",\r\n        icon: <Group />,\r\n        path: \"group\",\r\n    },\r\n    {\r\n        title: \"用户\",\r\n        icon: <Person />,\r\n        path: \"user\",\r\n    },\r\n    {\r\n        title: \"文件\",\r\n        icon: <InsertDriveFile />,\r\n        path: \"file\",\r\n    },\r\n    {\r\n        title: \"分享\",\r\n        icon: <Share />,\r\n        path: \"share\",\r\n    },\r\n    {\r\n        title: \"举报\",\r\n        icon: <Report />,\r\n        path: \"report\",\r\n    },\r\n    {\r\n        title: \"订单\",\r\n        icon: <ShoppingCart />,\r\n        path: \"order\",\r\n    },\r\n    {\r\n        title: \"持久任务\",\r\n        icon: <Assignment />,\r\n        sub: [\r\n            {\r\n                title: \"离线下载\",\r\n                path: \"download\",\r\n                icon: <CloudDownload />,\r\n            },\r\n            {\r\n                title: \"常规任务\",\r\n                path: \"task\",\r\n                icon: <ListAlt />,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default function Dashboard({ content }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(!pathHelper.isMobile());\r\n    const [menuOpen, setMenuOpen] = useState(null);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        SetSubTitle(\"仪表盘\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            SetSubTitle();\r\n        };\r\n    }, []);\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                        Cloudreve 仪表盘\r\n                    </Typography>\r\n                    <UserAvatar />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon />\r\n                        ) : (\r\n                            <ChevronLeftIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List className={classes.noPadding}>\r\n                    {items.map((item) => {\r\n                        if (item.path !== undefined) {\r\n                            return (\r\n                                <ListItem\r\n                                    onClick={() =>\r\n                                        history.push(\"/admin/\" + item.path)\r\n                                    }\r\n                                    button\r\n                                    className={clsx({\r\n                                        [classes.active]: location.pathname.startsWith(\r\n                                            \"/admin/\" + item.path\r\n                                        ),\r\n                                    })}\r\n                                    key={item.title}\r\n                                >\r\n                                    <ListItemIcon\r\n                                        className={clsx({\r\n                                            [classes.activeIcon]: location.pathname.startsWith(\r\n                                                \"/admin/\" + item.path\r\n                                            ),\r\n                                        })}\r\n                                    >\r\n                                        {item.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        className={clsx({\r\n                                            [classes.activeText]: location.pathname.startsWith(\r\n                                                \"/admin/\" + item.path\r\n                                            ),\r\n                                        })}\r\n                                        primary={item.title}\r\n                                    />\r\n                                </ListItem>\r\n                            );\r\n                        }\r\n                        return (\r\n                            // eslint-disable-next-line react/jsx-key\r\n                            <ExpansionPanel\r\n                                square\r\n                                expanded={menuOpen === item.title}\r\n                                onChange={(event, isExpanded) => {\r\n                                    setMenuOpen(isExpanded ? item.title : null);\r\n                                }}\r\n                            >\r\n                                <ExpansionPanelSummary\r\n                                    aria-controls=\"panel1d-content\"\r\n                                    id=\"panel1d-header\"\r\n                                >\r\n                                    <ListItem button key={item.title}>\r\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                        <ListItemText primary={item.title} />\r\n                                    </ListItem>\r\n                                </ExpansionPanelSummary>\r\n                                <ExpansionPanelDetails>\r\n                                    <List className={classes.subMenu}>\r\n                                        {item.sub.map((sub) => (\r\n                                            <ListItem\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/\" + sub.path\r\n                                                    )\r\n                                                }\r\n                                                className={clsx({\r\n                                                    [classes.sub]: open,\r\n                                                    [classes.active]: location.pathname.startsWith(\r\n                                                        \"/admin/\" + sub.path\r\n                                                    ),\r\n                                                })}\r\n                                                button\r\n                                                key={sub.title}\r\n                                            >\r\n                                                <ListItemIcon\r\n                                                    className={clsx({\r\n                                                        [classes.activeIcon]: location.pathname.startsWith(\r\n                                                            \"/admin/\" + sub.path\r\n                                                        ),\r\n                                                    })}\r\n                                                >\r\n                                                    {sub.icon}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={sub.title}\r\n                                                />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {content(path)}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n} from \"recharts\";\r\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {\r\n    Description,\r\n    Favorite,\r\n    FileCopy,\r\n    Forum,\r\n    GitHub,\r\n    Home,\r\n    Launch,\r\n    Lock,\r\n    People,\r\n    Public,\r\n    Telegram,\r\n} from \"@material-ui/icons\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\r\nimport axios from \"axios\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        height: \"100%\",\r\n    },\r\n    logo: {\r\n        width: 70,\r\n    },\r\n    logoContainer: {\r\n        padding: theme.spacing(3),\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        marginLeft: 16,\r\n    },\r\n    cloudreve: {\r\n        fontSize: 25,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    version: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    links: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    iconRight: {\r\n        minWidth: 0,\r\n    },\r\n    userIcon: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    fileIcon: {\r\n        backgroundColor: yellow[100],\r\n        color: yellow[800],\r\n    },\r\n    publicIcon: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n    secretIcon: {\r\n        backgroundColor: red[100],\r\n        color: red[800],\r\n    },\r\n}));\r\n\r\nexport default function Index() {\r\n    const classes = useStyles();\r\n    const [lineData, setLineData] = useState([]);\r\n    const [news, setNews] = useState([]);\r\n    const [newsUsers, setNewsUsers] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [siteURL, setSiteURL] = React.useState(\"\");\r\n    const [statistics, setStatistics] = useState({\r\n        fileTotal: 0,\r\n        userTotal: 0,\r\n        publicShareTotal: 0,\r\n        secretShareTotal: 0,\r\n    });\r\n    const [version, setVersion] = useState({\r\n        backend: \"-\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ResetSiteURL = () => {\r\n        setOpen(false);\r\n        API.patch(\"/admin/setting\", {\r\n            options: [\r\n                {\r\n                    key: \"siteURL\",\r\n                    value: window.location.origin,\r\n                },\r\n            ],\r\n        })\r\n            .then(() => {\r\n                setSiteURL(window.location.origin);\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/summary\")\r\n            .then((response) => {\r\n                const data = [];\r\n                response.data.date.forEach((v, k) => {\r\n                    data.push({\r\n                        name: v,\r\n                        file: response.data.files[k],\r\n                        user: response.data.users[k],\r\n                        share: response.data.shares[k],\r\n                    });\r\n                });\r\n                setLineData(data);\r\n                setStatistics({\r\n                    fileTotal: response.data.fileTotal,\r\n                    userTotal: response.data.userTotal,\r\n                    publicShareTotal: response.data.publicShareTotal,\r\n                    secretShareTotal: response.data.secretShareTotal,\r\n                });\r\n                setVersion(response.data.version);\r\n                setSiteURL(response.data.siteURL);\r\n                if (\r\n                    response.data.siteURL === \"\" ||\r\n                    response.data.siteURL !== window.location.origin\r\n                ) {\r\n                    setOpen(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n\r\n        axios\r\n            .get(\"/api/v3/admin/news\")\r\n            .then((response) => {\r\n                setNews(response.data.data);\r\n                const res = {};\r\n                response.data.included.forEach((v) => {\r\n                    if (v.type === \"users\") {\r\n                        res[v.id] = v.attributes;\r\n                    }\r\n                });\r\n                setNewsUsers(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"确定站点URL设置\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Typography>\r\n                            {siteURL === \"\" &&\r\n                                \"您尚未设定站点URL，是否要将其设定为当前的 \" +\r\n                                    window.location.origin +\r\n                                    \" ?\"}\r\n                            {siteURL !== \"\" &&\r\n                                \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \" +\r\n                                    window.location.origin +\r\n                                    \" ?\"}\r\n                        </Typography>\r\n                        <Typography>\r\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在\r\n                            参数设置 - 站点信息 中更改此设置。\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)} color=\"default\">\r\n                        忽略\r\n                    </Button>\r\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\r\n                        更改\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                        趋势\r\n                    </Typography>\r\n                    <ResponsiveContainer\r\n                        width=\"100%\"\r\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\r\n                    >\r\n                        <LineChart width={1200} height={300} data={lineData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Line\r\n                                name={\"文件\"}\r\n                                type=\"monotone\"\r\n                                dataKey=\"file\"\r\n                                stroke=\"#3f51b5\"\r\n                            />\r\n                            <Line\r\n                                name={\"用户\"}\r\n                                type=\"monotone\"\r\n                                dataKey=\"user\"\r\n                                stroke=\"#82ca9d\"\r\n                            />\r\n                            <Line\r\n                                name={\"分享\"}\r\n                                type=\"monotone\"\r\n                                dataKey=\"share\"\r\n                                stroke=\"#e91e63\"\r\n                            />\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                        总计\r\n                    </Typography>\r\n                    <Divider />\r\n                    <List className={classes.root}>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.userIcon}>\r\n                                    <People />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.userTotal}\r\n                                secondary=\"注册用户\"\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.fileIcon}>\r\n                                    <FileCopy />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.fileTotal}\r\n                                secondary=\"文件总数\"\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.publicIcon}>\r\n                                    <Public />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.publicShareTotal}\r\n                                secondary=\"公开分享总数\"\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.secretIcon}>\r\n                                    <Lock />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.secretShareTotal}\r\n                                secondary=\"私密分享总数\"\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper>\r\n                    <div className={classes.logoContainer}>\r\n                        <img\r\n                            className={classes.logo}\r\n                            src={\"/static/img/cloudreve.svg\"}\r\n                        />\r\n                        <div className={classes.title}>\r\n                            <Typography className={classes.cloudreve}>\r\n                                Cloudreve\r\n                            </Typography>\r\n                            <Typography className={classes.version}>\r\n                                {version.backend}{\" \"}\r\n                                {version.is_pro === \"true\" && (\r\n                                    <Chip size=\"small\" label=\"Pro\" />\r\n                                )}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div>\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://cloudreve.org\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Home />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"主页\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://github.com/cloudreve/cloudreve\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <GitHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"GitHub\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://docs.cloudreve.org/\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Description />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"文档\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://forum.cloudreve.org\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Forum />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"讨论社区\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://t.me/cloudreve_official\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Telegram />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Telegram 群组\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://docs.cloudreve.org/use/pro/jie-shao\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\r\n                                    <Favorite />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"捐助开发者\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {news &&\r\n                            news.map((v) => (\r\n                                <>\r\n                                    <ListItem\r\n                                        button\r\n                                        alignItems=\"flex-start\"\r\n                                        onClick={() =>\r\n                                            window.open(\r\n                                                \"https://forum.cloudreve.org/d/\" +\r\n                                                    v.id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                alt=\"Travis Howard\"\r\n                                                src={\r\n                                                    newsUsers[\r\n                                                        v.relationships\r\n                                                            .startUser.data.id\r\n                                                    ] &&\r\n                                                    newsUsers[\r\n                                                        v.relationships\r\n                                                            .startUser.data.id\r\n                                                    ].avatarUrl\r\n                                                }\r\n                                            />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={v.attributes.title}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={\r\n                                                            classes.inline\r\n                                                        }\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {newsUsers[\r\n                                                            v.relationships\r\n                                                                .startUser.data\r\n                                                                .id\r\n                                                        ] &&\r\n                                                            newsUsers[\r\n                                                                v.relationships\r\n                                                                    .startUser\r\n                                                                    .data.id\r\n                                                            ].username}{\" \"}\r\n                                                    </Typography>\r\n                                                    发表于{\" \"}\r\n                                                    <TimeAgo\r\n                                                        datetime={\r\n                                                            v.attributes\r\n                                                                .startTime\r\n                                                        }\r\n                                                        locale=\"zh_CN\"\r\n                                                    />\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SiteInformation() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        siteURL: \"\",\r\n        siteName: \"\",\r\n        siteTitle: \"\",\r\n        siteDes: \"\",\r\n        siteICPId: \"\",\r\n        siteScript: \"\",\r\n        siteNotice: \"\",\r\n        pwa_small_icon: \"\",\r\n        pwa_medium_icon: \"\",\r\n        pwa_large_icon: \"\",\r\n        pwa_display: \"\",\r\n        pwa_theme_color: \"\",\r\n        pwa_background_color: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        基本信息\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    主标题\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteName}\r\n                                    onChange={handleChange(\"siteName\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    站点的主标题\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    副标题\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteTitle}\r\n                                    onChange={handleChange(\"siteTitle\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    站点的副标题\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    站点描述\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteDes}\r\n                                    onChange={handleChange(\"siteDes\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    站点描述信息，可能会在分享页面摘要内展示\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    站点URL\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.siteURL}\r\n                                    onChange={handleChange(\"siteURL\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    网站备案号\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteICPId}\r\n                                    onChange={handleChange(\"siteICPId\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    工信部网站ICP备案号\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    页脚代码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    multiline\r\n                                    value={options.siteScript}\r\n                                    onChange={handleChange(\"siteScript\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    在页面底部插入的自定义HTML代码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    站点公告\r\n                                </InputLabel>\r\n                                <Input\r\n                                    placeholder={\"支持 HTML 代码\"}\r\n                                    multiline\r\n                                    value={options.siteNotice}\r\n                                    onChange={handleChange(\"siteNotice\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    展示给已登陆用户的公告，留空不展示。当此项内容更改时，所有用户会重新看到公告。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        渐进式应用 (PWA)\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    小图标\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_small_icon}\r\n                                    onChange={handleChange(\"pwa_small_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    扩展名为 ico 的小图标地址\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    中图标\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_medium_icon}\r\n                                    onChange={handleChange(\"pwa_medium_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    192x192 的中等图标地址，png 格式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    大图标\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_large_icon}\r\n                                    onChange={handleChange(\"pwa_large_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    512x512 的大图标地址，png 格式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    展示模式\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.pwa_display}\r\n                                    onChange={handleChange(\"pwa_display\")}\r\n                                >\r\n                                    <MenuItem value={\"fullscreen\"}>\r\n                                        fullscreen\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"standalone\"}>\r\n                                        standalone\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"minimal-ui\"}>\r\n                                        minimal-ui\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"browser\"}>\r\n                                        browser\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    PWA 应用添加后的展示模式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    主题色\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_theme_color}\r\n                                    onChange={handleChange(\"pwa_theme_color\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    CSS 色值，影响 PWA\r\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    背景色\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_background_color}\r\n                                    onChange={handleChange(\r\n                                        \"pwa_background_color\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    CSS 色值\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nexport default function AlertDialog({ title, msg, open, onClose }) {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography>{msg}</Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    知道了\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function FileSelector({ onChange, value, label }) {\r\n    const [selectValue, setSelectValue] = React.useState(\r\n        value.map((v) => {\r\n            return {\r\n                ID: v,\r\n                Name: \"文件ID \" + v,\r\n            };\r\n        })\r\n    );\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [inputValue, setInputValue] = React.useState(\"\");\r\n    const [options, setOptions] = React.useState([]);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        let active = true;\r\n        if (\r\n            inputValue === \"\" ||\r\n            selectValue.findIndex((v) => v.ID.toString() === inputValue) >= 0\r\n        ) {\r\n            setOptions([]);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/file/list\", {\r\n            page: 1,\r\n            page_size: 10,\r\n            order_by: \"id desc\",\r\n            conditions: {\r\n                id: inputValue,\r\n            },\r\n            searches: {},\r\n        })\r\n            .then((response) => {\r\n                if (active) {\r\n                    let newOptions = [];\r\n                    newOptions = [...newOptions, ...response.data.items];\r\n                    setOptions(newOptions);\r\n                }\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                setLoading(false);\r\n            });\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [selectValue, inputValue]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            multiple\r\n            style={{ width: 300 }}\r\n            options={options}\r\n            getOptionLabel={(option) =>\r\n                typeof option === \"string\" ? option : option.Name\r\n            }\r\n            filterOptions={(x) => x}\r\n            loading={loading}\r\n            autoComplete\r\n            includeInputInList\r\n            filterSelectedOptions\r\n            value={selectValue}\r\n            onInputChange={(event, newInputValue) => {\r\n                setInputValue(newInputValue);\r\n            }}\r\n            onChange={(event, newValue) => {\r\n                setSelectValue(newValue);\r\n                onChange(JSON.stringify(newValue.map((v) => v.ID)));\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField {...params} label={label} type={\"number\"} />\r\n            )}\r\n            renderOption={(option) => (\r\n                <Typography noWrap>{option.Name}</Typography>\r\n            )}\r\n        />\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport AlertDialog from \"../Dialogs/Alert\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FileSelector from \"../Common/FileSelector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Access() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [initCompleted, setInitComplete] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        register_enabled: \"1\",\r\n        default_group: \"1\",\r\n        email_active: \"0\",\r\n        login_captcha: \"0\",\r\n        reg_captcha: \"0\",\r\n        forget_captcha: \"0\",\r\n        qq_login: \"0\",\r\n        qq_direct_login: \"0\",\r\n        qq_login_id: \"\",\r\n        qq_login_key: \"\",\r\n        authn_enabled: \"0\",\r\n        mail_domain_filter: \"0\",\r\n        mail_domain_filter_list: \"\",\r\n        initial_files: \"[]\",\r\n    });\r\n    const [siteURL, setSiteURL] = useState(\"\");\r\n    const [groups, setGroups] = useState([]);\r\n    const [httpAlert, setHttpAlert] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: [...Object.keys(options), \"siteURL\"],\r\n        })\r\n            .then((response) => {\r\n                setSiteURL(response.data.siteURL);\r\n                delete response.data.siteURL;\r\n                setOptions(response.data);\r\n                setInitComplete(true);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                title={\"提示\"}\r\n                msg={\r\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\r\n                }\r\n                onClose={() => setHttpAlert(false)}\r\n                open={httpAlert}\r\n            />\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        注册与登录\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.register_enabled === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"register_enabled\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"允许新用户注册\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    关闭后，无法再通过前台注册新的用户\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.email_active === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"email_active\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"邮件激活\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.reg_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"reg_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"注册验证码\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否启用注册表单验证码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.login_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"login_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"登录验证码\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否启用登录表单验证码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.forget_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"forget_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"找回密码验证码\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否启用找回密码表单验证码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.authn_enabled === \"1\"\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    !siteURL.startsWith(\r\n                                                        \"https://\"\r\n                                                    )\r\n                                                ) {\r\n                                                    setHttpAlert(true);\r\n                                                    return;\r\n                                                }\r\n                                                handleChange(\"authn_enabled\")(\r\n                                                    e\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Web Authn\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\r\n                                    HTTPS 才能使用。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    默认用户组\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.default_group}\r\n                                    onChange={handleInputChange(\r\n                                        \"default_group\"\r\n                                    )}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID === 3) {\r\n                                            return null;\r\n                                        }\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={v.ID}\r\n                                                value={v.ID.toString()}\r\n                                            >\r\n                                                {v.Name}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户注册后的初始用户组\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                {initCompleted && (\r\n                                    <FileSelector\r\n                                        label={\"初始文件\"}\r\n                                        value={JSON.parse(\r\n                                            options.initial_files\r\n                                        )}\r\n                                        onChange={(v) =>\r\n                                            handleInputChange(\"initial_files\")({\r\n                                                target: { value: v },\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                )}\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    指定用户注册后初始拥有的文件。输入文件 ID\r\n                                    搜索并添加现有文件。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    过滤注册邮箱域\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.mail_domain_filter}\r\n                                    onChange={handleInputChange(\r\n                                        \"mail_domain_filter\"\r\n                                    )}\r\n                                    required\r\n                                >\r\n                                    {[\"不启用\", \"白名单\", \"黑名单\"].map(\r\n                                        (v, i) => (\r\n                                            <MenuItem\r\n                                                key={i}\r\n                                                value={i.toString()}\r\n                                            >\r\n                                                {v}\r\n                                            </MenuItem>\r\n                                        )\r\n                                    )}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否限制可用于注册的电子邮箱域\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {options.mail_domain_filter !== \"0\" && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        邮箱域过滤规则\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        value={options.mail_domain_filter_list}\r\n                                        onChange={handleChange(\r\n                                            \"mail_domain_filter_list\"\r\n                                        )}\r\n                                        multiline\r\n                                        rowsMax=\"10\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        多个域请使用半角逗号隔开\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        QQ互联\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Alert severity=\"info\">\r\n                                创建应用时，回调地址请填写：\r\n                                {siteURL.endsWith(\"/\")\r\n                                    ? siteURL + \"login/qq\"\r\n                                    : siteURL + \"/login/qq\"}\r\n                            </Alert>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={options.qq_login === \"1\"}\r\n                                            onChange={handleChange(\"qq_login\")}\r\n                                        />\r\n                                    }\r\n                                    label=\"开启QQ互联\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否允许绑定QQ、使用QQ登录本站\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {options.qq_login === \"1\" && (\r\n                            <>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={\r\n                                                        options.qq_direct_login ===\r\n                                                        \"1\"\r\n                                                    }\r\n                                                    onChange={handleChange(\r\n                                                        \"qq_direct_login\"\r\n                                                    )}\r\n                                                />\r\n                                            }\r\n                                            label=\"未绑定时可直接登录\"\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            开启后，如果用户使用了QQ登录，但是没有已绑定的注册用户，系统会为其创建用户并登录。这种方式创建的用户日后只能使用QQ登录。\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            APP ID\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={options.qq_login_id}\r\n                                            onChange={handleInputChange(\r\n                                                \"qq_login_id\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            应用管理页面获取到的的 APP ID\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            APP KEY\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={options.qq_login_key}\r\n                                            onChange={handleInputChange(\r\n                                                \"qq_login_key\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            应用管理页面获取到的的 APP KEY\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    buttonMargin: {\r\n        marginLeft: 8,\r\n    },\r\n}));\r\n\r\nexport default function Mail() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [test, setTest] = useState(false);\r\n    const [tesInput, setTestInput] = useState(\"\");\r\n    const [options, setOptions] = useState({\r\n        fromName: \"\",\r\n        fromAdress: \"\",\r\n        smtpHost: \"\",\r\n        smtpPort: \"\",\r\n        replyTo: \"\",\r\n        smtpUser: \"\",\r\n        smtpPass: \"\",\r\n        smtpEncryption: \"\",\r\n        mail_keepalive: \"30\",\r\n        over_used_template: \"\",\r\n        mail_activation_template: \"\",\r\n        mail_reset_pwd_template: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const sendTestMail = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/mailTest\", {\r\n            to: tesInput,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const reload = () => {\r\n        API.get(\"/admin/reload/email\")\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {})\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {});\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n                reload();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={test}\r\n                onClose={() => setTest(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography>\r\n                            发送测试邮件前，请先保存已更改的邮件设置；\r\n                        </Typography>\r\n                        <Typography>\r\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\r\n                            Cloudreve 在终端输出的错误日志。\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"收件人地址\"\r\n                        value={tesInput}\r\n                        onChange={(e) => setTestInput(e.target.value)}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setTest(false)} color=\"default\">\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => sendTestMail()}\r\n                        disabled={loading}\r\n                        color=\"primary\"\r\n                    >\r\n                        发送\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        发信\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    发件人名\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.fromName}\r\n                                    onChange={handleChange(\"fromName\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    邮件中展示的发件人姓名\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    发件人邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"email\"}\r\n                                    required\r\n                                    value={options.fromAdress}\r\n                                    onChange={handleChange(\"fromAdress\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发件邮箱的地址\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 服务器\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.smtpHost}\r\n                                    onChange={handleChange(\"smtpHost\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发件服务器地址，不含端口号\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 端口\r\n                                </InputLabel>\r\n                                <Input\r\n                                    inputProps={{ min: 1, step: 1 }}\r\n                                    type={\"number\"}\r\n                                    value={options.smtpPort}\r\n                                    onChange={handleChange(\"smtpPort\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发件服务器地址端口号\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 用户名\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.smtpUser}\r\n                                    onChange={handleChange(\"smtpUser\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发信邮箱用户名，一般与邮箱地址相同\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"password\"}\r\n                                    value={options.smtpPass}\r\n                                    onChange={handleChange(\"smtpPass\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发信邮箱密码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    回信邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.replyTo}\r\n                                    onChange={handleChange(\"replyTo\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.smtpEncryption === \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"smtpEncryption\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"强制使用 SSL 连接\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否强制使用 SSL\r\n                                    加密连接。如果无法发送邮件，可关闭此项，\r\n                                    Cloudreve 会尝试使用 STARTTLS\r\n                                    并决定是否使用加密连接\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 连接有效期 (秒)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    inputProps={{ min: 1, step: 1 }}\r\n                                    type={\"number\"}\r\n                                    value={options.mail_keepalive}\r\n                                    onChange={handleChange(\"mail_keepalive\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    有效期内建立的 SMTP\r\n                                    连接会被新邮件发送请求复用\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        邮件模板\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    新用户激活\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.mail_activation_template}\r\n                                    onChange={handleChange(\r\n                                        \"mail_activation_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    新用户注册后激活邮件的模板\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    超额提醒\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.over_used_template}\r\n                                    onChange={handleChange(\r\n                                        \"over_used_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户因增值服务过期，容量超出限制后发送的提醒邮件模板\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    重置密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.mail_reset_pwd_template}\r\n                                    onChange={handleChange(\r\n                                        \"mail_reset_pwd_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    密码重置邮件模板\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                    {\"   \"}\r\n                    <Button\r\n                        className={classes.buttonMargin}\r\n                        variant={\"outlined\"}\r\n                        color={\"primary\"}\r\n                        onClick={() => setTest(true)}\r\n                    >\r\n                        发送测试邮件\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\n\r\nconst unitTransform = (v) => {\r\n    if (v < 1024) {\r\n        return [Math.round(v), 1];\r\n    }\r\n    if (v < 1024 * 1024) {\r\n        return [Math.round(v / 1024), 1024];\r\n    }\r\n    if (v < 1024 * 1024 * 1024) {\r\n        return [Math.round(v / (1024 * 1024)), 1024 * 1024];\r\n    }\r\n    if (v < 1024 * 1024 * 1024 * 1024) {\r\n        return [Math.round(v / (1024 * 1024 * 1024)), 1024 * 1024 * 1024];\r\n    }\r\n    return [\r\n        Math.round(v / (1024 * 1024 * 1024 * 1024)),\r\n        1024 * 1024 * 1024 * 1024,\r\n    ];\r\n};\r\n\r\nexport default function SizeInput({\r\n    onChange,\r\n    min,\r\n    value,\r\n    required,\r\n    label,\r\n    max,\r\n    suffix,\r\n}) {\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [unit, setUnit] = useState(1);\r\n    let first = true;\r\n\r\n    const transform = useCallback(() => {\r\n        const res = unitTransform(value);\r\n        if (first && value !== 0) {\r\n            setUnit(res[1]);\r\n            first = false;\r\n        }\r\n        return res;\r\n    }, [value]);\r\n\r\n    return (\r\n        <FormControl>\r\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\r\n            <Input\r\n                style={{ width: 200 }}\r\n                value={transform()[0]}\r\n                type={\"number\"}\r\n                inputProps={{ min: min, step: 1 }}\r\n                onChange={(e) => {\r\n                    if (e.target.value * unit < max) {\r\n                        onChange({\r\n                            target: {\r\n                                value: (e.target.value * unit).toString(),\r\n                            },\r\n                        });\r\n                    } else {\r\n                        ToggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            \"超出最大尺寸限制\",\r\n                            \"warning\"\r\n                        );\r\n                    }\r\n                }}\r\n                required={required}\r\n                endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={unit}\r\n                            onChange={(e) => {\r\n                                if (transform()[0] * e.target.value < max) {\r\n                                    onChange({\r\n                                        target: {\r\n                                            value: (\r\n                                                transform()[0] * e.target.value\r\n                                            ).toString(),\r\n                                        },\r\n                                    });\r\n                                    setUnit(e.target.value);\r\n                                } else {\r\n                                    ToggleSnackbar(\r\n                                        \"top\",\r\n                                        \"right\",\r\n                                        \"超出最大尺寸限制\",\r\n                                        \"warning\"\r\n                                    );\r\n                                }\r\n                            }}\r\n                        >\r\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\r\n                            <MenuItem value={1024}>\r\n                                KB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024}>\r\n                                MB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024 * 1024}>\r\n                                GB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\r\n                                TB{suffix && suffix}\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UploadDownload() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        max_worker_num: \"1\",\r\n        max_parallel_transfer: \"1\",\r\n        temp_path: \"\",\r\n        maxEditSize: \"0\",\r\n        onedrive_chunk_retries: \"0\",\r\n        archive_timeout: \"0\",\r\n        download_timeout: \"0\",\r\n        preview_timeout: \"0\",\r\n        doc_preview_timeout: \"0\",\r\n        upload_credential_timeout: \"0\",\r\n        upload_session_timeout: \"0\",\r\n        slave_api_timeout: \"0\",\r\n        onedrive_monitor_timeout: \"0\",\r\n        share_download_session_timeout: \"0\",\r\n        onedrive_callback_check: \"0\",\r\n        reset_after_upload_failed: \"0\",\r\n        onedrive_source_timeout: \"0\",\r\n    });\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"1\" : \"0\";\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        存储与传输\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    Worker 数量\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.max_worker_num}\r\n                                    onChange={handleChange(\"max_worker_num\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    任务队列最多并行执行的任务数，保存后需要重启\r\n                                    Cloudreve 生效\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    中转并行传输\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.max_parallel_transfer}\r\n                                    onChange={handleChange(\r\n                                        \"max_parallel_transfer\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    任务队列中转任务传输时，最大并行协程数\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    临时目录\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.temp_path}\r\n                                    onChange={handleChange(\"temp_path\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <SizeInput\r\n                                    value={options.maxEditSize}\r\n                                    onChange={handleChange(\"maxEditSize\")}\r\n                                    required\r\n                                    min={0}\r\n                                    max={2147483647}\r\n                                    label={\"文本文件在线编辑大小\"}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    OneDrive 分片错误重试\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.onedrive_chunk_retries}\r\n                                    onChange={handleChange(\r\n                                        \"onedrive_chunk_retries\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    OneDrive\r\n                                    存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.reset_after_upload_failed ===\r\n                                                \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"reset_after_upload_failed\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"上传校验失败时强制重置连接\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        有效期 (秒)\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    打包下载\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.archive_timeout}\r\n                                    onChange={handleChange(\"archive_timeout\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    下载会话\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.download_timeout}\r\n                                    onChange={handleChange(\"download_timeout\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    预览链接\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.preview_timeout}\r\n                                    onChange={handleChange(\"preview_timeout\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    Office 文档预览连接\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.doc_preview_timeout}\r\n                                    onChange={handleChange(\r\n                                        \"doc_preview_timeout\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    上传凭证\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.upload_credential_timeout}\r\n                                    onChange={handleChange(\r\n                                        \"upload_credential_timeout\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    上传会话\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.upload_session_timeout}\r\n                                    onChange={handleChange(\r\n                                        \"upload_session_timeout\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    超出后不再处理此上传的回调请求\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    从机API请求\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.slave_api_timeout}\r\n                                    onChange={handleChange(\"slave_api_timeout\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    分享下载会话\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={\r\n                                        options.share_download_session_timeout\r\n                                    }\r\n                                    onChange={handleChange(\r\n                                        \"share_download_session_timeout\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    设定时间内重复下载分享文件，不会被记入总下载次数\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    OneDrive 客户端上传监控间隔\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.onedrive_monitor_timeout}\r\n                                    onChange={handleChange(\r\n                                        \"onedrive_monitor_timeout\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    每间隔所设定时间，Cloudreve 会向 OneDrive\r\n                                    请求检查客户端上传情况已确保客户端上传可控\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    OneDrive 回调等待\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.onedrive_callback_check}\r\n                                    onChange={handleChange(\r\n                                        \"onedrive_callback_check\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    OneDrive\r\n                                    客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    OneDrive 下载请求缓存\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        max: 3659,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.onedrive_source_timeout}\r\n                                    onChange={handleChange(\r\n                                        \"onedrive_source_timeout\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    OneDrive 获取文件下载 URL\r\n                                    后可将结果缓存，减轻热门文件下载API请求频率\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    formContainer: {\r\n        margin: \"8px 0 8px 0\",\r\n    },\r\n}));\r\n\r\nconst packEditToForm = (target) => {\r\n    return {\r\n        ...target,\r\n        size: target.size.toString(),\r\n        time: (target.time / 86400).toString(),\r\n        price: (target.price / 100).toString(),\r\n        score: target.score.toString(),\r\n    };\r\n};\r\n\r\nconst defaultPack = {\r\n    name: \"\",\r\n    size: \"1073741824\",\r\n    time: \"\",\r\n    price: \"\",\r\n    score: \"\",\r\n};\r\n\r\nexport default function AddPack({ open, onClose, onSubmit, packEdit }) {\r\n    const classes = useStyles();\r\n    const [pack, setPack] = useState(defaultPack);\r\n\r\n    useEffect(() => {\r\n        if (packEdit) {\r\n            setPack(packEditToForm(packEdit));\r\n        } else {\r\n            setPack(defaultPack);\r\n        }\r\n    }, [packEdit]);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPack({\r\n            ...pack,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const packCopy = { ...pack };\r\n        packCopy.size = parseInt(packCopy.size);\r\n        packCopy.time = parseInt(packCopy.time) * 86400;\r\n        packCopy.price = parseInt(packCopy.price * 100);\r\n        packCopy.score = parseInt(packCopy.score);\r\n        packCopy.id = packEdit ? packEdit.id : new Date().valueOf();\r\n        onSubmit(packCopy, packEdit !== null);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <form onSubmit={submit}>\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {packEdit ? \"编辑\" : \"添加\"}容量包\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    名称\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={pack.name}\r\n                                    onChange={handleChange(\"name\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    商品展示名称\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <SizeInput\r\n                                    value={pack.size}\r\n                                    onChange={handleChange(\"size\")}\r\n                                    min={1}\r\n                                    label={\"大小\"}\r\n                                    max={9223372036854775807}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    容量包的大小\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    有效期 (天)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={pack.time}\r\n                                    onChange={handleChange(\"time\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    每个容量包的有效期\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    单价 (元)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0.01,\r\n                                        step: 0.01,\r\n                                    }}\r\n                                    value={pack.price}\r\n                                    onChange={handleChange(\"price\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    容量包的单价\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    单价 (积分)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={pack.score}\r\n                                    onChange={handleChange(\"score\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    使用积分购买时的价格，填写为 0\r\n                                    表示不能使用积分购买\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        取消\r\n                    </Button>\r\n                    <Button type={\"submit\"} color=\"primary\">\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    formContainer: {\r\n        margin: \"8px 0 8px 0\",\r\n    },\r\n}));\r\n\r\nconst defaultGroup = {\r\n    name: \"\",\r\n    group_id: 2,\r\n    time: \"\",\r\n    price: \"\",\r\n    score: \"\",\r\n    des: \"\",\r\n    highlight: false,\r\n};\r\n\r\nconst groupEditToForm = (target) => {\r\n    return {\r\n        ...target,\r\n        time: (target.time / 86400).toString(),\r\n        price: (target.price / 100).toString(),\r\n        score: target.score.toString(),\r\n        des: target.des.join(\"\\n\"),\r\n    };\r\n};\r\n\r\nexport default function AddGroup({ open, onClose, onSubmit, groupEdit }) {\r\n    const classes = useStyles();\r\n    const [groups, setGroups] = useState([]);\r\n    const [group, setGroup] = useState(defaultGroup);\r\n\r\n    useEffect(() => {\r\n        if (groupEdit) {\r\n            setGroup(groupEditToForm(groupEdit));\r\n        } else {\r\n            setGroup(defaultGroup);\r\n        }\r\n    }, [groupEdit]);\r\n\r\n    useEffect(() => {\r\n        if (open && groups.length === 0) {\r\n            API.get(\"/admin/groups\")\r\n                .then((response) => {\r\n                    setGroups(response.data);\r\n                })\r\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                .catch(() => {});\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [open]);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            [name]: event.target.checked,\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const groupCopy = { ...group };\r\n        groupCopy.time = parseInt(groupCopy.time) * 86400;\r\n        groupCopy.price = parseInt(groupCopy.price * 100);\r\n        groupCopy.score = parseInt(groupCopy.score);\r\n        groupCopy.id = groupEdit ? groupEdit.id : new Date().valueOf();\r\n        groupCopy.des = groupCopy.des.split(\"\\n\");\r\n        onSubmit(groupCopy, groupEdit !== null);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            maxWidth={\"xs\"}\r\n            scroll={\"paper\"}\r\n        >\r\n            <form onSubmit={submit}>\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {groupEdit ? \"编辑\" : \"添加\"}可购用户组\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    名称\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={group.name}\r\n                                    onChange={handleChange(\"name\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    商品展示名称\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    用户组\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={group.group_id}\r\n                                    onChange={handleChange(\"group_id\")}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID !== 3) {\r\n                                            return (\r\n                                                <MenuItem value={v.ID}>\r\n                                                    {v.Name}\r\n                                                </MenuItem>\r\n                                            );\r\n                                        }\r\n                                        return null;\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    购买后升级的用户组\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    有效期 (天)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={group.time}\r\n                                    onChange={handleChange(\"time\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    单位购买时间的有效期\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    单价 (元)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0.01,\r\n                                        step: 0.01,\r\n                                    }}\r\n                                    value={group.price}\r\n                                    onChange={handleChange(\"price\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户组的单价\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    单价 (积分)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={group.score}\r\n                                    onChange={handleChange(\"score\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    使用积分购买时的价格，填写为 0\r\n                                    表示不能使用积分购买\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    商品描述 (一行一个)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={group.des}\r\n                                    onChange={handleChange(\"des\")}\r\n                                    multiline\r\n                                    rowsMax={10}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    购买页面展示的商品描述\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={group.highlight}\r\n                                            onChange={handleCheckChange(\r\n                                                \"highlight\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"突出展示\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    开启后，在商品选择页面会被突出展示\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color=\"default\">\r\n                        取消\r\n                    </Button>\r\n                    <Button type={\"submit\"} color=\"primary\">\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    formContainer: {\r\n        margin: \"8px 0 8px 0\",\r\n    },\r\n}));\r\n\r\nexport default function AddRedeem({ open, onClose, products, onSuccess }) {\r\n    const classes = useStyles();\r\n    const [input, setInput] = useState({\r\n        num: 1,\r\n        id: 0,\r\n        time: 1,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        input.num = parseInt(input.num);\r\n        input.id = parseInt(input.id);\r\n        input.time = parseInt(input.time);\r\n        input.type = 2;\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].id === input.id) {\r\n                if (products[i].group_id !== undefined) {\r\n                    input.type = 1;\r\n                } else {\r\n                    input.type = 0;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        API.post(\"/admin/redeem\", input)\r\n            .then((response) => {\r\n                onSuccess(response.data);\r\n                onClose();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <form onSubmit={submit}>\r\n                <DialogTitle id=\"alert-dialog-title\">生成兑换码</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    生成数量\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                        max: 100,\r\n                                    }}\r\n                                    value={input.num}\r\n                                    onChange={handleChange(\"num\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    激活码批量生成数量\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    对应商品\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={input.id}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"id\")(e);\r\n                                    }}\r\n                                >\r\n                                    {products.map((v) => (\r\n                                        <MenuItem\r\n                                            key={v.id}\r\n                                            value={v.id}\r\n                                            data-type={\"1\"}\r\n                                        >\r\n                                            {v.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                    <MenuItem value={0}>积分</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.formContainer}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    商品数量\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    value={input.time}\r\n                                    onChange={handleChange(\"time\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    对于积分类商品，此处为积分数量，其他商品为时长倍数\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={loading}\r\n                        onClick={onClose}\r\n                        color=\"default\"\r\n                    >\r\n                        取消\r\n                    </Button>\r\n                    <Button disabled={loading} type={\"submit\"} color=\"primary\">\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AddPack from \"../Dialogs/AddPack\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport AddGroup from \"../Dialogs/AddGroupk\";\r\nimport AddRedeem from \"../Dialogs/AddRedeem\";\r\nimport AlertDialog from \"../Dialogs/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    tabForm: {\r\n        marginTop: 20,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    navigator: {\r\n        marginTop: 10,\r\n    },\r\n}));\r\n\r\nconst product = {};\r\n\r\nexport default function VAS() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [tab, setTab] = useState(0);\r\n    const [options, setOptions] = useState({\r\n        alipay_enabled: \"0\",\r\n        payjs_enabled: \"0\",\r\n        wechat_enabled: \"0\",\r\n        payjs_id: \"\",\r\n        appid: \"\",\r\n        appkey: \"\",\r\n        shopid: \"\",\r\n        payjs_secret: \"\",\r\n        wechat_appid: \"\",\r\n        wechat_mchid: \"\",\r\n        wechat_serial_no: \"\",\r\n        wechat_api_key: \"\",\r\n        wechat_pk_content: \"\",\r\n        score_enabled: \"0\",\r\n        share_score_rate: \"0\",\r\n        score_price: \"0\",\r\n        ban_time: \"0\",\r\n        group_sell_data: \"[]\",\r\n        pack_data: \"[]\",\r\n    });\r\n    const [groups, setGroups] = useState([]);\r\n    const [packs, setPacks] = useState([]);\r\n    const [addPack, setAddPack] = useState(false);\r\n    const [addGroup, setAddGroup] = useState(false);\r\n    const [packEdit, setPackEdit] = useState(null);\r\n    const [groupEdit, setGroupEdit] = useState(null);\r\n    const [addRedeem, setAddRedeem] = useState(false);\r\n    const [redeems, setRedeems] = useState([]);\r\n    const [redeemsRes, setRedeemsRes] = useState([]);\r\n    const [redeemsResOpen, setRedeemsResOpen] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize] = useState(20);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadRedeemList = () => {\r\n        API.post(\"/admin/redeem/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n        })\r\n            .then((response) => {\r\n                setRedeems(response.data.items);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const res = JSON.parse(options.group_sell_data);\r\n        res.forEach((k) => {\r\n            product[k.id] = k.name;\r\n        });\r\n        setGroups(res);\r\n    }, [options.group_sell_data]);\r\n\r\n    useEffect(() => {\r\n        const res = JSON.parse(options.pack_data);\r\n        res.forEach((k) => {\r\n            product[k.id] = k.name;\r\n        });\r\n        setPacks(res);\r\n    }, [options.pack_data]);\r\n\r\n    useEffect(() => {\r\n        if (tab === 3) {\r\n            loadRedeemList();\r\n        }\r\n    }, [tab, page, pageSize]);\r\n\r\n    const deleteRedeem = (id) => {\r\n        API.delete(\"/admin/redeem/\" + id)\r\n            .then(() => {\r\n                loadRedeemList();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const redeemGenerated = (codes) => {\r\n        setRedeemsRes(codes);\r\n        setRedeemsResOpen(true);\r\n        loadRedeemList();\r\n    };\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const updateOption = () => {\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        updateOption();\r\n    };\r\n\r\n    const updatePackOption = (name, pack) => {\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: k === name ? pack : options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已保存\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleAddPack = (pack, isEdit) => {\r\n        setAddPack(false);\r\n        setPackEdit(null);\r\n        let newPacks;\r\n        if (isEdit) {\r\n            newPacks = packs.map((v) => {\r\n                if (v.id === pack.id) {\r\n                    return pack;\r\n                }\r\n                return v;\r\n            });\r\n        } else {\r\n            newPacks = [...packs, pack];\r\n        }\r\n\r\n        setPacks(newPacks);\r\n        const newPackData = JSON.stringify(newPacks);\r\n        setOptions({ ...options, pack_data: newPackData });\r\n        updatePackOption(\"pack_data\", newPackData);\r\n    };\r\n\r\n    const handleAddGroup = (group, isEdit) => {\r\n        setAddGroup(false);\r\n        setGroupEdit(null);\r\n        let newGroup;\r\n        if (isEdit) {\r\n            newGroup = groups.map((v) => {\r\n                if (v.id === group.id) {\r\n                    return group;\r\n                }\r\n                return v;\r\n            });\r\n        } else {\r\n            newGroup = [...groups, group];\r\n        }\r\n\r\n        setGroups(newGroup);\r\n        const newGroupData = JSON.stringify(newGroup);\r\n        setOptions({ ...options, group_sell_data: newGroupData });\r\n        updatePackOption(\"group_sell_data\", newGroupData);\r\n    };\r\n\r\n    const deletePack = (id) => {\r\n        let newPacks = [...packs];\r\n        newPacks = newPacks.filter((v) => {\r\n            return v.id !== id;\r\n        });\r\n        setPacks(newPacks);\r\n        const newPackData = JSON.stringify(newPacks);\r\n        setOptions({ ...options, pack_data: newPackData });\r\n        updatePackOption(\"pack_data\", newPackData);\r\n    };\r\n\r\n    const deleteGroup = (id) => {\r\n        let newGroups = [...groups];\r\n        newGroups = newGroups.filter((v) => {\r\n            return v.id !== id;\r\n        });\r\n        setGroups(newGroups);\r\n        const newPackData = JSON.stringify(newGroups);\r\n        setOptions({ ...options, group_sell_data: newPackData });\r\n        updatePackOption(\"group_sell_data\", newPackData);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Paper square>\r\n                <Tabs\r\n                    value={tab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={(e, v) => setTab(v)}\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    <Tab label=\"支付/杂项设置\" />\r\n                    <Tab label=\"容量包\" />\r\n                    <Tab label=\"可购用户组\" />\r\n                    <Tab label=\"兑换码\" />\r\n                </Tabs>\r\n                <div className={classes.content}>\r\n                    {tab === 0 && (\r\n                        <form onSubmit={submit} className={classes.tabForm}>\r\n                            <div className={classes.root}>\r\n                                <Typography variant=\"h6\" gutterBottom>\r\n                                    支付宝当面付\r\n                                </Typography>\r\n                                <div className={classes.formContainer}>\r\n                                    <div className={classes.form}>\r\n                                        <FormControl fullWidth>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={\r\n                                                            options.alipay_enabled ===\r\n                                                            \"1\"\r\n                                                        }\r\n                                                        onChange={handleCheckChange(\r\n                                                            \"alipay_enabled\"\r\n                                                        )}\r\n                                                    />\r\n                                                }\r\n                                                label=\"开启\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    {options.alipay_enabled === \"1\" && (\r\n                                        <>\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        App- ID\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.appid}\r\n                                                        onChange={handleChange(\r\n                                                            \"appid\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        当面付应用的 APPID\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        RSA 应用私钥\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.appkey}\r\n                                                        onChange={handleChange(\r\n                                                            \"appkey\"\r\n                                                        )}\r\n                                                        multiline\r\n                                                        rowsMax={10}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        当面付应用的 RSA2\r\n                                                        (SHA256)\r\n                                                        私钥，一般是由您自己生成。\r\n                                                        详情参考\r\n                                                        <Link\r\n                                                            target={\"_blank\"}\r\n                                                            href={\r\n                                                                \"https://docs.open.alipay.com/291/105971\"\r\n                                                            }\r\n                                                        >\r\n                                                            生成 RSA 密钥\r\n                                                        </Link>\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        支付宝公钥\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.shopid}\r\n                                                        onChange={handleChange(\r\n                                                            \"shopid\"\r\n                                                        )}\r\n                                                        multiline\r\n                                                        rowsMax={10}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        由支付宝提供，可在\r\n                                                        应用管理 - 应用信息 -\r\n                                                        接口加签方式 中获取\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={classes.root}>\r\n                                <Typography variant=\"h6\" gutterBottom>\r\n                                    微信官方扫码支付\r\n                                </Typography>\r\n                                <div className={classes.formContainer}>\r\n                                    <div className={classes.form}>\r\n                                        <FormControl fullWidth>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={\r\n                                                            options.wechat_enabled ===\r\n                                                            \"1\"\r\n                                                        }\r\n                                                        onChange={handleCheckChange(\r\n                                                            \"wechat_enabled\"\r\n                                                        )}\r\n                                                    />\r\n                                                }\r\n                                                label=\"开启\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    {options.wechat_enabled === \"1\" && (\r\n                                        <>\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        应用ID\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.wechat_appid}\r\n                                                        onChange={handleChange(\r\n                                                            \"wechat_appid\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        直连商户申请的公众号或移动应用appid\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        直连商户号\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.wechat_mchid}\r\n                                                        onChange={handleChange(\r\n                                                            \"wechat_mchid\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        直连商户的商户号，由微信支付生成并下发。\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        API v3 密钥\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.wechat_api_key}\r\n                                                        onChange={handleChange(\r\n                                                            \"wechat_api_key\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        商户需先在【商户平台】-【API安全】的页面设置该密钥，请求才能通过微信支付的签名校验。密钥的长度为32个字节。\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        商户证书序列号\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.wechat_serial_no}\r\n                                                        onChange={handleChange(\r\n                                                            \"wechat_serial_no\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        登陆商户平台【API安全】-【API证书】-【查看证书】，可查看商户API证书序列号。\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        商户API 私钥\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.wechat_pk_content}\r\n                                                        onChange={handleChange(\r\n                                                            \"wechat_pk_content\"\r\n                                                        )}\r\n                                                        multiline\r\n                                                        rowsMax={10}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        私钥文件 apiclient_key.pem 的内容\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={classes.root}>\r\n                                <Typography variant=\"h6\" gutterBottom>\r\n                                    PAYJS 微信支付\r\n                                </Typography>\r\n\r\n                                <div className={classes.formContainer}>\r\n                                    <div className={classes.form}>\r\n                                        <Alert severity=\"info\">\r\n                                            <Typography variant=\"body2\">\r\n                                                此服务由第三方平台{\" \"}\r\n                                                <Link\r\n                                                    href={\"https://payjs.cn/\"}\r\n                                                    target={\"_blank\"}\r\n                                                >\r\n                                                    PAYJS\r\n                                                </Link>{\" \"}\r\n                                                提供， 产生的任何纠纷与\r\n                                                Cloudreve 开发者无关。\r\n                                            </Typography>\r\n                                        </Alert>\r\n                                    </div>\r\n                                    <div className={classes.form}>\r\n                                        <FormControl fullWidth>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={\r\n                                                            options.payjs_enabled ===\r\n                                                            \"1\"\r\n                                                        }\r\n                                                        onChange={handleCheckChange(\r\n                                                            \"payjs_enabled\"\r\n                                                        )}\r\n                                                    />\r\n                                                }\r\n                                                label=\"开启\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    {options.payjs_enabled === \"1\" && (\r\n                                        <>\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        商户号\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={options.payjs_id}\r\n                                                        onChange={handleChange(\r\n                                                            \"payjs_id\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        可在 PAYJS\r\n                                                        管理面板首页看到\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n\r\n                                            <div className={classes.form}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel htmlFor=\"component-helper\">\r\n                                                        通信密钥\r\n                                                    </InputLabel>\r\n                                                    <Input\r\n                                                        value={\r\n                                                            options.payjs_secret\r\n                                                        }\r\n                                                        onChange={handleChange(\r\n                                                            \"payjs_secret\"\r\n                                                        )}\r\n                                                        required\r\n                                                    />\r\n                                                    <FormHelperText id=\"component-helper-text\">\r\n                                                        可在 PAYJS\r\n                                                        管理面板首页看到\r\n                                                    </FormHelperText>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={classes.root}>\r\n                                <Typography variant=\"h6\" gutterBottom>\r\n                                    杂项设置\r\n                                </Typography>\r\n                                <div className={classes.formContainer}>\r\n                                    <div className={classes.form}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel htmlFor=\"component-helper\">\r\n                                                封禁缓冲期 (秒)\r\n                                            </InputLabel>\r\n                                            <Input\r\n                                                type={\"number\"}\r\n                                                inputProps={{\r\n                                                    step: 1,\r\n                                                    min: 1,\r\n                                                }}\r\n                                                value={options.ban_time}\r\n                                                onChange={handleChange(\r\n                                                    \"ban_time\"\r\n                                                )}\r\n                                                required\r\n                                            />\r\n                                            <FormHelperText id=\"component-helper-text\">\r\n                                                用户保持容量超额状态的最长时长，超出时长该用户会被系统冻结\r\n                                            </FormHelperText>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <FormControl fullWidth>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={\r\n                                                            options.score_enabled ===\r\n                                                            \"1\"\r\n                                                        }\r\n                                                        onChange={handleCheckChange(\r\n                                                            \"score_enabled\"\r\n                                                        )}\r\n                                                    />\r\n                                                }\r\n                                                label=\"允许为分享定价\"\r\n                                            />\r\n                                            <FormHelperText>\r\n                                                开启后，用户可为分享设定积分价格，下载需要扣除积分\r\n                                            </FormHelperText>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    {options.score_enabled === \"1\" && (\r\n                                        <div className={classes.form}>\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel htmlFor=\"component-helper\">\r\n                                                    积分到账比率 (%)\r\n                                                </InputLabel>\r\n                                                <Input\r\n                                                    type={\"number\"}\r\n                                                    inputProps={{\r\n                                                        step: 1,\r\n                                                        min: 0,\r\n                                                        max: 100,\r\n                                                    }}\r\n                                                    value={\r\n                                                        options.share_score_rate\r\n                                                    }\r\n                                                    onChange={handleChange(\r\n                                                        \"share_score_rate\"\r\n                                                    )}\r\n                                                    required\r\n                                                />\r\n                                                <FormHelperText id=\"component-helper-text\">\r\n                                                    购买下载设定价格的分享，分享者实际到账的积分比率\r\n                                                </FormHelperText>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div className={classes.form}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel htmlFor=\"component-helper\">\r\n                                                积分价格 (分)\r\n                                            </InputLabel>\r\n                                            <Input\r\n                                                type={\"number\"}\r\n                                                inputProps={{\r\n                                                    step: 1,\r\n                                                    min: 1,\r\n                                                }}\r\n                                                value={options.score_price}\r\n                                                onChange={handleChange(\r\n                                                    \"score_price\"\r\n                                                )}\r\n                                                required\r\n                                            />\r\n                                            <FormHelperText id=\"component-helper-text\">\r\n                                                充值积分时的价格\r\n                                            </FormHelperText>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={classes.root}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    type={\"submit\"}\r\n                                    variant={\"contained\"}\r\n                                    color={\"primary\"}\r\n                                >\r\n                                    保存\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                    {tab === 1 && (\r\n                        <div>\r\n                            <Button\r\n                                onClick={() => setAddPack(true)}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                            >\r\n                                添加\r\n                            </Button>\r\n                            <div className={classes.tableContainer}>\r\n                                <Table size=\"small\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>名称</TableCell>\r\n                                            <TableCell>单价</TableCell>\r\n                                            <TableCell>时长</TableCell>\r\n                                            <TableCell>大小</TableCell>\r\n                                            <TableCell>操作</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {packs.map((row) => (\r\n                                            <TableRow key={row.id}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    ￥{row.price / 100}\r\n                                                    {row.score !== 0 &&\r\n                                                        \" 或 \" +\r\n                                                            row.score +\r\n                                                            \" 积分\"}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {Math.ceil(\r\n                                                        row.time / 86400\r\n                                                    )}\r\n                                                    天\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {sizeToString(row.size)}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <IconButton\r\n                                                        onClick={() => {\r\n                                                            setPackEdit(row);\r\n                                                            setAddPack(true);\r\n                                                        }}\r\n                                                        size={\"small\"}\r\n                                                    >\r\n                                                        <Edit />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            deletePack(row.id)\r\n                                                        }\r\n                                                        size={\"small\"}\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {tab === 2 && (\r\n                        <div>\r\n                            <Button\r\n                                onClick={() => setAddGroup(true)}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                            >\r\n                                添加\r\n                            </Button>\r\n                            <div className={classes.tableContainer}>\r\n                                <Table size=\"small\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>名称</TableCell>\r\n                                            <TableCell>单价</TableCell>\r\n                                            <TableCell>时长</TableCell>\r\n                                            <TableCell>高亮</TableCell>\r\n                                            <TableCell>操作</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {groups.map((row) => (\r\n                                            <TableRow key={row.id}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    ￥{row.price / 100}\r\n                                                    {row.score !== 0 &&\r\n                                                        \" 或 \" +\r\n                                                            row.score +\r\n                                                            \" 积分\"}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {Math.ceil(\r\n                                                        row.time / 86400\r\n                                                    )}\r\n                                                    天\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row.highlight\r\n                                                        ? \"是\"\r\n                                                        : \"否\"}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <IconButton\r\n                                                        onClick={() => {\r\n                                                            setGroupEdit(row);\r\n                                                            setAddGroup(true);\r\n                                                        }}\r\n                                                        size={\"small\"}\r\n                                                    >\r\n                                                        <Edit />\r\n                                                    </IconButton>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            deleteGroup(row.id)\r\n                                                        }\r\n                                                        size={\"small\"}\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {tab === 3 && (\r\n                        <div>\r\n                            <Button\r\n                                onClick={() => setAddRedeem(true)}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                            >\r\n                                添加\r\n                            </Button>\r\n                            <div className={classes.tableContainer}>\r\n                                <Table size=\"small\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>#</TableCell>\r\n                                            <TableCell>商品名</TableCell>\r\n                                            <TableCell>数量</TableCell>\r\n                                            <TableCell>兑换码</TableCell>\r\n                                            <TableCell>状态</TableCell>\r\n                                            <TableCell>操作</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {redeems.map((row) => (\r\n                                            <TableRow key={row.ID}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.ID}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row.ProductID === 0 &&\r\n                                                        \"积分\"}\r\n                                                    {product[row.ProductID] !==\r\n                                                        undefined && (\r\n                                                        <>\r\n                                                            {\r\n                                                                product[\r\n                                                                    row\r\n                                                                        .ProductID\r\n                                                                ]\r\n                                                            }\r\n                                                        </>\r\n                                                    )}\r\n                                                    {row.ProductID !== 0 &&\r\n                                                        !product[\r\n                                                            row.ProductID\r\n                                                        ] &&\r\n                                                        \"已失效商品\"}\r\n                                                </TableCell>\r\n                                                <TableCell>{row.Num}</TableCell>\r\n                                                <TableCell>\r\n                                                    {row.Code}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {!row.Used ? (\r\n                                                        <Box color=\"success.main\">\r\n                                                            未使用\r\n                                                        </Box>\r\n                                                    ) : (\r\n                                                        <Box color=\"warning.main\">\r\n                                                            已使用\r\n                                                        </Box>\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <IconButton\r\n                                                        onClick={() =>\r\n                                                            deleteRedeem(row.ID)\r\n                                                        }\r\n                                                        size={\"small\"}\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                            <div className={classes.navigator}>\r\n                                <Pagination\r\n                                    count={Math.ceil(total / pageSize)}\r\n                                    onChange={(e, v) => setPage(v)}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <AddPack\r\n                        onSubmit={handleAddPack}\r\n                        open={addPack}\r\n                        packEdit={packEdit}\r\n                        onClose={() => {\r\n                            setAddPack(false);\r\n                            setPackEdit(null);\r\n                        }}\r\n                    />\r\n                    <AddGroup\r\n                        onSubmit={handleAddGroup}\r\n                        open={addGroup}\r\n                        groupEdit={groupEdit}\r\n                        onClose={() => {\r\n                            setAddGroup(false);\r\n                            setGroupEdit(null);\r\n                        }}\r\n                    />\r\n                    <AddRedeem\r\n                        open={addRedeem}\r\n                        onSuccess={redeemGenerated}\r\n                        products={[...groups, ...packs]}\r\n                        onClose={() => setAddRedeem(false)}\r\n                    />\r\n                    <AlertDialog\r\n                        title={\"生成结果\"}\r\n                        open={redeemsResOpen}\r\n                        msg={redeemsRes.map((v, k) => (\r\n                            <div key={k}>{v}</div>\r\n                        ))}\r\n                        onClose={() => {\r\n                            setRedeemsResOpen(false);\r\n                            setRedeemsRes([]);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { CompactPicker } from \"react-color\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Add, Menu } from \"@material-ui/icons\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    picker: {\r\n        \"& div\": {\r\n            boxShadow: \"none !important\",\r\n        },\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    \"@global\": {\r\n        \".compact-picker:parent \": {\r\n            boxShadow: \"none !important\",\r\n        },\r\n    },\r\n    statusBar: {\r\n        height: 24,\r\n        width: \"100%\",\r\n    },\r\n    fab: {\r\n        textAlign: \"right\",\r\n    },\r\n}));\r\n\r\nexport default function CreateTheme({ open, onClose, onSubmit }) {\r\n    const classes = useStyles();\r\n    const [theme, setTheme] = useState({\r\n        palette: {\r\n            primary: {\r\n                main: \"#3f51b5\",\r\n                contrastText: \"#fff\",\r\n            },\r\n            secondary: {\r\n                main: \"#d81b60\",\r\n                contrastText: \"#fff\",\r\n            },\r\n        },\r\n    });\r\n\r\n    const subTheme = useCallback(() => {\r\n        return createMuiTheme(theme);\r\n    }, [theme]);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\r\n            <DialogContent>\r\n                <Grid container>\r\n                    <Grid spacing={2} md={8} xs={12} container>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                主色调\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.primary.main}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            primary: {\r\n                                                ...theme.palette.primary,\r\n                                                main: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    colors={[\r\n                                        \"#4D4D4D\",\r\n                                        \"#999999\",\r\n                                        \"#FFFFFF\",\r\n                                        \"#f44336\",\r\n                                        \"#ff9800\",\r\n                                        \"#ffeb3b\",\r\n                                        \"#cddc39\",\r\n                                        \"#A4DD00\",\r\n                                        \"#00bcd4\",\r\n                                        \"#03a9f4\",\r\n                                        \"#AEA1FF\",\r\n                                        \"#FDA1FF\",\r\n                                        \"#333333\",\r\n                                        \"#808080\",\r\n                                        \"#cccccc\",\r\n                                        \"#ff5722\",\r\n                                        \"#ffc107\",\r\n                                        \"#FCC400\",\r\n                                        \"#8bc34a\",\r\n                                        \"#4caf50\",\r\n                                        \"#009688\",\r\n                                        \"#2196f3\",\r\n                                        \"#3f51b5\",\r\n                                        \"#e91e63\",\r\n                                        \"#000000\",\r\n                                        \"#666666\",\r\n                                        \"#B3B3B3\",\r\n                                        \"#9F0500\",\r\n                                        \"#C45100\",\r\n                                        \"#FB9E00\",\r\n                                        \"#808900\",\r\n                                        \"#194D33\",\r\n                                        \"#0C797D\",\r\n                                        \"#0062B1\",\r\n                                        \"#673ab7\",\r\n                                        \"#9c27b0\",\r\n                                    ]}\r\n                                    color={theme.palette.primary.main}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                primary: {\r\n                                                    ...theme.palette.primary,\r\n                                                    main: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                辅色调\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.secondary.main}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            secondary: {\r\n                                                ...theme.palette.secondary,\r\n                                                main: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    colors={[\r\n                                        \"#4D4D4D\",\r\n                                        \"#999999\",\r\n                                        \"#FFFFFF\",\r\n                                        \"#ff1744\",\r\n                                        \"#ff3d00\",\r\n                                        \"#ffeb3b\",\r\n                                        \"#cddc39\",\r\n                                        \"#A4DD00\",\r\n                                        \"#00bcd4\",\r\n                                        \"#00e5ff\",\r\n                                        \"#AEA1FF\",\r\n                                        \"#FDA1FF\",\r\n                                        \"#333333\",\r\n                                        \"#808080\",\r\n                                        \"#cccccc\",\r\n                                        \"#ff5722\",\r\n                                        \"#ffea00\",\r\n                                        \"#ffc400\",\r\n                                        \"#c6ff00\",\r\n                                        \"#00e676\",\r\n                                        \"#76ff03\",\r\n                                        \"#00b0ff\",\r\n                                        \"#2979ff\",\r\n                                        \"#f50057\",\r\n                                        \"#000000\",\r\n                                        \"#666666\",\r\n                                        \"#B3B3B3\",\r\n                                        \"#9F0500\",\r\n                                        \"#C45100\",\r\n                                        \"#FB9E00\",\r\n                                        \"#808900\",\r\n                                        \"#1de9b6\",\r\n                                        \"#0C797D\",\r\n                                        \"#3d5afe\",\r\n                                        \"#651fff\",\r\n                                        \"#d500f9\",\r\n                                    ]}\r\n                                    color={theme.palette.secondary.main}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                secondary: {\r\n                                                    ...theme.palette.secondary,\r\n                                                    main: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                主色调文字\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.primary.contrastText}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            primary: {\r\n                                                ...theme.palette.primary,\r\n                                                contrastText: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    color={theme.palette.primary.contrastText}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                primary: {\r\n                                                    ...theme.palette.primary,\r\n                                                    contrastText: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                辅色调文字\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.secondary.contrastText}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            secondary: {\r\n                                                ...theme.palette.secondary,\r\n                                                contrastText: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    color={theme.palette.secondary.contrastText}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                secondary: {\r\n                                                    ...theme.palette.secondary,\r\n                                                    contrastText: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid spacing={2} md={4} xs={12}>\r\n                        <ThemeProvider theme={subTheme()}>\r\n                            <div\r\n                                className={classes.statusBar}\r\n                                style={{\r\n                                    backgroundColor: subTheme().palette.primary\r\n                                        .dark,\r\n                                }}\r\n                            />\r\n                            <AppBar position=\"static\">\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        className={classes.menuButton}\r\n                                        color=\"inherit\"\r\n                                        aria-label=\"menu\"\r\n                                    >\r\n                                        <Menu />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        className={classes.title}\r\n                                    >\r\n                                        Color\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <div style={{ padding: 16 }}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color={\"secondary\"}\r\n                                    label={\"文字输入\"}\r\n                                />\r\n                                <div\r\n                                    className={classes.fab}\r\n                                    style={{ paddingTop: 64 }}\r\n                                >\r\n                                    <Fab color=\"secondary\" aria-label=\"add\">\r\n                                        <Add />\r\n                                    </Fab>\r\n                                </div>\r\n                            </div>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\r\n                    创建\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CreateTheme from \"../Dialogs/CreateTheme\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 500,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    colorContainer: {\r\n        display: \"flex\",\r\n    },\r\n    colorDot: {\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: \"50%\",\r\n        marginLeft: 6,\r\n    },\r\n}));\r\n\r\nexport default function Theme() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [theme, setTheme] = useState({});\r\n    const [options, setOptions] = useState({\r\n        themes: \"{}\",\r\n        defaultTheme: \"\",\r\n        home_view_method: \"icon\",\r\n        share_view_method: \"list\",\r\n    });\r\n    const [themeConfig, setThemeConfig] = useState({});\r\n    const [themeConfigError, setThemeConfigError] = useState({});\r\n    const [create, setCreate] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteTheme = (color) => {\r\n        if (color === options.defaultTheme) {\r\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\r\n            return;\r\n        }\r\n        if (Object.keys(theme).length <= 1) {\r\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\r\n            return;\r\n        }\r\n        const themeCopy = { ...theme };\r\n        delete themeCopy[color];\r\n        const resStr = JSON.stringify(themeCopy);\r\n        setOptions({\r\n            ...options,\r\n            themes: resStr,\r\n        });\r\n    };\r\n\r\n    const addTheme = (newTheme) => {\r\n        setCreate(false);\r\n        if (theme[newTheme.palette.primary.main] !== undefined) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"主色调不能与已有配色重复\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        const res = {\r\n            ...theme,\r\n            [newTheme.palette.primary.main]: newTheme,\r\n        };\r\n        const resStr = JSON.stringify(res);\r\n        setOptions({\r\n            ...options,\r\n            themes: resStr,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const res = JSON.parse(options.themes);\r\n        const themeString = {};\r\n\r\n        Object.keys(res).map((k) => {\r\n            themeString[k] = JSON.stringify(res[k]);\r\n        });\r\n\r\n        setTheme(res);\r\n        setThemeConfig(themeString);\r\n    }, [options.themes]);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        主题配色\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>关键色</TableCell>\r\n                                        <TableCell>色彩配置</TableCell>\r\n                                        <TableCell>操作</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Object.keys(theme).map((k) => (\r\n                                        <TableRow key={k}>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                scope=\"row\"\r\n                                            >\r\n                                                <div\r\n                                                    className={\r\n                                                        classes.colorContainer\r\n                                                    }\r\n                                                >\r\n                                                    <div\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                theme[k].palette\r\n                                                                    .primary\r\n                                                                    .main,\r\n                                                        }}\r\n                                                        className={\r\n                                                            classes.colorDot\r\n                                                        }\r\n                                                    />\r\n                                                    <div\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                theme[k].palette\r\n                                                                    .secondary\r\n                                                                    .main,\r\n                                                        }}\r\n                                                        className={\r\n                                                            classes.colorDot\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <TextField\r\n                                                    error={themeConfigError[k]}\r\n                                                    helperText={\r\n                                                        themeConfigError[k] &&\r\n                                                        \"格式不正确\"\r\n                                                    }\r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    onChange={(e) => {\r\n                                                        setThemeConfig({\r\n                                                            ...themeConfig,\r\n                                                            [k]: e.target.value,\r\n                                                        });\r\n                                                    }}\r\n                                                    onBlur={(e) => {\r\n                                                        try {\r\n                                                            const res = JSON.parse(\r\n                                                                e.target.value\r\n                                                            );\r\n                                                            if (\r\n                                                                !(\r\n                                                                    \"palette\" in\r\n                                                                    res\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"primary\" in\r\n                                                                    res.palette\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"main\" in\r\n                                                                    res.palette\r\n                                                                        .primary\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"secondary\" in\r\n                                                                    res.palette\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"main\" in\r\n                                                                    res.palette\r\n                                                                        .secondary\r\n                                                                )\r\n                                                            ) {\r\n                                                                throw \"error\";\r\n                                                            }\r\n                                                            setTheme({\r\n                                                                ...theme,\r\n                                                                [k]: res,\r\n                                                            });\r\n                                                        } catch (e) {\r\n                                                            setThemeConfigError(\r\n                                                                {\r\n                                                                    ...themeConfigError,\r\n                                                                    [k]: true,\r\n                                                                }\r\n                                                            );\r\n                                                            return;\r\n                                                        }\r\n                                                        setThemeConfigError({\r\n                                                            ...themeConfigError,\r\n                                                            [k]: false,\r\n                                                        });\r\n                                                    }}\r\n                                                    value={themeConfig[k]}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <IconButton\r\n                                                    onClick={() =>\r\n                                                        deleteTheme(k)\r\n                                                    }\r\n                                                >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <div>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    style={{ marginTop: 8 }}\r\n                                    onClick={() => setCreate(true)}\r\n                                >\r\n                                    新建配色方案\r\n                                </Button>\r\n                            </div>\r\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\r\n                                <Typography variant=\"body2\">\r\n                                    完整的配置项可在{\" \"}\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://material-ui.com/zh/customization/default-theme/\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        默认主题 - Material-UI\r\n                                    </Link>{\" \"}\r\n                                    查阅。\r\n                                </Typography>\r\n                            </Alert>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    默认配色\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.defaultTheme}\r\n                                    onChange={handleChange(\"defaultTheme\")}\r\n                                >\r\n                                    {Object.keys(theme).map((k) => (\r\n                                        <MenuItem key={k} value={k}>\r\n                                            <div\r\n                                                className={\r\n                                                    classes.colorContainer\r\n                                                }\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            theme[k].palette\r\n                                                                .primary.main,\r\n                                                    }}\r\n                                                    className={classes.colorDot}\r\n                                                />\r\n                                                <div\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            theme[k].palette\r\n                                                                .secondary.main,\r\n                                                    }}\r\n                                                    className={classes.colorDot}\r\n                                                />\r\n                                            </div>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户未指定偏好配色时，站点默认使用的配色方案\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        界面\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    个人文件列表默认样式\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.home_view_method}\r\n                                    onChange={handleChange(\"home_view_method\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\r\n                                    <MenuItem value={\"smallIcon\"}>\r\n                                        小图标\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    目录分享页列表默认样式\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.share_view_method}\r\n                                    onChange={handleChange(\"share_view_method\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\r\n                                    <MenuItem value={\"smallIcon\"}>\r\n                                        小图标\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户未指定偏好样式时，目录分享页面的默认样式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n            <CreateTheme\r\n                onSubmit={addTheme}\r\n                open={create}\r\n                onClose={() => setCreate(false)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Aria2() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        aria2_rpcurl: \"\",\r\n        aria2_token: \"\",\r\n        aria2_temp_path: \"\",\r\n        aria2_options: \"\",\r\n        aria2_interval: \"0\",\r\n        aria2_call_timeout: \"0\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const reload = () => {\r\n        API.get(\"/admin/reload/aria2\")\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {})\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {});\r\n    };\r\n\r\n    const test = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/aria2/test\", {\r\n            server: options.aria2_rpcurl,\r\n            token: options.aria2_token,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"连接成功，Aria2 版本为：\" + response.data,\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n                reload();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Aria2\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\r\n                                <Typography variant=\"body2\">\r\n                                    Cloudreve 的离线下载功能由{\" \"}\r\n                                    <Link\r\n                                        href={\"https://aria2.github.io/\"}\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        Aria2\r\n                                    </Link>{\" \"}\r\n                                    驱动。如需使用，请在同一设备上以和运行\r\n                                    Cloudreve 相同的用户身份启动 Aria2， 并在\r\n                                    Aria2 的配置文件中开启 RPC\r\n                                    服务。更多信息及指引请参考文档的{\" \"}\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://docs.cloudreve.org/use/aria2\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        离线下载\r\n                                    </Link>{\" \"}\r\n                                    章节。\r\n                                </Typography>\r\n                            </Alert>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    RPC 服务器地址\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.aria2_rpcurl}\r\n                                    onChange={handleChange(\"aria2_rpcurl\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    包含端口的完整 RPC\r\n                                    服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用\r\n                                    Aria2 服务\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    RPC Secret\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.aria2_token}\r\n                                    onChange={handleChange(\"aria2_token\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    RPC 授权令牌，与 Aria2\r\n                                    配置文件中保持一致，未设置请留空。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    临时下载目录\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.aria2_temp_path}\r\n                                    onChange={handleChange(\"aria2_temp_path\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    离线下载临时下载目录的\r\n                                    <strong>绝对路径</strong>，Cloudreve\r\n                                    进程需要此目录的读、写、执行权限。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    状态刷新间隔 (秒)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    required\r\n                                    value={options.aria2_interval}\r\n                                    onChange={handleChange(\"aria2_interval\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    RPC 调用超时 (秒)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    required\r\n                                    value={options.aria2_call_timeout}\r\n                                    onChange={handleChange(\r\n                                        \"aria2_call_timeout\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    调用 RPC 服务时最长等待时间\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    全局任务参数\r\n                                </InputLabel>\r\n                                <Input\r\n                                    multiline\r\n                                    required\r\n                                    value={options.aria2_options}\r\n                                    onChange={handleChange(\"aria2_options\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    创建下载任务时携带的额外设置参数，以 JSON\r\n                                    编码后的格式书写，您可也可以将这些设置写在\r\n                                    Aria2 配置文件里，可用参数请查阅官方文档\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 8 }}\r\n                        disabled={loading}\r\n                        onClick={() => test()}\r\n                        variant={\"outlined\"}\r\n                        color={\"secondary\"}\r\n                    >\r\n                        测试连接\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ImageSetting() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        gravatar_server: \"\",\r\n        avatar_path: \"\",\r\n        avatar_size: \"\",\r\n        avatar_size_l: \"\",\r\n        avatar_size_m: \"\",\r\n        avatar_size_s: \"\",\r\n        thumb_width: \"\",\r\n        thumb_height: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        头像\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    Gravatar 服务器\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.gravatar_server}\r\n                                    onChange={handleChange(\"gravatar_server\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    Gravatar 服务器地址，可选择使用国内镜像\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    头像存储路径\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.avatar_path}\r\n                                    onChange={handleChange(\"avatar_path\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户上传自定义头像的存储路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <SizeInput\r\n                                    value={options.avatar_size}\r\n                                    onChange={handleChange(\"avatar_size\")}\r\n                                    required\r\n                                    min={0}\r\n                                    max={2147483647}\r\n                                    label={\"头像文件大小限制\"}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户可上传头像文件的最大大小\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    小头像尺寸\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_s}\r\n                                    onChange={handleChange(\"avatar_size_s\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    中头像尺寸\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_m}\r\n                                    onChange={handleChange(\"avatar_size_m\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    大头像尺寸\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_l}\r\n                                    onChange={handleChange(\"avatar_size_l\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        缩略图\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    宽度\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_width}\r\n                                    onChange={handleChange(\"thumb_width\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    高度\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_height}\r\n                                    onChange={handleChange(\"thumb_height\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { useHistory } from \"react-router\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        display: \"flex\",\r\n    },\r\n    cover: {\r\n        width: 100,\r\n        height: 60,\r\n    },\r\n    card: {},\r\n    content: {\r\n        flex: \"1 0 auto\",\r\n    },\r\n    bg: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: \"24px 24px\",\r\n    },\r\n    dialogFooter: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nconst policies = [\r\n    {\r\n        name: \"本机存储\",\r\n        img: \"local.png\",\r\n        path: \"/admin/policy/add/local\",\r\n    },\r\n    {\r\n        name: \"从机存储\",\r\n        img: \"remote.png\",\r\n        path: \"/admin/policy/add/remote\",\r\n    },\r\n    {\r\n        name: \"七牛\",\r\n        img: \"qiniu.png\",\r\n        path: \"/admin/policy/add/qiniu\",\r\n    },\r\n    {\r\n        name: \"阿里云 OSS\",\r\n        img: \"oss.png\",\r\n        path: \"/admin/policy/add/oss\",\r\n    },\r\n    {\r\n        name: \"又拍云\",\r\n        img: \"upyun.png\",\r\n        path: \"/admin/policy/add/upyun\",\r\n    },\r\n    {\r\n        name: \"腾讯云 COS\",\r\n        img: \"cos.png\",\r\n        path: \"/admin/policy/add/cos\",\r\n    },\r\n    {\r\n        name: \"OneDrive\",\r\n        img: \"onedrive.png\",\r\n        path: \"/admin/policy/add/onedrive\",\r\n    },\r\n    {\r\n        name: \"Amazon S3\",\r\n        img: \"s3.png\",\r\n        path: \"/admin/policy/add/s3\",\r\n    },\r\n];\r\n\r\nexport default function AddPolicy({ open, onClose }) {\r\n    const classes = useStyles();\r\n\r\n    const location = useHistory();\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            maxWidth={\"sm\"}\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">选择存储方式</DialogTitle>\r\n            <DialogContent dividers className={classes.bg}>\r\n                <Grid container spacing={2}>\r\n                    {policies.map((v, index) => (\r\n                        <Grid key={index} item sm={12} md={6}>\r\n                            <Card className={classes.card}>\r\n                                <CardActionArea\r\n                                    onClick={() => {\r\n                                        location.push(v.path);\r\n                                        onClose();\r\n                                    }}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    <CardMedia\r\n                                        className={classes.cover}\r\n                                        image={\"/static/img/\" + v.img}\r\n                                    />\r\n                                    <CardContent className={classes.content}>\r\n                                        <Typography\r\n                                            variant=\"subtitle1\"\r\n                                            color=\"textSecondary\"\r\n                                        >\r\n                                            {v.name}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogFooter}>\r\n                <Button\r\n                    onClick={() =>\r\n                        window.open(\r\n                            \"https://docs.cloudreve.org/use/policy/compare\"\r\n                        )\r\n                    }\r\n                    color=\"primary\"\r\n                >\r\n                    存储策略对比\r\n                </Button>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    取消\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { policyTypeMap } from \"../../../config\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport AddPolicy from \"../Dialogs/AddPolicy\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", label: \"#\", minWidth: 50 },\r\n    { id: \"name\", label: \"名称\", minWidth: 170 },\r\n    { id: \"type\", label: \"类型\", minWidth: 170 },\r\n    {\r\n        id: \"count\",\r\n        label: \"下属文件数\",\r\n        minWidth: 50,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"size\",\r\n        label: \"数据量\",\r\n        minWidth: 100,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"action\",\r\n        label: \"操作\",\r\n        minWidth: 170,\r\n        align: \"right\",\r\n    },\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Policy() {\r\n    const classes = useStyles();\r\n    const [policies, setPolicies] = useState([]);\r\n    const [statics, setStatics] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [filter, setFilter] = useState(\"all\");\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [editID, setEditID] = React.useState(0);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"code\") === \"0\") {\r\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\r\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n            conditions: filter === \"all\" ? {} : { type: filter },\r\n        })\r\n            .then((response) => {\r\n                setPolicies(response.data.items);\r\n                setStatics(response.data.statics);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, filter]);\r\n\r\n    const deletePolicy = (id) => {\r\n        API.delete(\"/admin/policy/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n        <div>\r\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => setAddDialog(true)}\r\n                    variant={\"contained\"}\r\n                >\r\n                    添加存储策略\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Select\r\n                        style={{\r\n                            marginRight: 8,\r\n                        }}\r\n                        value={filter}\r\n                        onChange={(e) => setFilter(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        <MenuItem value={\"local\"}>本机</MenuItem>\r\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\r\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\r\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\r\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\r\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\r\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\r\n                        <MenuItem value={\"s3\"}>Amazon S3</MenuItem>\r\n                    </Select>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {policies.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>\r\n                                        {policyTypeMap[row.Type] !==\r\n                                            undefined &&\r\n                                            policyTypeMap[row.Type]}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            statics[row.ID][0].toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            sizeToString(statics[row.ID][1])}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                onClick={(e) => {\r\n                                                    setEditID(row.ID);\r\n                                                    handleClick(e);\r\n                                                }}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n            <Menu\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                keepMounted\r\n            >\r\n                <MenuItem\r\n                    onClick={(e) => {\r\n                        handleClose(e);\r\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\r\n                    }}\r\n                >\r\n                    专家模式编辑\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={(e) => {\r\n                        handleClose(e);\r\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\r\n                    }}\r\n                >\r\n                    向导模式编辑\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {isFile ? \"文件名魔法变量\" : \"路径魔法变量\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TableContainer>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>魔法变量</TableCell>\r\n                                <TableCell>描述</TableCell>\r\n                                <TableCell>示例</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{randomkey16}\"}\r\n                                </TableCell>\r\n                                <TableCell>16位随机字符</TableCell>\r\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{randomkey8}\"}\r\n                                </TableCell>\r\n                                <TableCell>8位随机字符</TableCell>\r\n                                <TableCell>gWz78q30</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{timestamp}\"}\r\n                                </TableCell>\r\n                                <TableCell>秒级时间戳</TableCell>\r\n                                <TableCell>1582692933</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{timestamp_nano}\"}\r\n                                </TableCell>\r\n                                <TableCell>纳秒级时间戳</TableCell>\r\n                                <TableCell>1582692933231834600</TableCell>\r\n                            </TableRow>\r\n                            {!isSlave && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{uid}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>用户ID</TableCell>\r\n                                    <TableCell>1</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            {isFile && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{originname}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>原始文件名</TableCell>\r\n                                    <TableCell>MyPico.mp4</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            {!isFile && !isSlave && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{path}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>用户上传路径</TableCell>\r\n                                    <TableCell>/我的文件/学习资料/</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{date}\"}\r\n                                </TableCell>\r\n                                <TableCell>日期</TableCell>\r\n                                <TableCell>20060102</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{datetime}\"}\r\n                                </TableCell>\r\n                                <TableCell>日期时间</TableCell>\r\n                                <TableCell>20060102150405</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{year}\"}\r\n                                </TableCell>\r\n                                <TableCell>年份</TableCell>\r\n                                <TableCell>2006</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{month}\"}\r\n                                </TableCell>\r\n                                <TableCell>月份</TableCell>\r\n                                <TableCell>01</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{day}\"}\r\n                                </TableCell>\r\n                                <TableCell>日</TableCell>\r\n                                <TableCell>02</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{hour}\"}\r\n                                </TableCell>\r\n                                <TableCell>小时</TableCell>\r\n                                <TableCell>15</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{minute}\"}\r\n                                </TableCell>\r\n                                <TableCell>分钟</TableCell>\r\n                                <TableCell>04</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{second}\"}\r\n                                </TableCell>\r\n                                <TableCell>秒</TableCell>\r\n                                <TableCell>05</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    关闭\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nexport default function DomainInput({ onChange, value, required, label }) {\r\n    const [domain, setDomain] = useState(\"\");\r\n    const [protocol, setProtocol] = useState(\"https://\");\r\n    const [error, setError] = useState();\r\n\r\n    useState(() => {\r\n        value = value ? value : \"\";\r\n        if (value.startsWith(\"https://\")) {\r\n            setDomain(value.replace(\"https://\", \"\"));\r\n            setProtocol(\"https://\");\r\n        } else {\r\n            if (value !== \"\") {\r\n                setDomain(value.replace(\"http://\", \"\"));\r\n                setProtocol(\"http://\");\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\r\n            setError(\r\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\r\n            );\r\n        } else {\r\n            setError(\"\");\r\n        }\r\n    }, [protocol]);\r\n\r\n    return (\r\n        <FormControl>\r\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\r\n            <Input\r\n                error={error !== \"\"}\r\n                value={domain}\r\n                onChange={(e) => {\r\n                    setDomain(e.target.value);\r\n                    onChange({\r\n                        target: {\r\n                            value: protocol + e.target.value,\r\n                        },\r\n                    });\r\n                }}\r\n                required={required}\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <Select\r\n                            value={protocol}\r\n                            onChange={(e) => {\r\n                                setProtocol(e.target.value);\r\n                                onChange({\r\n                                    target: {\r\n                                        value: e.target.value + domain,\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\r\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\r\n                        </Select>\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n            {error !== \"\" && (\r\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\r\n            )}\r\n        </FormControl>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function LocalGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"local\",\r\n                  Name: \"\",\r\n                  DirNameRule: \"uploads/{uid}/{path}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const checkPathSetting = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/path\", {\r\n            path: policy.DirNameRule,\r\n        })\r\n            .then(() => {\r\n                setActiveStep(1);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 处理存储策略\r\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={checkPathSetting}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={handleChange(\r\n                                            \"IsOriginLinkEnable\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    是否要对下载/直链使用 CDN？\r\n                                    <br />\r\n                                    开启后，用户访问文件时的 URL\r\n                                    中的域名部分会被替换为 CDN 域名。\r\n                                </Typography>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl required component=\"fieldset\">\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={useCDN}\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    e.target.value === \"false\"\r\n                                                ) {\r\n                                                    setPolicy({\r\n                                                        ...policy,\r\n                                                        BaseURL: \"\",\r\n                                                    });\r\n                                                }\r\n                                                setUseCDN(e.target.value);\r\n                                            }}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"使用\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"不使用\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Collapse in={useCDN === \"true\"}>\r\n                            <div className={classes.subStepContainer}>\r\n                                <div className={classes.stepNumberContainer}>\r\n                                    <div className={classes.stepNumber}>3</div>\r\n                                </div>\r\n                                <div className={classes.subStepContent}>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        选择协议并填写 CDN 域名\r\n                                    </Typography>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <DomainInput\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                            required={\r\n                                                policy.IsOriginLinkEnable ===\r\n                                                    \"true\" && useCDN === \"true\"\r\n                                            }\r\n                                            label={\"CDN 前缀\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { randomStr } from \"../../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontSize: \"14px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储端配置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function RemoteGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"remote\",\r\n                  Name: \"\",\r\n                  Server: \"https://example.com:5212\",\r\n                  SecretKey: randomStr(64),\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testSlave = () => {\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/slave\", {\r\n            server: policy.Server,\r\n            secret: policy.SecretKey,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 处理存储策略\r\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"}从机存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                        从机存储策略允许你使用同样运行了 Cloudreve\r\n                        的服务器作为存储端， 用户上传下载流量通过 HTTP 直传。\r\n                    </Alert>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                将和主站相同版本的 Cloudreve\r\n                                程序拷贝至要作为从机的服务器上。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\r\n                                可将您的密钥填入下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        从机密钥\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            minlength: 64,\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                修改从机配置文件。\r\n                                <br />\r\n                                在从机端 Cloudreve 的同级目录下新建\r\n                                <code>conf.ini</code>\r\n                                文件，填入从机配置，启动/重启从机端 Cloudreve。\r\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\r\n                            </Typography>\r\n                            <pre>\r\n                                [System]\r\n                                <br />\r\n                                Mode = slave\r\n                                <br />\r\n                                Listen = :5212\r\n                                <br />\r\n                                <br />\r\n                                [Slave]\r\n                                <br />\r\n                                Secret = {policy.SecretKey}\r\n                                <br />\r\n                                <br />\r\n                                [CORS]\r\n                                <br />\r\n                                AllowOrigins = *<br />\r\n                                AllowMethods = OPTIONS,GET,POST\r\n                                <br />\r\n                                AllowHeaders = *<br />\r\n                            </pre>\r\n                            <Typography variant={\"body2\"}>\r\n                                从机端配置文件格式大致与主站端相同，区别在于：\r\n                                <ul>\r\n                                    <li>\r\n                                        <code>System</code>\r\n                                        分区下的\r\n                                        <code>mode</code>\r\n                                        字段必须更改为<code>slave</code>\r\n                                    </li>\r\n                                    <li>\r\n                                        必须指定<code>Slave</code>分区下的\r\n                                        <code>Secret</code>\r\n                                        字段，其值为第二步里填写或生成的密钥。\r\n                                    </li>\r\n                                    <li>\r\n                                        必须启动跨域配置，即<code>CORS</code>\r\n                                        字段的内容，\r\n                                        具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过\r\n                                        Web 端向从机上传文件。\r\n                                    </li>\r\n                                </ul>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写从机地址。\r\n                                <br />\r\n                                如果主站启用了\r\n                                HTTPS，从机也需要启用，并在下方填入 HTTPS\r\n                                协议的地址。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        从机地址\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        fullWidth\r\n                                        required\r\n                                        type={\"url\"}\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    onClick={() => testSlave()}\r\n                                    variant={\"outlined\"}\r\n                                    color={\"primary\"}\r\n                                >\r\n                                    测试从机通信\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={handleChange(\r\n                                            \"IsOriginLinkEnable\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    是否要对下载/直链使用 CDN？\r\n                                    <br />\r\n                                    开启后，用户访问文件时的 URL\r\n                                    中的域名部分会被替换为 CDN 域名。\r\n                                </Typography>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl required component=\"fieldset\">\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={useCDN}\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    e.target.value === \"false\"\r\n                                                ) {\r\n                                                    setPolicy({\r\n                                                        ...policy,\r\n                                                        BaseURL: \"\",\r\n                                                    });\r\n                                                }\r\n                                                setUseCDN(e.target.value);\r\n                                            }}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"使用\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"不使用\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Collapse in={useCDN === \"true\"}>\r\n                            <div className={classes.subStepContainer}>\r\n                                <div className={classes.stepNumberContainer}>\r\n                                    <div className={classes.stepNumber}>3</div>\r\n                                </div>\r\n                                <div className={classes.subStepContent}>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        选择协议并填写 CDN 域名\r\n                                    </Typography>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <DomainInput\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                            required={\r\n                                                policy.IsOriginLinkEnable ===\r\n                                                    \"true\" && useCDN === \"true\"\r\n                                            }\r\n                                            label={\"CDN 前缀\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                isSlave\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                isSlave\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumber } from \"../../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function RemoteGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"qiniu\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      mimetype: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 七牛 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用七牛存储策略前，请确保您在 参数设置 -\r\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\"https://portal.qiniu.com/create\"}\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    七牛控制面板\r\n                                </Link>\r\n                                创建对象存储资源。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储空间名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"私有\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"公有\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写您为存储空间绑定的 CDN 加速域名。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.BaseURL}\r\n                                    onChange={handleChange(\"BaseURL\")}\r\n                                    required\r\n                                    label={\"CDN 加速域名\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在七牛控制面板进入 个人中心 -\r\n                                密钥管理，在下方填写获得到的 AK、SK。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AK\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SK\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件 MimeType？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .mimetype === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        mimetype: \"image/*\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        mimetype: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {getNumber(4, [\r\n                                        policy.MaxSize !== \"0\",\r\n                                        policy.OptionsSerialized.file_type !==\r\n                                            \"\",\r\n                                    ])}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\r\n                                    隔开。七牛服务器会侦测文件内容以判断\r\n                                    MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            MimeType 列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .mimetype\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"mimetype\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumber } from \"../../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"跨域策略\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function OSSGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\r\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\r\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\r\n            : false\r\n    );\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"oss\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      server_side_endpoint: \"\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        if (!useLanEndpoint) {\r\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置\r\n                                - 站点信息 - 站点URL 中填写的\r\n                                地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://oss.console.aliyun.com/overview\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    OSS 管理控制台\r\n                                </Link>\r\n                                创建 Bucket。注意：创建空间类型只能选择\r\n                                <code>标准存储</code>或<code>低频访问</code>\r\n                                ，暂不支持<code>归档存储</code>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方填写您创建 Bucket 时指定的\r\n                                <code>Bucket 名称</code>：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Bucket 名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"私有\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"公共读\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                转到所创建 Bucket 的概览页面，填写\r\n                                <code>访问域名</code>栏目下\r\n                                <code>外网访问</code> 一行中间的{\" \"}\r\n                                <code>EndPoint（地域节点）</code>\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        EndPoint\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                        inputProps={{\r\n                                            pattern:\r\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\r\n                                            title:\r\n                                                \"格式不合法，只需输入域名部分即可\",\r\n                                        }}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                如果您的 Cloudreve\r\n                                部署在阿里云计算服务中，并且与 OSS\r\n                                处在同一可用区下，您可以额外指定使用内网\r\n                                EndPoint\r\n                                以节省流量开始。是否要在服务端发送请求时使用 OSS\r\n                                内网 EndPoint？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useLanEndpoint.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseLanEndpoint(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useLanEndpoint}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            内网 EndPoint\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={useLanEndpoint}\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .server_side_endpoint\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"server_side_endpoint\"\r\n                                            )}\r\n                                            inputProps={{\r\n                                                pattern:\r\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\r\n                                                title:\r\n                                                    \"格式不合法，只需输入域名部分即可\",\r\n                                            }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>6</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>7</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    前往\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://cdn.console.aliyun.com/domain/list\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        阿里云 CDN 管理控制台\r\n                                    </Link>\r\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS\r\n                                    Bucket。在下方填写 CDN\r\n                                    加速域名，并选择是否使用 HTTPS：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={\"CDN 加速域名\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在阿里云\r\n                                <Link\r\n                                    href={\r\n                                        \"https://usercenter.console.aliyun.com/#/manage/ak\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    安全信息管理\r\n                                </Link>\r\n                                页面获取 用户 AccessKey，并填写在下方。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AccessKey ID\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Access Key Secret\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(8, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    n\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web\r\n                                端上传文件，Cloudreve\r\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\r\n                                Bucket 的跨域策略，此步骤可以跳过。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我设置\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function UpyunGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"upyun\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"false\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      token: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用又拍云存储策略前，请确保您在 参数设置 -\r\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.upyun.com/services/create/file/\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    又拍云面板\r\n                                </Link>\r\n                                创建云存储服务。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方填写所创建的服务名称：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        服务名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        操作员名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        操作员密码\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用\r\n                                HTTPS：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.BaseURL}\r\n                                    onChange={handleChange(\"BaseURL\")}\r\n                                    required\r\n                                    label={\"加速域名\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。\r\n                                <br />\r\n                                前往所创建云存储服务的 功能配置 面板，转到\r\n                                访问配置 选项卡，开启 Token 防盗链并设定密码。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"已开启 Token 防盗链\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"未开启 Token 防盗链\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsPrivate === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    填写您所设置的 Token 防盗链 密钥\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            Token 防盗链 密钥\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized.token\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"token\"\r\n                                            )}\r\n                                            required={\r\n                                                policy.IsPrivate === \"true\"\r\n                                            }\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"开启 Token 防盗链后无法使用直链功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"跨域策略\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"云函数回调\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function COSGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"cos\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n    const [region, setRegion] = useState(\"ap-chengdu\");\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = policy.Server;\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const creatCallback = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/scf\", {\r\n            id: policyID,\r\n            region: region,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\r\n                setActiveStep(6);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置\r\n                                - 站点信息 - 站点URL 中填写的\r\n                                地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.cloud.tencent.com/cos5\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    COS 管理控制台\r\n                                </Link>\r\n                                创建存储桶。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                转到所创建存储桶的基础配置页面，将\r\n                                <code>空间名称</code>填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        空间名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        inputProps={{\r\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\r\n                                            title:\r\n                                                \"空间名格式不正确, 举例：ccc-1252109809\",\r\n                                        }}\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间的访问权限类型，推荐选择\r\n                                <code>私有读写</code>\r\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"私有读写\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"公共读私有写\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                转到所创建 Bucket 的基础配置，填写\r\n                                <code>基本信息</code>栏目下 给出的{\" \"}\r\n                                <code>访问域名</code>\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.Server}\r\n                                    onChange={handleChange(\"Server\")}\r\n                                    required\r\n                                    label={\"访问域名\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    前往\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://console.cloud.tencent.com/cdn/access/guid\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        腾讯云 CDN 管理控制台\r\n                                    </Link>\r\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS\r\n                                    存储桶。在下方填写 CDN\r\n                                    加速域名，并选择是否使用 HTTPS：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={\"CDN 加速域名\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(6, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在腾讯云\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.cloud.tencent.com/cam/capi\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    访问密钥\r\n                                </Link>\r\n                                页面获取\r\n                                一对访问密钥，并填写在下方。请确保这对密钥拥有\r\n                                COS 和 SCF 服务的访问权限。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SecretId\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SecretKey\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContental}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web\r\n                                端上传文件，Cloudreve\r\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\r\n                                Bucket 的跨域策略，此步骤可以跳过。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我设置\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                COS 存储桶 客户端直传需要借助腾讯云的\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.cloud.tencent.com/scf/index?rid=16\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    云函数\r\n                                </Link>\r\n                                产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\r\n                                如果是作为公有使用，请务必创建回调云函数。\r\n                                <br />\r\n                                <br />\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"}>\r\n                                Cloudreve 可以尝试帮你自动创建回调云函数，请选择\r\n                                COS 存储桶 所在地域后继续。\r\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储桶所在地区\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        value={region}\r\n                                        onChange={(e) =>\r\n                                            setRegion(e.target.value)\r\n                                        }\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"ap-beijing\"}>\r\n                                            华北地区(北京)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-chengdu\"}>\r\n                                            西南地区(成都)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-guangzhou\"}>\r\n                                            华南地区(广州)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-guangzhou-open\"}>\r\n                                            华南地区(广州Open)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-hongkong\"}>\r\n                                            港澳台地区(中国香港)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-mumbai\"}>\r\n                                            亚太南部(孟买)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-shanghai\"}>\r\n                                            华东地区(上海)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-singapore\"}>\r\n                                            亚太东南(新加坡)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"na-siliconvalley\"}>\r\n                                            美国西部(硅谷)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"na-toronto\"}>\r\n                                            北美地区(多伦多)\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => creatCallback()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我创建\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 6 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport AlertDialog from \"../../Dialogs/Alert\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"应用授权\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"账号授权\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function OneDriveGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\r\n        props.policy && props.policy.OptionsSerialized.od_proxy\r\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\r\n            : false\r\n    );\r\n    const [useSharePoint, setUseSharePoint] = useState(\r\n        props.policy && props.policy.OptionsSerialized.od_driver\r\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\r\n            : false\r\n    );\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"onedrive\",\r\n                  Name: \"\",\r\n                  BucketName: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"https://graph.microsoft.com/v1.0\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      od_redirect: \"\",\r\n                      od_proxy: \"\",\r\n                      od_driver: \"\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n    const [httpsAlert, setHttpsAlert] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: [\"siteURL\"],\r\n        })\r\n            .then((response) => {\r\n                if (!response.data.siteURL.startsWith(\"https://\")) {\r\n                    setHttpsAlert(true);\r\n                }\r\n                if (policy.OptionsSerialized.od_redirect === \"\") {\r\n                    setPolicy({\r\n                        ...policy,\r\n                        OptionsSerialized: {\r\n                            ...policy.OptionsSerialized,\r\n                            od_redirect: new URL(\r\n                                \"/api/v3/callback/onedrive/auth\",\r\n                                response.data.siteURL\r\n                            ).toString(),\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const statOAuth = () => {\r\n        setLoading(true);\r\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\r\n            .then((response) => {\r\n                window.location.href = response.data;\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // baseURL处理\r\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\r\n            policyCopy.BaseURL =\r\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\r\n        } else {\r\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\r\n        }\r\n\r\n        if (!useCDN) {\r\n            policyCopy.OptionsSerialized.od_proxy = \"\";\r\n        }\r\n\r\n        if (!useSharePoint) {\r\n            policyCopy.OptionsSerialized.od_driver = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                open={httpsAlert}\r\n                onClose={() => setHttpsAlert(false)}\r\n                title={\"警告\"}\r\n                msg={\r\n                    \"您必须启用 HTTPS 才能使用 OneDrive/SharePoint 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"\r\n                }\r\n            />\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} OneDrive/SharePoint 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    Azure Active Directory 控制台 (国际版账号)\r\n                                </Link>{\" \"}\r\n                                或者{\" \"}\r\n                                <Link\r\n                                    href={\r\n                                        \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    Azure Active Directory 控制台 (世纪互联账号)\r\n                                </Link>\r\n                                并登录，登录后进入\r\n                                <code>Azure Active Directory</code>管理面板。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                进入左侧 <code>应用注册</code> 菜单，并点击{\" \"}\r\n                                <code>新注册</code> 按钮。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写应用注册表单。其中，名称可任取；\r\n                                <code>受支持的帐户类型</code> 选择为\r\n                                <code>\r\n                                    任何组织目录(任何 Azure AD 目录 -\r\n                                    多租户)中的帐户\r\n                                </code>\r\n                                ；<code>重定向 URI (可选)</code>\r\n                                请选择<code>Web</code>，并填写\r\n                                <code>\r\n                                    {policy.OptionsSerialized.od_redirect}\r\n                                </code>\r\n                                ； 其他保持默认即可\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                创建完成后进入应用管理的<code>概览</code>\r\n                                页面，复制<code>应用程序(客户端) ID</code>\r\n                                并填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        应用程序(客户端) ID\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                进入应用管理页面左侧的<code>证书和密码</code>\r\n                                菜单，点击\r\n                                <code>新建客户端密码</code>\r\n                                按钮，<code>截止期限</code>选择为\r\n                                <code>从不</code>\r\n                                。创建完成后将客户端密码的值填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        客户端密码\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>6</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                选择您的 Microsoft 365 账号类型：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\r\n                                                \"https://graph.microsoft.com/v1.0\"\r\n                                            }\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"国际版\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\r\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\r\n                                            }\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"世纪互联版\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>7</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否将文件存放在 SharePoint 中？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useSharePoint.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseSharePoint(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"存到指定 SharePoint 中\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"存到账号默认 OneDrive 驱动器中\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useSharePoint}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            SharePoint 站点地址\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            placeholder={\r\n                                                \"https://example.sharepoint.com/sites/demo\"\r\n                                            }\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_driver\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_driver\"\r\n                                            )}\r\n                                            required={useSharePoint}\r\n                                            label={\"SharePoint 站点地址\"}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>8</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要在文件下载时替换为使用自建的反代服务器？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useCDN}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <DomainInput\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_proxy\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_proxy\"\r\n                                            )}\r\n                                            required={useCDN}\r\n                                            label={\"反代服务器地址\"}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>9</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}\r\n                                ，但是你需要点击下方按钮，并使用 OneDrive\r\n                                登录授权以完成初始化后才能使用。\r\n                                日后你可以在存储策略列表页面重新进行授权。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={statOAuth}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    转到授权页面\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}></div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>存储策略已添加！</Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AlertDialog from \"../../Dialogs/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"跨域策略\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nconst regions = {\r\n    \"us-east-2\": \"US East (Ohio)\",\r\n    \"us-east-1\": \"US East (N. Virginia)\",\r\n    \"us-west-1\": \"US West (N. California)\",\r\n    \"us-west-2\": \"US West (Oregon)\",\r\n    \"af-south-1\": \"Africa (Cape Town)\",\r\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\r\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\r\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\r\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\r\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\r\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\r\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\r\n    \"ca-central-1\": \"Canada (Central)\",\r\n    \"cn-north-1\": \"China (Beijing)\",\r\n    \"cn-northwest-1\": \"China (Ningxia)\",\r\n    \"eu-central-1\": \"Europe (Frankfurt)\",\r\n    \"eu-west-1\": \"Europe (Ireland)\",\r\n    \"eu-west-2\": \"Europe (London)\",\r\n    \"eu-south-1\": \"Europe (Milan)\",\r\n    \"eu-west-3\": \"Europe (Paris)\",\r\n    \"eu-north-1\": \"Europe (Stockholm)\",\r\n    \"me-south-1\": \"Middle East (Bahrain)\",\r\n    \"sa-east-1\": \"South America (São Paulo)\",\r\n};\r\n\r\nexport default function S3Guide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [alertOpen, setAlertOpen] = useState(true);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"s3\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      region: \"us-east-2\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                open={alertOpen}\r\n                onClose={() => setAlertOpen(false)}\r\n                title={\"警告\"}\r\n                msg={\r\n                    \"S3 类型存储策略目前仅可用于自己使用，或者是给受信任的用户组使用。\"\r\n                }\r\n            />\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} Amazon S3 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                Cloudreve 主站需要启用 CORS 支持，具体步骤如下：\r\n                                <br />\r\n                                修改 Cloudreve 配置文件，新增以下 CORS\r\n                                配置项，保存并重启 Cloudreve。\r\n                                <pre>\r\n                                    [CORS]\r\n                                    <br />\r\n                                    AllowOrigins = *<br />\r\n                                    AllowMethods = OPTIONS,GET,POST\r\n                                    <br />\r\n                                    AllowHeaders = *<br />\r\n                                </pre>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往 AWS S3\r\n                                控制台创建存储桶，在下方填写您创建存储桶时指定的\r\n                                <code>存储桶名称</code>：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储桶名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间的公共访问权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"阻止全部公共访问权限\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许公共读取\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                (可选) 指定存储桶的 EndPoint（地域节点），\r\n                                填写为完整的 URL 格式，比如{\" \"}\r\n                                <code>https://bucket.region.example.com</code>。\r\n                                留空则将使用系统生成的默认接入点。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        EndPoint\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                选择存储桶所在的区域，或者手动输入区域代码\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <Autocomplete\r\n                                        options={Object.keys(regions)}\r\n                                        freeSolo\r\n                                        value={policy.OptionsSerialized.region}\r\n                                        onInputChange={(_, value) =>\r\n                                            handleOptionChange(\"region\")({\r\n                                                target: { value: value },\r\n                                            })\r\n                                        }\r\n                                        renderOption={(option) => (\r\n                                            <React.Fragment>\r\n                                                {regions[option]}\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                style={{ width: \"100%\" }}\r\n                                                {...params}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要使用 CDN 加速访问？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    CDN 加速域名\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={\"CDN 加速域名\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(6, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                获取访问密钥，并填写在下方。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AccessKey\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SecretKey\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                S3 Bucket 需要正确配置跨域策略后才能使用 Web\r\n                                端上传文件，Cloudreve\r\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\r\n                                Bucket 的跨域策略，此步骤可以跳过。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我设置\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useParams } from \"react-router\";\r\nimport LocalGuide from \"./Guid/LocalGuide\";\r\nimport RemoteGuide from \"./Guid/RemoteGuide\";\r\nimport QiniuGuide from \"./Guid/QiniuGuide\";\r\nimport OSSGuide from \"./Guid/OSSGuide\";\r\nimport UpyunGuide from \"./Guid/UpyunGuide\";\r\nimport COSGuide from \"./Guid/COSGuide\";\r\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\r\nimport S3Guide from \"./Guid/S3Guide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddPolicyParent() {\r\n    const classes = useStyles();\r\n\r\n    const { type } = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {type === \"local\" && <LocalGuide />}\r\n                {type === \"remote\" && <RemoteGuide />}\r\n                {type === \"qiniu\" && <QiniuGuide />}\r\n                {type === \"oss\" && <OSSGuide />}\r\n                {type === \"upyun\" && <UpyunGuide />}\r\n                {type === \"cos\" && <COSGuide />}\r\n                {type === \"onedrive\" && <OneDriveGuide />}\r\n                {type === \"s3\" && <S3Guide />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nexport default function EditPro(props) {\r\n    const [, setLoading] = useState(false);\r\n    const [policy, setPolicy] = useState(props.policy);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\r\n            <TableContainer>\r\n                <form onSubmit={submitPolicy}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>设置项</TableCell>\r\n                                <TableCell>值</TableCell>\r\n                                <TableCell>描述</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    ID\r\n                                </TableCell>\r\n                                <TableCell>{policy.ID}</TableCell>\r\n                                <TableCell>存储策略编号</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell>{policy.Type}</TableCell>\r\n                                <TableCell>存储策略类型</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    名称\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            required\r\n                                            value={policy.Name}\r\n                                            onChange={handleChange(\"Name\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储策名称</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Server\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.Server}\r\n                                            onChange={handleChange(\"Server\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储端 Endpoint</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    BucketName\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.BucketName}\r\n                                            onChange={handleChange(\r\n                                                \"BucketName\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储桶标识</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    私有空间\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.IsPrivate}\r\n                                            onChange={handleChange(\"IsPrivate\")}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"是\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"否\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>是否为私有空间</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    文件资源根URL\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    预览/获取文件外链时生成URL的前缀\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    AccessKey\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            rowsMax={10}\r\n                                            value={policy.AccessKey}\r\n                                            onChange={handleChange(\"AccessKey\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>AccessKey / 刷新Token</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    SecretKey\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            rowsMax={10}\r\n                                            value={policy.SecretKey}\r\n                                            onChange={handleChange(\"SecretKey\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>SecretKey</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    最大单文件尺寸 (Bytes)\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                min: 0,\r\n                                                step: 1,\r\n                                            }}\r\n                                            value={policy.MaxSize}\r\n                                            onChange={handleChange(\"MaxSize\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    最大可上传的文件尺寸，填写为0表示不限制\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    自动重命名\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.AutoRename}\r\n                                            onChange={handleChange(\r\n                                                \"AutoRename\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"是\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"否\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    是否根据规则对上传物理文件重命名\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    存储路径\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={policy.DirNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"DirNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>文件物理存储路径</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    存储文件名\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>文件物理存储文件名</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    允许获取外链\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.IsOriginLinkEnable}\r\n                                            onChange={handleChange(\r\n                                                \"IsOriginLinkEnable\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"是\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"否\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    又拍云防盗链 Token\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized.token\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"token\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    允许文件扩展名\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>留空表示不限制</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    允许的 MimeType\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .mimetype\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"mimetype\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>仅对七牛存储策略有效</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    OneDrive 重定向地址\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_redirect\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_redirect\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>一般添加后无需修改</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    OneDrive 反代服务器地址\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_proxy\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_proxy\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    仅对 OneDrive 存储策略有效\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    OneDrive/SharePoint 驱动器资源标识\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_driver\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_driver\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    仅对 OneDrive\r\n                                    存储策略有效，留空则使用用户的默认 OneDrive\r\n                                    驱动器\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Amazon S3 Region\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized.region\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"region\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    仅对 Amazon S3 存储策略有效\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    内网 EndPoint\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .server_side_endpoint\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"server_side_endpoint\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>仅对 OSS 存储策略有效</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        color={\"primary\"}\r\n                        variant={\"contained\"}\r\n                        style={{ margin: 8 }}\r\n                    >\r\n                        保存更改\r\n                    </Button>\r\n                </form>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useParams } from \"react-router\";\r\nimport LocalGuide from \"./Guid/LocalGuide\";\r\nimport RemoteGuide from \"./Guid/RemoteGuide\";\r\nimport QiniuGuide from \"./Guid/QiniuGuide\";\r\nimport OSSGuide from \"./Guid/OSSGuide\";\r\nimport UpyunGuide from \"./Guid/UpyunGuide\";\r\nimport S3Guide from \"./Guid/S3Guide\";\r\nimport COSGuide from \"./Guid/COSGuide\";\r\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport EditPro from \"./Guid/EditPro\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditPolicyPreload() {\r\n    const classes = useStyles();\r\n    const [type, setType] = useState(\"\");\r\n    const [policy, setPolicy] = useState({});\r\n\r\n    const { mode, id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setType(\"\");\r\n        API.get(\"/admin/policy/\" + id)\r\n            .then((response) => {\r\n                response.data.IsOriginLinkEnable = response.data\r\n                    .IsOriginLinkEnable\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.AutoRename = response.data.AutoRename\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.MaxSize = response.data.MaxSize.toString();\r\n                response.data.IsPrivate = response.data.IsPrivate\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.OptionsSerialized.file_type = response.data\r\n                    .OptionsSerialized.file_type\r\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\r\n                    : \"\";\r\n                setPolicy(response.data);\r\n                setType(response.data.Type);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {mode === \"guide\" && (\r\n                    <>\r\n                        {type === \"local\" && <LocalGuide policy={policy} />}\r\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\r\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\r\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\r\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\r\n                        {type === \"cos\" && <COSGuide policy={policy} />}\r\n                        {type === \"onedrive\" && (\r\n                            <OneDriveGuide policy={policy} />\r\n                        )}\r\n                        {type === \"s3\" && <S3Guide policy={policy} />}\r\n                    </>\r\n                )}\r\n\r\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", label: \"#\", minWidth: 50 },\r\n    { id: \"name\", label: \"名称\", minWidth: 170 },\r\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\r\n    {\r\n        id: \"count\",\r\n        label: \"下属用户数\",\r\n        minWidth: 50,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"size\",\r\n        label: \"最大容量\",\r\n        minWidth: 100,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"action\",\r\n        label: \"操作\",\r\n        minWidth: 170,\r\n        align: \"right\",\r\n    },\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Group() {\r\n    const classes = useStyles();\r\n    const [groups, setGroups] = useState([]);\r\n    const [statics, setStatics] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [policies, setPolicies] = React.useState({});\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"code\") === \"0\") {\r\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\r\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/group/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n        })\r\n            .then((response) => {\r\n                setGroups(response.data.items);\r\n                setStatics(response.data.statics);\r\n                setTotal(response.data.total);\r\n                setPolicies(response.data.policies);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize]);\r\n\r\n    const deletePolicy = (id) => {\r\n        API.delete(\"/admin/group/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/group/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    新建用户组\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {groups.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>\r\n                                        {row.PolicyList !== null &&\r\n                                            row.PolicyList.map((pid, key) => {\r\n                                                let res = \"\";\r\n                                                if (policies[pid]) {\r\n                                                    res += policies[pid].Name;\r\n                                                }\r\n                                                if (\r\n                                                    key !==\r\n                                                    row.PolicyList.length - 1\r\n                                                ) {\r\n                                                    res += \" / \";\r\n                                                }\r\n                                                return res;\r\n                                            })}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            statics[row.ID].toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            sizeToString(row.MaxStorage)}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/group/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function GroupForm(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [group, setGroup] = useState(\r\n        props.group\r\n            ? props.group\r\n            : {\r\n                  ID: 0,\r\n                  Name: \"\",\r\n                  MaxStorage: \"1073741824\", // 转换类型\r\n                  ShareEnabled: \"true\", // 转换类型\r\n                  WebDAVEnabled: \"true\", // 转换类型\r\n                  SpeedLimit: \"0\", // 转换类型\r\n                  PolicyList: [\"1\"], // 转换类型,至少选择一个\r\n                  OptionsSerialized: {\r\n                      // 批量转换类型\r\n                      share_download: \"true\",\r\n                      aria2_options: \"{}\", // json decode\r\n                      compress_size: \"0\",\r\n                      decompress_size: \"0\",\r\n                  },\r\n              }\r\n    );\r\n    const [policies, setPolicies] = useState({});\r\n\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                const res = {};\r\n                response.data.items.forEach((v) => {\r\n                    res[v.ID] = v.Name;\r\n                });\r\n                setPolicies(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"true\" : \"false\";\r\n        setGroup({\r\n            ...group,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleOptionCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"true\" : \"false\";\r\n        setGroup({\r\n            ...group,\r\n            OptionsSerialized: {\r\n                ...group.OptionsSerialized,\r\n                [name]: value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            OptionsSerialized: {\r\n                ...group.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const groupCopy = {\r\n            ...group,\r\n            OptionsSerialized: { ...group.OptionsSerialized },\r\n        };\r\n\r\n        // 布尔值转换\r\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\r\n            groupCopy[v] = groupCopy[v] === \"true\";\r\n        });\r\n        [\r\n            \"archive_download\",\r\n            \"archive_task\",\r\n            \"relocate\",\r\n            \"one_time_download\",\r\n            \"share_download\",\r\n            \"share_free\",\r\n            \"aria2\",\r\n        ].forEach((v) => {\r\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\r\n                groupCopy.OptionsSerialized[v] =\r\n                    groupCopy.OptionsSerialized[v] === \"true\";\r\n            }\r\n        });\r\n\r\n        // 整型转换\r\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\r\n            groupCopy[v] = parseInt(groupCopy[v]);\r\n        });\r\n        [\"compress_size\", \"decompress_size\"].forEach((v) => {\r\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\r\n                groupCopy.OptionsSerialized[v] = parseInt(\r\n                    groupCopy.OptionsSerialized[v]\r\n                );\r\n            }\r\n        });\r\n        groupCopy.PolicyList = groupCopy.PolicyList.map((v) => {\r\n            return parseInt(v);\r\n        });\r\n\r\n        if (groupCopy.PolicyList.length < 1 && groupCopy.ID !== 3) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"至少要为用户组选择一个存储策略\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        // JSON转换\r\n        try {\r\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\r\n                groupCopy.OptionsSerialized.aria2_options\r\n            );\r\n        } catch (e) {\r\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/group\", {\r\n            group: groupCopy,\r\n        })\r\n            .then(() => {\r\n                history.push(\"/admin/group\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"用户组已\" + (props.group ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {group.ID === 0 && \"新建用户组\"}\r\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        {group.ID !== 3 && (\r\n                            <>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            用户组名\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={group.Name}\r\n                                            onChange={handleChange(\"Name\")}\r\n                                            required\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            用户组的名称\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            可用存储策略\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-mutiple-chip-label\"\r\n                                            id=\"demo-mutiple-chip\"\r\n                                            multiple\r\n                                            value={group.PolicyList}\r\n                                            onChange={handleChange(\r\n                                                \"PolicyList\"\r\n                                            )}\r\n                                            input={\r\n                                                <Input id=\"select-multiple-chip\" />\r\n                                            }\r\n                                            renderValue={(selected) => (\r\n                                                <div className={classes.chips}>\r\n                                                    {selected.map((value) => (\r\n                                                        <Chip\r\n                                                            style={{\r\n                                                                margin: 2,\r\n                                                            }}\r\n                                                            key={value}\r\n                                                            size={\"small\"}\r\n                                                            label={\r\n                                                                policies[value]\r\n                                                            }\r\n                                                            className={\r\n                                                                classes.chip\r\n                                                            }\r\n                                                        />\r\n                                                    ))}\r\n                                                </div>\r\n                                            )}\r\n                                        >\r\n                                            {Object.keys(policies).map(\r\n                                                (pid) => (\r\n                                                    <MenuItem\r\n                                                        key={pid}\r\n                                                        value={pid}\r\n                                                        style={getStyles(\r\n                                                            pid,\r\n                                                            group.PolicyList,\r\n                                                            theme\r\n                                                        )}\r\n                                                    >\r\n                                                        {policies[pid]}\r\n                                                    </MenuItem>\r\n                                                )\r\n                                            )}\r\n                                        </Select>\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            指定用户组可用的存储策略，可多选，用户可在选定范围内自由切换存储策略。\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <SizeInput\r\n                                            value={group.MaxStorage}\r\n                                            onChange={handleChange(\r\n                                                \"MaxStorage\"\r\n                                            )}\r\n                                            min={0}\r\n                                            max={9223372036854775807}\r\n                                            label={\"初始容量\"}\r\n                                            required\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        用户组下的用户初始可用最大容量\r\n                                    </FormHelperText>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <SizeInput\r\n                                    value={group.SpeedLimit}\r\n                                    onChange={handleChange(\"SpeedLimit\")}\r\n                                    min={0}\r\n                                    max={9223372036854775807}\r\n                                    label={\"下载限速\"}\r\n                                    suffix={\"/s\"}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                            <FormHelperText id=\"component-helper-text\">\r\n                                填写为 0 表示不限制。开启限制后，\r\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\r\n                            </FormHelperText>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.ShareEnabled ===\r\n                                                    \"true\"\r\n                                                }\r\n                                                onChange={handleCheckChange(\r\n                                                    \"ShareEnabled\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"允许创建分享\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        关闭后，用户无法创建分享链接\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .share_download === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"share_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"允许下载分享\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    关闭后，用户无法下载别人创建的文件分享\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .share_free === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"share_free\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"免积分下载分享\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    开启后，用户可以免费下载需付积分的分享\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.WebDAVEnabled ===\r\n                                                    \"true\"\r\n                                                }\r\n                                                onChange={handleCheckChange(\r\n                                                    \"WebDAVEnabled\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"WebDAV\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        关闭后，用户无法通过 WebDAV\r\n                                        协议连接至网盘\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .one_time_download ===\r\n                                                \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"one_time_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"禁止多次下载请求\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .aria2 === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"aria2\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"离线下载\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        是否允许用户创建离线下载任务\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Aria2 任务参数\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        multiline\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .aria2_options\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"aria2_options\"\r\n                                        )}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        此用户组创建离线下载任务时额外携带的参数，以\r\n                                        JSON\r\n                                        编码后的格式书写，您可也可以将这些设置写在\r\n                                        Aria2 配置文件里，可用参数请查阅官方文档\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        </Collapse>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .archive_download === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"archive_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"打包下载\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否允许用户多选文件打包下载\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .archive_task === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"archive_task\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"压缩/解压缩 任务\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        是否用户创建 压缩/解压缩 任务\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Collapse\r\n                            in={group.OptionsSerialized.archive_task === \"true\"}\r\n                        >\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <SizeInput\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .compress_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"compress_size\"\r\n                                        )}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"待压缩文件最大大小\"}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户可创建的压缩任务的文件最大总大小，填写为\r\n                                    0 表示不限制\r\n                                </FormHelperText>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <SizeInput\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .decompress_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"decompress_size\"\r\n                                        )}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"待解压文件最大大小\"}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\r\n                                    0 表示不限制\r\n                                </FormHelperText>\r\n                            </div>\r\n                        </Collapse>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .relocate === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"relocate\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"存储策略转移\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        是否用户创建存储策略转移任务\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport GroupForm from \"./GroupForm\";\r\n\r\nexport default function EditGroupPreload() {\r\n    const [group, setGroup] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setGroup({});\r\n        API.get(\"/admin/group/\" + id)\r\n            .then((response) => {\r\n                // 布尔值转换\r\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\r\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\r\n                });\r\n                [\r\n                    \"archive_download\",\r\n                    \"archive_task\",\r\n                    \"relocate\",\r\n                    \"one_time_download\",\r\n                    \"share_download\",\r\n                    \"share_free\",\r\n                    \"aria2\",\r\n                ].forEach((v) => {\r\n                    if (response.data.OptionsSerialized[v] !== undefined) {\r\n                        response.data.OptionsSerialized[v] = response.data\r\n                            .OptionsSerialized[v]\r\n                            ? \"true\"\r\n                            : \"false\";\r\n                    }\r\n                });\r\n\r\n                // 整型转换\r\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\r\n                    response.data[v] = response.data[v].toString();\r\n                });\r\n                [\"compress_size\", \"decompress_size\"].forEach((v) => {\r\n                    if (response.data.OptionsSerialized[v] !== undefined) {\r\n                        response.data.OptionsSerialized[\r\n                            v\r\n                        ] = response.data.OptionsSerialized[v].toString();\r\n                    }\r\n                });\r\n                response.data.PolicyList = response.data.PolicyList.map((v) => {\r\n                    return v.toString();\r\n                });\r\n\r\n                // JSON转换\r\n                if (\r\n                    response.data.OptionsSerialized.aria2_options === undefined\r\n                ) {\r\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\r\n                } else {\r\n                    try {\r\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\r\n                            response.data.OptionsSerialized.aria2_options\r\n                        );\r\n                    } catch (e) {\r\n                        ToggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            \"Aria2 设置项格式错误\",\r\n                            \"warning\"\r\n                        );\r\n                        return;\r\n                    }\r\n                }\r\n                setGroup(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\r\n    const [input, setInput] = useState({\r\n        group_id: \"all\",\r\n        status: \"all\",\r\n    });\r\n    const [groups, setGroups] = useState([]);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                nick: keywords,\r\n                email: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        用户组\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.group_id}\r\n                        onChange={handleChange(\"group_id\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        {groups.map((v) => {\r\n                            if (v.ID === 3) {\r\n                                return null;\r\n                            }\r\n                            return (\r\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\r\n                                    {v.Name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        用户状态\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.status}\r\n                        onChange={handleChange(\"status\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        <MenuItem value={\"0\"}>正常</MenuItem>\r\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\r\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\r\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label=\"搜索 昵称 / 用户名\"\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    应用\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { useHistory } from \"react-router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport UserFilter from \"../Dialogs/UserFilter\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Group() {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/user/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/user/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/user/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const block = (id) => {\r\n        setLoading(true);\r\n        API.patch(\"/admin/user/ban/\" + id)\r\n            .then((response) => {\r\n                setUsers(\r\n                    users.map((v) => {\r\n                        if (v.ID === id) {\r\n                            const newUser = { ...v, Status: response.data };\r\n                            return newUser;\r\n                        }\r\n                        return v;\r\n                    })\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = users.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <UserFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    style={{ alignSelf: \"center\" }}\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/user/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    新建用户\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title=\"过滤\">\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < users.length\r\n                                        }\r\n                                        checked={\r\n                                            users.length > 0 &&\r\n                                            selected.length === users.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 59 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"nick\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"nick\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        昵称\r\n                                        {orderBy[0] === \"nick\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 170 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"email\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"email\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        Email\r\n                                        {orderBy[0] === \"email\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 70 }}>\r\n                                    用户组\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 50 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align={\"right\"}\r\n                                    style={{ minWidth: 80 }}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"storage\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"storage\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        已用空间\r\n                                        {orderBy[0] === \"storage\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Nick}</TableCell>\r\n                                    <TableCell>{row.Email}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/group/edit/\" +\r\n                                                row.Group.ID\r\n                                            }\r\n                                        >\r\n                                            {row.Group.Name}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && (\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color:\r\n                                                        theme.palette.success\r\n                                                            .main,\r\n                                                }}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                正常\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 1 && (\r\n                                            <Typography\r\n                                                color={\"textSecondary\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                未激活\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 2 && (\r\n                                            <Typography\r\n                                                color={\"error\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                被封禁\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 3 && (\r\n                                            <Typography\r\n                                                color={\"error\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                超额封禁\r\n                                            </Typography>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.Storage)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/user/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"封禁/解封\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() => block(row.ID)}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Block />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\nexport default function UserForm(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState(\r\n        props.user\r\n            ? props.user\r\n            : {\r\n                  ID: 0,\r\n                  Email: \"\",\r\n                  Nick: \"\",\r\n                  Password: \"\", // 为空时只读\r\n                  Status: \"0\", // 转换类型\r\n                  GroupID: \"2\", // 转换类型\r\n                  Score: \"0\", // 转换类型\r\n              }\r\n    );\r\n    const [groups, setGroups] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setUser({\r\n            ...user,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const userCopy = { ...user };\r\n\r\n        // 整型转换\r\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\r\n            userCopy[v] = parseInt(userCopy[v]);\r\n        });\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/user\", {\r\n            user: userCopy,\r\n            password: userCopy.Password,\r\n        })\r\n            .then(() => {\r\n                history.push(\"/admin/user\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"用户已\" + (props.user ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {user.ID === 0 && \"创建用户\"}\r\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={user.Email}\r\n                                    type={\"email\"}\r\n                                    onChange={handleChange(\"Email\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    昵称\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={user.Nick}\r\n                                    onChange={handleChange(\"Nick\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"password\"}\r\n                                    value={user.Password}\r\n                                    onChange={handleChange(\"Password\")}\r\n                                    required={user.ID === 0}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {user.ID !== 0 && \"留空表示不修改\"}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    用户组\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={user.GroupID}\r\n                                    onChange={handleChange(\"GroupID\")}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID === 3) {\r\n                                            return null;\r\n                                        }\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={v.ID}\r\n                                                value={v.ID.toString()}\r\n                                            >\r\n                                                {v.Name}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户所属用户组\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    状态\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={user.Status}\r\n                                    onChange={handleChange(\"Status\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\r\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\r\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\r\n                                    <MenuItem value={\"3\"}>\r\n                                        超额使用被封禁\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    积分\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={user.Score}\r\n                                    onChange={handleChange(\"Score\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport default function EditUserPreload() {\r\n    const [user, setUser] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setUser({});\r\n        API.get(\"/admin/user/\" + id)\r\n            .then((response) => {\r\n                // 整型转换\r\n                [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\r\n                    response.data[v] = response.data[v].toString();\r\n                });\r\n                setUser(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\r\n    const [input, setInput] = useState({\r\n        policy_id: \"all\",\r\n        user_id: \"\",\r\n    });\r\n    const [policies, setPolicies] = useState([]);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                setPolicies(response.data.items);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\" && input[v] !== \"\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                name: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        存储策略\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.policy_id}\r\n                        onChange={handleChange(\"policy_id\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        {policies.map((v) => {\r\n                            if (v.ID === 3) {\r\n                                return null;\r\n                            }\r\n                            return (\r\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\r\n                                    {v.Name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={input.user_id}\r\n                        onChange={handleChange(\"user_id\")}\r\n                        id=\"standard-basic\"\r\n                        label=\"上传者ID\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label=\"搜索 文件名\"\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    应用\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { useHistory } from \"react-router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport FileFilter from \"../Dialogs/FileFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function File() {\r\n    const classes = useStyles();\r\n    const [files, setFiles] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/file/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setFiles(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n                setUsers(response.data.users);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/file/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"删除任务将在后台执行\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = (force) => () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"删除任务将在后台执行\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = files.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <FileFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/file/import\")}\r\n                    variant={\"contained\"}\r\n                    style={{\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                >\r\n                    从外部导入\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title=\"过滤\">\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch(false)}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"强制删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch(true)}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <DeleteForever />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < files.length\r\n                                        }\r\n                                        checked={\r\n                                            files.length > 0 &&\r\n                                            selected.length === files.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 59 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 250 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"name\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"name\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        文件名\r\n                                        {orderBy[0] === \"name\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align={\"right\"}\r\n                                    style={{ minWidth: 70 }}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"size\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"size\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        大小\r\n                                        {orderBy[0] === \"size\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    上传者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    上传于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {files.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            target={\"_blank\"}\r\n                                            color=\"inherit\"\r\n                                            href={\r\n                                                \"/api/v3/admin/file/preview/\" +\r\n                                                row.ID\r\n                                            }\r\n                                        >\r\n                                            {row.Name}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.Size)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\r\n    const [input, setInput] = useState({\r\n        is_dir: \"all\",\r\n        user_id: \"\",\r\n    });\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\" && input[v] !== \"\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                source_name: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        源文件类型\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.is_dir}\r\n                        onChange={handleChange(\"is_dir\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        <MenuItem value={\"1\"}>目录</MenuItem>\r\n                        <MenuItem value={\"0\"}>文件</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={input.user_id}\r\n                        onChange={handleChange(\"user_id\")}\r\n                        id=\"standard-basic\"\r\n                        label=\"上传者ID\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label=\"搜索 文件名\"\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    应用\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete, FilterList } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Share() {\r\n    const classes = useStyles();\r\n    const [shares, setShares] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [ids, setIds] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/share/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setIds(response.data.ids);\r\n                setShares(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = shares.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title=\"过滤\">\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < shares.length\r\n                                        }\r\n                                        checked={\r\n                                            shares.length > 0 &&\r\n                                            selected.length === shares.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 200 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"source_name\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"source_name\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        对象名\r\n                                        {orderBy[0] === \"source_name\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 70 }}>\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"views\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"views\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        浏览\r\n                                        {orderBy[0] === \"views\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"downloads\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"downloads\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        下载\r\n                                        {orderBy[0] === \"downloads\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"score\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"score\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        积分\r\n                                        {orderBy[0] === \"score\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    自动过期\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    分享者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    分享于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {shares.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        <Link\r\n                                            target={\"_blank\"}\r\n                                            color=\"inherit\"\r\n                                            href={\r\n                                                \"/s/\" +\r\n                                                ids[row.ID] +\r\n                                                (row.Password === \"\"\r\n                                                    ? \"\"\r\n                                                    : \"?password=\" +\r\n                                                      row.Password)\r\n                                            }\r\n                                        >\r\n                                            {row.SourceName}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Views}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Downloads}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Score}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.RemainDownloads > -1 &&\r\n                                            row.RemainDownloads + \" 次下载后\"}\r\n                                        {row.RemainDownloads === -1 && \"无\"}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Order() {\r\n    const classes = useStyles();\r\n    const [orders, setOrders] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/order/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setOrders(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/order/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/order/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = orders.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < orders.length\r\n                                        }\r\n                                        checked={\r\n                                            orders.length > 0 &&\r\n                                            selected.length === orders.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    订单名\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    商品\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"order_no\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"order_no\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        订单号\r\n                                        {orderBy[0] === \"order_no\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    单价\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 80 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    数量\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    支付方式\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    创建者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    创建于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {orders.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>\r\n                                        {row.Type === 0 && \"容量包\"}\r\n                                        {row.Type === 1 && \"用户组\"}\r\n                                        {row.Type === 2 && \"积分\"}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.OrderNo}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Method === \"score\" && row.Price}\r\n                                        {row.Method !== \"score\" && (\r\n                                            <>\r\n                                                ￥{(row.Price / 100).toFixed(2)}\r\n                                            </>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Num}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && \"未支付\"}\r\n                                        {row.Status === 1 && \"已支付\"}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Method === \"score\" && \"积分\"}\r\n                                        {row.Method === \"alipay\" && \"支付宝\"}\r\n                                        {row.Method === \"wechat\" && \"微信\"}\r\n                                        {row.Method === \"payjs\" && \"PayJS\"}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Download() {\r\n    const classes = useStyles();\r\n    const [downloads, setDownloads] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/download/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setDownloads(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/download/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/download/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = downloads.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < downloads.length\r\n                                        }\r\n                                        checked={\r\n                                            downloads.length > 0 &&\r\n                                            selected.length === downloads.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    源地址\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 150 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"total_size\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"total_size\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        大小\r\n                                        {orderBy[0] === \"total_size\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    创建者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    创建于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {downloads.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {row.Source}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && \"就绪\"}\r\n                                        {row.Status === 1 && \"下载中\"}\r\n                                        {row.Status === 2 && \"暂停中\"}\r\n                                        {row.Status === 3 && \"出错\"}\r\n                                        {row.Status === 4 && \"完成\"}\r\n                                        {row.Status === 5 && \"取消/停止\"}\r\n                                        {row.Status === 6 && \"未知\"}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.TotalSize)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Task() {\r\n    const classes = useStyles();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/task/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setTasks(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/task/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/task/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = tasks.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const getError = (error) => {\r\n        if (error === \"\") {\r\n            return \"-\";\r\n        }\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg;\r\n        } catch (e) {\r\n            return \"未知\";\r\n        }\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < tasks.length\r\n                                        }\r\n                                        checked={\r\n                                            tasks.length > 0 &&\r\n                                            selected.length === tasks.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    最后进度\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    错误信息\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    创建者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    创建于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {tasks.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {getTaskType(row.Type)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getTaskStatus(row.Status)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getTaskProgress(\r\n                                            row.Type,\r\n                                            row.Progress\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.noWrap}>\r\n                                        {getError(row.Error)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport PathSelector from \"../../FileManager/PathSelector\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    userSelect: {\r\n        width: 400,\r\n        borderRadius: 0,\r\n    },\r\n}));\r\n\r\nfunction useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value]);\r\n\r\n    return debouncedValue;\r\n}\r\n\r\nexport default function Import() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        policy: 1,\r\n        userInput: \"\",\r\n        src: \"\",\r\n        dst: \"\",\r\n        recursive: true,\r\n    });\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [policies, setPolicies] = useState({});\r\n    const [users, setUsers] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [selectRemote, setSelectRemote] = useState(false);\r\n    const [selectLocal, setSelectLocal] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.checked,\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (user === null) {\r\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        API.post(\"/admin/task/import\", {\r\n            uid: user.ID,\r\n            policy_id: parseInt(options.policy),\r\n            src: options.src,\r\n            dst: options.dst,\r\n            recursive: options.recursive,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                history.push(\"/admin/file\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchTerm !== \"\") {\r\n            API.post(\"/admin/user/list\", {\r\n                page: 1,\r\n                page_size: 10000,\r\n                order_by: \"id asc\",\r\n                searches: {\r\n                    nick: debouncedSearchTerm,\r\n                    email: debouncedSearchTerm,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    setUsers(response.data.items);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                });\r\n        }\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                const res = {};\r\n                response.data.items.forEach((v) => {\r\n                    res[v.ID] = v;\r\n                });\r\n                setPolicies(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const selectUser = (u) => {\r\n        setOptions({\r\n            ...options,\r\n            userInput: \"\",\r\n        });\r\n        setUser(u);\r\n    };\r\n\r\n    const setMoveTarget = (setter) => (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setter(path == \"//\" ? \"/\" : path);\r\n    };\r\n\r\n    const openPathSelector = (isSrcSelect) => {\r\n        if (isSrcSelect) {\r\n            if (\r\n                !policies[options.policy] ||\r\n                policies[options.policy].Type === \"local\" ||\r\n                policies[options.policy].Type === \"remote\"\r\n            ) {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"选择的存储策略只支持手动输入路径\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n            setSelectRemote(true);\r\n        } else {\r\n            if (user === null) {\r\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\r\n                return;\r\n            }\r\n            setSelectLocal(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={selectRemote}\r\n                onClose={() => setSelectRemote(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    api={\"/admin/file/folders/policy/\" + options.policy}\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget((p) =>\r\n                        setOptions({\r\n                            ...options,\r\n                            src: p,\r\n                        })\r\n                    )}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setSelectRemote(false)}\r\n                        color=\"primary\"\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={selectLocal}\r\n                onClose={() => setSelectLocal(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    api={\r\n                        \"/admin/file/folders/user/\" +\r\n                        (user === null ? 0 : user.ID)\r\n                    }\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget((p) =>\r\n                        setOptions({\r\n                            ...options,\r\n                            dst: p,\r\n                        })\r\n                    )}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setSelectLocal(false)}\r\n                        color=\"primary\"\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        导入外部目录\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Alert severity=\"info\">\r\n                                您可以将存储策略中已有文件、目录结构导入到\r\n                                Cloudreve\r\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\r\n                            </Alert>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    存储策略\r\n                                </InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-mutiple-chip-label\"\r\n                                    id=\"demo-mutiple-chip\"\r\n                                    value={options.policy}\r\n                                    onChange={handleChange(\"policy\")}\r\n                                    input={<Input id=\"select-multiple-chip\" />}\r\n                                >\r\n                                    {Object.keys(policies).map((pid) => (\r\n                                        <MenuItem key={pid} value={pid}>\r\n                                            {policies[pid].Name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    选择要导入文件目前存储所在的存储策略\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    目标用户\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.userInput}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"userInput\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    startAdornment={\r\n                                        user !== null && (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    onDelete={() => {\r\n                                                        setUser(null);\r\n                                                    }}\r\n                                                    label={user.Nick}\r\n                                                />\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }\r\n                                    disabled={user !== null}\r\n                                />\r\n                                <Popper\r\n                                    open={\r\n                                        options.userInput !== \"\" &&\r\n                                        users.length > 0\r\n                                    }\r\n                                    anchorEl={anchorEl}\r\n                                    placement={\"bottom\"}\r\n                                    transition\r\n                                >\r\n                                    {({ TransitionProps }) => (\r\n                                        <Fade\r\n                                            {...TransitionProps}\r\n                                            timeout={350}\r\n                                        >\r\n                                            <Paper\r\n                                                className={classes.userSelect}\r\n                                            >\r\n                                                {users.map((u) => (\r\n                                                    <MenuItem\r\n                                                        key={u.ID}\r\n                                                        onClick={() =>\r\n                                                            selectUser(u)\r\n                                                        }\r\n                                                    >\r\n                                                        {u.Nick}{\" \"}\r\n                                                        {\"<\" + u.Email + \">\"}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Paper>\r\n                                        </Fade>\r\n                                    )}\r\n                                </Popper>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    原始目录路径\r\n                                </InputLabel>\r\n\r\n                                <Input\r\n                                    value={options.src}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"src\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    required\r\n                                    endAdornment={\r\n                                        <Button\r\n                                            onClick={() =>\r\n                                                openPathSelector(true)\r\n                                            }\r\n                                        >\r\n                                            选择\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    要导入的目录在存储端的路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    目的目录路径\r\n                                </InputLabel>\r\n\r\n                                <Input\r\n                                    value={options.dst}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"dst\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    required\r\n                                    endAdornment={\r\n                                        <Button\r\n                                            onClick={() =>\r\n                                                openPathSelector(false)\r\n                                            }\r\n                                        >\r\n                                            选择\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    要将目录导入到用户文件系统中的路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={options.recursive}\r\n                                            onChange={handleCheckChange(\r\n                                                \"recursive\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"递归导入子目录\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否将目录下的所有子目录递归导入\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        创建导入任务\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { lighten } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport { reportReasons } from \"../../../config\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function ReportList() {\r\n    const classes = useStyles();\r\n    const [reports, setReports] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [users, setUsers] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [ids, setIds] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/report/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setReports(response.data.items);\r\n                setTotal(response.data.total);\r\n                setIds(response.data.ids);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy]);\r\n\r\n    const deleteReport = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/report/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"标记成功\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteShare = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/report/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"标记成功\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = reports.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"标记为已处理\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <CheckCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < reports.length\r\n                                        }\r\n                                        checked={\r\n                                            reports.length > 0 &&\r\n                                            selected.length === reports.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    举报对象\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    原因\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    补充描述\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    分享者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    举报时间\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {reports.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {row.Share.ID === 0 && \"[已失效]\"}\r\n                                        {row.Share.ID > 0 && (\r\n                                            <Link\r\n                                                target={\"_blank\"}\r\n                                                color=\"inherit\"\r\n                                                href={\r\n                                                    \"/s/\" +\r\n                                                    ids[row.Share.ID] +\r\n                                                    (row.Share.Password === \"\"\r\n                                                        ? \"\"\r\n                                                        : \"?password=\" +\r\n                                                          row.Share.Password)\r\n                                                }\r\n                                            >\r\n                                                {row.Share.SourceName}\r\n                                            </Link>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Share.ID > 0 &&\r\n                                            (row.Share.IsDir ? \"目录\" : \"文件\")}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {reportReasons[row.Reason]}\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {row.Description}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" +\r\n                                                row.Share.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.Share.UserID]\r\n                                                ? users[row.Share.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"标记为已处理\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deleteReport(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <CheckCircleOutlineIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        {row.Share.ID > 0 && (\r\n                                            <Tooltip title={\"删除分享\"}>\r\n                                                <IconButton\r\n                                                    disabled={loading}\r\n                                                    onClick={() =>\r\n                                                        deleteShare(\r\n                                                            row.Share.ID\r\n                                                        )\r\n                                                    }\r\n                                                    size={\"small\"}\r\n                                                >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        )}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Captcha() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        captcha_type: \"normal\",\r\n        captcha_height: \"1\",\r\n        captcha_width: \"1\",\r\n        captcha_mode: \"3\",\r\n        captcha_CaptchaLen: \"\",\r\n        captcha_ReCaptchaKey: \"\",\r\n        captcha_ReCaptchaSecret: \"\",\r\n        captcha_TCaptcha_CaptchaAppId: \"\",\r\n        captcha_TCaptcha_AppSecretKey: \"\",\r\n        captcha_TCaptcha_SecretId: \"\",\r\n        captcha_TCaptcha_SecretKey: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        验证码\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    验证码类型\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.captcha_type}\r\n                                    onChange={handleChange(\"captcha_type\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"normal\"}>普通</MenuItem>\r\n                                    <MenuItem value={\"recaptcha\"}>\r\n                                        reCAPTCHA V2\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"tcaptcha\"}>\r\n                                        腾讯云验证码\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    验证码类型\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {options.captcha_type === \"normal\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            普通验证码\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        宽度\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_width}\r\n                                        onChange={handleChange(\"captcha_width\")}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        高度\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_height}\r\n                                        onChange={handleChange(\r\n                                            \"captcha_height\"\r\n                                        )}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        模式\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        value={options.captcha_mode}\r\n                                        onChange={handleChange(\"captcha_mode\")}\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"0\"}>数字</MenuItem>\r\n                                        <MenuItem value={\"1\"}>字母</MenuItem>\r\n                                        <MenuItem value={\"2\"}>算数</MenuItem>\r\n                                        <MenuItem value={\"3\"}>\r\n                                            数字+字母\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        验证码的形式\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {options.captcha_type === \"recaptcha\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            reCAPTCHA V2\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            Site KEY\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={options.captcha_ReCaptchaKey}\r\n                                            onChange={handleChange(\r\n                                                \"captcha_ReCaptchaKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://www.google.com/recaptcha/admin/create\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                应用管理页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 网站密钥\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            Secret\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_ReCaptchaSecret\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_ReCaptchaSecret\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://www.google.com/recaptcha/admin/create\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                应用管理页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 秘钥\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {options.captcha_type === \"tcaptcha\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            腾讯云验证码\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            SecretId\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_SecretId\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_SecretId\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/capi\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                访问密钥页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 SecretId\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            SecretKey\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_SecretKey\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_SecretKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/capi\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                访问密钥页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 SecretKey\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            APPID\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_CaptchaAppId\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_CaptchaAppId\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                图形验证页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 APPID\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            App Secret Key\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_AppSecretKey\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_AppSecretKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                图形验证页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 App Secret Key\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\r\nimport AlertBar from \"./component/Common/Snackbar\";\r\nimport Dashboard from \"./component/Admin/Dashboard\";\r\nimport { useHistory } from \"react-router\";\r\nimport Auth from \"./middleware/Auth\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport { zhCN } from \"@material-ui/core/locale\";\r\nimport Index from \"./component/Admin/Index\";\r\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\r\nimport Access from \"./component/Admin/Setting/Access\";\r\nimport Mail from \"./component/Admin/Setting/Mail\";\r\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\r\nimport VAS from \"./component/Admin/Setting/VAS\";\r\nimport Theme from \"./component/Admin/Setting/Theme\";\r\nimport Aria2 from \"./component/Admin/Setting/Aria2\";\r\nimport ImageSetting from \"./component/Admin/Setting/Image\";\r\nimport Policy from \"./component/Admin/Policy/Policy\";\r\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\r\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\r\nimport Group from \"./component/Admin/Group/Group\";\r\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\r\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\r\nimport User from \"./component/Admin/User/User\";\r\nimport UserForm from \"./component/Admin/User/UserForm\";\r\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\r\nimport File from \"./component/Admin/File/File\";\r\nimport Share from \"./component/Admin/Share/Share\";\r\nimport Order from \"./component/Admin/Order/Order\";\r\nimport Download from \"./component/Admin/Task/Download\";\r\nimport Task from \"./component/Admin/Task/Task\";\r\nimport Import from \"./component/Admin/File/Import\";\r\nimport ReportList from \"./component/Admin/Report/ReportList\";\r\nimport Captcha from \"./component/Admin/Setting/Captcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: 0,\r\n        minWidth: 0,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst theme = createMuiTheme(\r\n    {\r\n        palette: {\r\n            background: {},\r\n        },\r\n    },\r\n    zhCN\r\n);\r\n\r\nexport default function Admin() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const user = Auth.GetUser();\r\n        if (user && user.group) {\r\n            if (user.group.id !== 1) {\r\n                history.push(\"/home\");\r\n                return;\r\n            }\r\n            setShow(true);\r\n            return;\r\n        }\r\n        history.push(\"/login\");\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AlertBar />\r\n                    {show && (\r\n                        <Dashboard\r\n                            content={(path) => (\r\n                                <Switch>\r\n                                    <Route path={`${path}/home`} exact>\r\n                                        <Index />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/basic`}>\r\n                                        <SiteInformation />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/access`}>\r\n                                        <Access />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/mail`}>\r\n                                        <Mail />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/upload`}>\r\n                                        <UploadDownload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/vas`}>\r\n                                        <VAS />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/theme`}>\r\n                                        <Theme />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/aria2`}>\r\n                                        <Aria2 />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/image`}>\r\n                                        <ImageSetting />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/captcha`}>\r\n                                        <Captcha />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/policy`} exact>\r\n                                        <Policy />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/policy/add/:type`}\r\n                                        exact\r\n                                    >\r\n                                        <AddPolicy />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/policy/edit/:mode/:id`}\r\n                                        exact\r\n                                    >\r\n                                        <EditPolicyPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/group`} exact>\r\n                                        <Group />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/group/add`} exact>\r\n                                        <GroupForm />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/group/edit/:id`}\r\n                                        exact\r\n                                    >\r\n                                        <EditGroupPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user`} exact>\r\n                                        <User />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user/add`} exact>\r\n                                        <UserForm />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user/edit/:id`} exact>\r\n                                        <EditUserPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/file`} exact>\r\n                                        <File />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/file/import`} exact>\r\n                                        <Import />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/share`} exact>\r\n                                        <Share />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/order`} exact>\r\n                                        <Order />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/download`} exact>\r\n                                        <Download />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/task`} exact>\r\n                                        <Task />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/report`} exact>\r\n                                        <ReportList />\r\n                                    </Route>\r\n                                </Switch>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}
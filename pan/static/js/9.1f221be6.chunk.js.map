{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Common/FileSelector.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/AddPack.js","component/Admin/Dialogs/AddGroupk.js","component/Admin/Dialogs/AddRedeem.js","component/Admin/Setting/VAS.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Common/DomainInput.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Order/Order.js","component/Admin/Task/Aria2Helper.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Report/ReportList.js","component/Admin/Setting/Captcha.js","component/Admin/Node/Node.js","component/Admin/Node/Guide/Communication.js","component/Admin/Node/Guide/Aria2RPC.js","component/Admin/Node/Guide/Metainfo.js","component/Admin/Node/Guide/Completed.js","component/Admin/Node/Guide/NodeGuide.js","component/Admin/Node/AddNode.js","component/Admin/Node/EditNode.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","AttachMoney","Palette","Image","Category","Storage","Contactless","Group","Person","InsertDriveFile","Share","Report","ShoppingCart","Assignment","CloudDownload","ListAlt","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","alt","relationships","startUser","avatarUrl","Fragment","inline","username","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","siteDes","siteICPId","siteScript","siteNotice","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","placeholder","Select","MenuItem","disabled","AlertDialog","FileSelector","ID","Name","selectValue","setSelectValue","inputValue","setInputValue","findIndex","toString","page","page_size","order_by","conditions","searches","newOptions","Autocomplete","multiple","getOptionLabel","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onInputChange","newInputValue","newValue","JSON","stringify","renderInput","params","TextField","renderOption","Access","initCompleted","setInitComplete","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","qq_login","qq_direct_login","qq_login_id","qq_login_key","authn_enabled","mail_domain_filter","mail_domain_filter_list","initial_files","groups","setGroups","httpAlert","setHttpAlert","checked","handleInputChange","FormControlLabel","control","Switch","parse","i","rowsMax","Alert","severity","endsWith","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","over_used_template","mail_activation_template","mail_reset_pwd_template","autoFocus","to","inputProps","min","step","SizeInput","max","suffix","unit","setUnit","first","transform","Math","round","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","slave_node_retry","slave_ping_interval","slave_recover_interval","slave_transfer_timeout","field","des","input","defaultPack","time","price","score","AddPack","packEdit","pack","setPack","packCopy","parseInt","Date","valueOf","defaultGroup","group_id","highlight","AddGroup","groupEdit","group","setGroup","join","length","scroll","groupCopy","split","AddRedeem","products","onSuccess","num","setInput","data-type","tabForm","tableContainer","navigator","product","VAS","tab","setTab","alipay_enabled","payjs_enabled","wechat_enabled","payjs_id","appid","appkey","shopid","payjs_secret","wechat_appid","wechat_mchid","wechat_serial_no","wechat_api_key","wechat_pk_content","score_enabled","share_score_rate","score_price","ban_time","group_sell_data","pack_data","packs","setPacks","addPack","setAddPack","addGroup","setAddGroup","setPackEdit","setGroupEdit","addRedeem","setAddRedeem","redeems","setRedeems","redeemsRes","setRedeemsRes","redeemsResOpen","setRedeemsResOpen","setPage","pageSize","total","setTotal","loadRedeemList","handleCheckChange","updatePackOption","Tabs","indicatorColor","textColor","scrollButtons","Tab","updateOption","Link","href","Table","TableHead","TableRow","TableCell","TableBody","row","scope","ceil","sizeToString","Edit","newPacks","filter","newPackData","deletePack","Delete","newGroups","deleteGroup","ProductID","Num","Code","Used","Box","delete","Pagination","count","isEdit","newGroup","newGroupData","codes","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","themeString","helperText","onBlur","themeCopy","resStr","deleteTheme","newTheme","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","office_preview_service","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","dividers","index","sm","Card","CardActionArea","CardMedia","image","CardContent","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","setPageSize","addDialog","setAddDialog","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","Boolean","TableContainer","column","hover","policyTypeMap","Type","toLocaleString","currentTarget","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","MagicVar","isFile","isSlave","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","steps","optional","LocalGuide","props","activeStep","setActiveStep","Set","skipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","BaseURL","IsPrivate","MaxSize","OptionsSerialized","file_type","setPolicy","Stepper","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","RadioGroup","Radio","Collapse","in","policyCopy","code","fontFamily","pre","overflow","RemoteGuide","Server","SecretKey","randomStr","minlength","server","secret","AccessKey","mimetype","handleOptionChange","BucketName","getNumber","viewButtonLabel","textTransform","OSSGuide","setSkipped","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","policyID","setPolicyID","submitPolicy","pattern","n","prevActiveStep","prevSkipped","newSkipped","values","add","UpyunGuide","token","COSGuide","region","setRegion","stepContental","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","httpsAlert","setHttpsAlert","URL","regions","S3Guide","alertOpen","setAlertOpen","freeSolo","_","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","PolicyList","pid","MaxStorage","getStyles","personName","indexOf","typography","fontWeightRegular","fontWeightMedium","GroupForm","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","aria2_options","compress_size","decompress_size","handleOptionCheckChange","renderValue","selected","chips","chip","share_free","one_time_download","aria2","archive_download","archive_task","relocate","EditGroupPreload","UserFilter","setSearch","status","keywords","setKeywords","nick","email","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","setSelected","isSelected","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","Score","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","deleteBatch","force","DeleteForever","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Order","orders","setOrders","OrderNo","Method","Price","toFixed","Aria2Helper","RouterLink","Download","downloads","setDownloads","helperOpen","setHelperOpen","Source","NodeID","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","ReportList","reports","setReports","IsDir","reportReasons","Reason","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","disabledBadge","disabledCell","verticalAlign","features","Node","nodes","setNodes","isActive","setIsActive","minWidthclassNames","classNames","getStatusBadge","CheckCircle","Cancel","node","feature","desired","PlayArrow","Pause","Communication","SlaveKey","handleTextChange","Aria2RPC","Aria2Enabled","Aria2OptionsSerialized","interval","rpc","onBack","Metainfo","Rank","Completed","slaveOnly","NodeGuide","MasterKey","setNode","usedSteps","useMemo","nodeCopy","nextStep","AddNode","EditNode","createTheme","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/9.1f221be6.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\nimport {\n    Contacts,\n    Home,\n    Language,\n    Settings,\n    Mail,\n    SettingsEthernet,\n    AttachMoney,\n    Palette,\n    CloudDownload,\n    Image,\n    Storage,\n    Group,\n    Person,\n    InsertDriveFile,\n    Share,\n    ShoppingCart,\n    Assignment,\n    ListAlt,\n    Report,\n    Category,\n    Contactless,\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary,\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\": {\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\n        },\n    },\n    activeText: {\n        fontWeight: 500,\n    },\n    activeIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst items = [\n    {\n        title: \"面板首页\",\n        icon: <Home />,\n        path: \"home\",\n    },\n    {\n        title: \"参数设置\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"站点信息\",\n                path: \"basic\",\n                icon: <Language />,\n            },\n            {\n                title: \"注册与登录\",\n                path: \"access\",\n                icon: <Contacts />,\n            },\n            {\n                title: \"邮件\",\n                path: \"mail\",\n                icon: <Mail />,\n            },\n            {\n                title: \"传输与通信\",\n                path: \"upload\",\n                icon: <SettingsEthernet />,\n            },\n            {\n                title: \"增值服务\",\n                path: \"vas\",\n                icon: <AttachMoney />,\n            },\n            {\n                title: \"外观\",\n                path: \"theme\",\n                icon: <Palette />,\n            },\n            {\n                title: \"图像与预览\",\n                path: \"image\",\n                icon: <Image />,\n            },\n            {\n                title: \"验证码\",\n                path: \"captcha\",\n                icon: <Category />,\n            },\n        ],\n    },\n    {\n        title: \"存储策略\",\n        icon: <Storage />,\n        path: \"policy\",\n    },\n    {\n        title: \"离线下载节点\",\n        icon: <Contactless />,\n        path: \"node\",\n    },\n    {\n        title: \"用户组\",\n        icon: <Group />,\n        path: \"group\",\n    },\n    {\n        title: \"用户\",\n        icon: <Person />,\n        path: \"user\",\n    },\n    {\n        title: \"文件\",\n        icon: <InsertDriveFile />,\n        path: \"file\",\n    },\n    {\n        title: \"分享\",\n        icon: <Share />,\n        path: \"share\",\n    },\n    {\n        title: \"举报\",\n        icon: <Report />,\n        path: \"report\",\n    },\n    {\n        title: \"订单\",\n        icon: <ShoppingCart />,\n        path: \"order\",\n    },\n    {\n        title: \"持久任务\",\n        icon: <Assignment />,\n        sub: [\n            {\n                title: \"离线下载\",\n                path: \"download\",\n                icon: <CloudDownload />,\n            },\n            {\n                title: \"常规任务\",\n                path: \"task\",\n                icon: <ListAlt />,\n            },\n        ],\n    },\n];\n\nexport default function Dashboard({ content }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        SetSubTitle(\"仪表盘\");\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    const { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        Cloudreve 仪表盘\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map((item) => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]: location.pathname.startsWith(\n                                            \"/admin/\" + item.path\n                                        ),\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon\n                                        className={clsx({\n                                            [classes.activeIcon]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                    >\n                                        {item.icon}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        className={clsx({\n                                            [classes.activeText]: location.pathname.startsWith(\n                                                \"/admin/\" + item.path\n                                            ),\n                                        })}\n                                        primary={item.title}\n                                    />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            // eslint-disable-next-line react/jsx-key\n                            <ExpansionPanel\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={item.title} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map((sub) => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]: location.pathname.startsWith(\n                                                        \"/admin/\" + sub.path\n                                                    ),\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon\n                                                    className={clsx({\n                                                        [classes.activeIcon]: location.pathname.startsWith(\n                                                            \"/admin/\" + sub.path\n                                                        ),\n                                                    })}\n                                                >\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={sub.title}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n} from \"recharts\";\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport pathHelper from \"../../utils/page\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n    Description,\n    Favorite,\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram,\n} from \"@material-ui/icons\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport TimeAgo from \"timeago-react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    },\n    logo: {\n        width: 70,\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\",\n    },\n    title: {\n        marginLeft: 16,\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary,\n    },\n    version: {\n        color: theme.palette.text.hint,\n    },\n    links: {\n        padding: theme.spacing(3),\n    },\n    iconRight: {\n        minWidth: 0,\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800],\n    },\n}));\n\nexport default function Index() {\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0,\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\",\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = () => {\n        setOpen(false);\n        API.patch(\"/admin/setting\", {\n            options: [\n                {\n                    key: \"siteURL\",\n                    value: window.location.origin,\n                },\n            ],\n        })\n            .then(() => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then((response) => {\n                const data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k],\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal,\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (\n                    response.data.siteURL === \"\" ||\n                    response.data.siteURL !== window.location.origin\n                ) {\n                    setOpen(true);\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"/api/v3/admin/news\")\n            .then((response) => {\n                setNews(response.data.data);\n                const res = {};\n                response.data.included.forEach((v) => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"确定站点URL设置\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" &&\n                                \"您尚未设定站点URL，是否要将其设定为当前的 \" +\n                                    window.location.origin +\n                                    \" ?\"}\n                            {siteURL !== \"\" &&\n                                \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \" +\n                                    window.location.origin +\n                                    \" ?\"}\n                        </Typography>\n                        <Typography>\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在\n                            参数设置 - 站点信息 中更改此设置。\n                        </Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color=\"default\">\n                        忽略\n                    </Button>\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\n                        更改\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        趋势\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={\"文件\"}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={\"用户\"}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            <Line\n                                name={\"分享\"}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        总计\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary=\"注册用户\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary=\"文件总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary=\"公开分享总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary=\"私密分享总数\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            className={classes.logo}\n                            src={\"/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Cloudreve\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend}{\" \"}\n                                {version.is_pro === \"true\" && (\n                                    <Chip size=\"small\" label=\"Pro\" />\n                                )}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://docs.cloudreve.org/\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Description />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文档\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://forum.cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary=\"讨论社区\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://t.me/cloudreve_official\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Telegram 群组\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://docs.cloudreve.org/use/pro/jie-shao\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\n                                    <Favorite />\n                                </ListItemIcon>\n                                <ListItemText primary=\"捐助开发者\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news &&\n                            news.map((v) => (\n                                <>\n                                    <ListItem\n                                        button\n                                        alignItems=\"flex-start\"\n                                        onClick={() =>\n                                            window.open(\n                                                \"https://forum.cloudreve.org/d/\" +\n                                                    v.id\n                                            )\n                                        }\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                alt=\"Travis Howard\"\n                                                src={\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                    newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ].avatarUrl\n                                                }\n                                            />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={v.attributes.title}\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={\n                                                            classes.inline\n                                                        }\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        {newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ] &&\n                                                            newsUsers[\n                                                                v.relationships\n                                                                    .startUser\n                                                                    .data.id\n                                                            ].username}{\" \"}\n                                                    </Typography>\n                                                    发表于{\" \"}\n                                                    <TimeAgo\n                                                        datetime={\n                                                            v.attributes\n                                                                .startTime\n                                                        }\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </React.Fragment>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider />\n                                </>\n                            ))}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function SiteInformation() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        siteDes: \"\",\n        siteICPId: \"\",\n        siteScript: \"\",\n        siteNotice: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        基本信息\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的主标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    副标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的副标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点描述\n                                </InputLabel>\n                                <Input\n                                    value={options.siteDes}\n                                    onChange={handleChange(\"siteDes\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点描述信息，可能会在分享页面摘要内展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点URL\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    网站备案号\n                                </InputLabel>\n                                <Input\n                                    value={options.siteICPId}\n                                    onChange={handleChange(\"siteICPId\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    工信部网站ICP备案号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    页脚代码\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    value={options.siteScript}\n                                    onChange={handleChange(\"siteScript\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    在页面底部插入的自定义HTML代码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点公告\n                                </InputLabel>\n                                <Input\n                                    placeholder={\"支持 HTML 代码\"}\n                                    multiline\n                                    value={options.siteNotice}\n                                    onChange={handleChange(\"siteNotice\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    展示给已登陆用户的公告，留空不展示。当此项内容更改时，所有用户会重新看到公告。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        渐进式应用 (PWA)\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    扩展名为 ico 的小图标地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    192x192 的中等图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    512x512 的大图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    展示模式\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    PWA 应用添加后的展示模式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主题色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值，影响 PWA\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    背景色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function AlertDialog({ title, msg, open, onClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>{msg}</Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    知道了\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function FileSelector({ onChange, value, label }) {\n    const [selectValue, setSelectValue] = React.useState(\n        value.map((v) => {\n            return {\n                ID: v,\n                Name: \"文件ID \" + v,\n            };\n        })\n    );\n    const [loading, setLoading] = React.useState(false);\n    const [inputValue, setInputValue] = React.useState(\"\");\n    const [options, setOptions] = React.useState([]);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    React.useEffect(() => {\n        let active = true;\n        if (\n            inputValue === \"\" ||\n            selectValue.findIndex((v) => v.ID.toString() === inputValue) >= 0\n        ) {\n            setOptions([]);\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/file/list\", {\n            page: 1,\n            page_size: 10,\n            order_by: \"id desc\",\n            conditions: {\n                id: inputValue,\n            },\n            searches: {},\n        })\n            .then((response) => {\n                if (active) {\n                    let newOptions = [];\n                    newOptions = [...newOptions, ...response.data.items];\n                    setOptions(newOptions);\n                }\n                setLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n        return () => {\n            active = false;\n        };\n    }, [selectValue, inputValue]);\n\n    return (\n        <Autocomplete\n            multiple\n            style={{ width: 300 }}\n            options={options}\n            getOptionLabel={(option) =>\n                typeof option === \"string\" ? option : option.Name\n            }\n            filterOptions={(x) => x}\n            loading={loading}\n            autoComplete\n            includeInputInList\n            filterSelectedOptions\n            value={selectValue}\n            onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n            }}\n            onChange={(event, newValue) => {\n                setSelectValue(newValue);\n                onChange(JSON.stringify(newValue.map((v) => v.ID)));\n            }}\n            renderInput={(params) => (\n                <TextField {...params} label={label} type={\"number\"} />\n            )}\n            renderOption={(option) => (\n                <Typography noWrap>{option.Name}</Typography>\n            )}\n        />\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FileSelector from \"../Common/FileSelector\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Access() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [initCompleted, setInitComplete] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        qq_login: \"0\",\n        qq_direct_login: \"0\",\n        qq_login_id: \"\",\n        qq_login_key: \"\",\n        authn_enabled: \"0\",\n        mail_domain_filter: \"0\",\n        mail_domain_filter_list: \"\",\n        initial_files: \"[]\",\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleInputChange = (name) => (event) => {\n        const value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"],\n        })\n            .then((response) => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n                setInitComplete(true);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={\"提示\"}\n                msg={\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\n                }\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        注册与登录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许新用户注册\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，无法再通过前台注册新的用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"邮件激活\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"注册验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用注册表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"登录验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用登录表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"找回密码验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用找回密码表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={(e) => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label=\"Web Authn\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\n                                    HTTPS 才能使用。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认用户组\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户注册后的初始用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                {initCompleted && (\n                                    <FileSelector\n                                        label={\"初始文件\"}\n                                        value={JSON.parse(\n                                            options.initial_files\n                                        )}\n                                        onChange={(v) =>\n                                            handleInputChange(\"initial_files\")({\n                                                target: { value: v },\n                                            })\n                                        }\n                                    />\n                                )}\n                                <FormHelperText id=\"component-helper-text\">\n                                    指定用户注册后初始拥有的文件。输入文件 ID\n                                    搜索并添加现有文件。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    过滤注册邮箱域\n                                </InputLabel>\n                                <Select\n                                    value={options.mail_domain_filter}\n                                    onChange={handleInputChange(\n                                        \"mail_domain_filter\"\n                                    )}\n                                    required\n                                >\n                                    {[\"不启用\", \"白名单\", \"黑名单\"].map(\n                                        (v, i) => (\n                                            <MenuItem\n                                                key={i}\n                                                value={i.toString()}\n                                            >\n                                                {v}\n                                            </MenuItem>\n                                        )\n                                    )}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否限制可用于注册的电子邮箱域\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.mail_domain_filter !== \"0\" && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        邮箱域过滤规则\n                                    </InputLabel>\n                                    <Input\n                                        value={options.mail_domain_filter_list}\n                                        onChange={handleChange(\n                                            \"mail_domain_filter_list\"\n                                        )}\n                                        multiline\n                                        rowsMax=\"10\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        多个域请使用半角逗号隔开\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        QQ互联\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                创建应用时，回调地址请填写：\n                                {siteURL.endsWith(\"/\")\n                                    ? siteURL + \"login/qq\"\n                                    : siteURL + \"/login/qq\"}\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.qq_login === \"1\"}\n                                            onChange={handleChange(\"qq_login\")}\n                                        />\n                                    }\n                                    label=\"开启QQ互联\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许绑定QQ、使用QQ登录本站\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.qq_login === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                    checked={\n                                                        options.qq_direct_login ===\n                                                        \"1\"\n                                                    }\n                                                    onChange={handleChange(\n                                                        \"qq_direct_login\"\n                                                    )}\n                                                />\n                                            }\n                                            label=\"未绑定时可直接登录\"\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            开启后，如果用户使用了QQ登录，但是没有已绑定的注册用户，系统会为其创建用户并登录。这种方式创建的用户日后只能使用QQ登录。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APP ID\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.qq_login_id}\n                                            onChange={handleInputChange(\n                                                \"qq_login_id\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 APP ID\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APP KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.qq_login_key}\n                                            onChange={handleInputChange(\n                                                \"qq_login_key\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 APP KEY\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    buttonMargin: {\n        marginLeft: 8,\n    },\n}));\n\nexport default function Mail() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        smtpEncryption: \"\",\n        mail_keepalive: \"30\",\n        over_used_template: \"\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/mailTest\", {\n            to: tesInput,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {})\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .then(() => {});\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>\n                            发送测试邮件前，请先保存已更改的邮件设置；\n                        </Typography>\n                        <Typography>\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\n                            Cloudreve 在终端输出的错误日志。\n                        </Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"收件人地址\"\n                        value={tesInput}\n                        onChange={(e) => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        发送\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        发信\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人名\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    邮件中展示的发件人姓名\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人邮箱\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件邮箱的地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 服务器\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址，不含端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 端口\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 用户名\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱用户名，一般与邮箱地址相同\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱密码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    回信邮箱\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.smtpEncryption === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"smtpEncryption\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"强制使用 SSL 连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否强制使用 SSL\n                                    加密连接。如果无法发送邮件，可关闭此项，\n                                    Cloudreve 会尝试使用 STARTTLS\n                                    并决定是否使用加密连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 连接有效期 (秒)\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1, step: 1 }}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    有效期内建立的 SMTP\n                                    连接会被新邮件发送请求复用\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        邮件模板\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    新用户激活\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    新用户注册后激活邮件的模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    超额提醒\n                                </InputLabel>\n                                <Input\n                                    value={options.over_used_template}\n                                    onChange={handleChange(\n                                        \"over_used_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户因增值服务过期，容量超出限制后发送的提醒邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    重置密码\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    密码重置邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        发送测试邮件\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\n\nconst unitTransform = (v) => {\n    if (v < 1024) {\n        return [Math.round(v), 1];\n    }\n    if (v < 1024 * 1024) {\n        return [Math.round(v / 1024), 1024];\n    }\n    if (v < 1024 * 1024 * 1024) {\n        return [Math.round(v / (1024 * 1024)), 1024 * 1024];\n    }\n    if (v < 1024 * 1024 * 1024 * 1024) {\n        return [Math.round(v / (1024 * 1024 * 1024)), 1024 * 1024 * 1024];\n    }\n    return [\n        Math.round(v / (1024 * 1024 * 1024 * 1024)),\n        1024 * 1024 * 1024 * 1024,\n    ];\n};\n\nexport default function SizeInput({\n    onChange,\n    min,\n    value,\n    required,\n    label,\n    max,\n    suffix,\n}) {\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [unit, setUnit] = useState(1);\n    let first = true;\n\n    const transform = useCallback(() => {\n        const res = unitTransform(value);\n        if (first && value !== 0) {\n            setUnit(res[1]);\n            first = false;\n        }\n        return res;\n    }, [value]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                style={{ width: 200 }}\n                value={transform()[0]}\n                type={\"number\"}\n                inputProps={{ min: min, step: 1 }}\n                onChange={(e) => {\n                    if (e.target.value * unit < max) {\n                        onChange({\n                            target: {\n                                value: (e.target.value * unit).toString(),\n                            },\n                        });\n                    } else {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"超出最大尺寸限制\",\n                            \"warning\"\n                        );\n                    }\n                }}\n                required={required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={(e) => {\n                                if (transform()[0] * e.target.value < max) {\n                                    onChange({\n                                        target: {\n                                            value: (\n                                                transform()[0] * e.target.value\n                                            ).toString(),\n                                        },\n                                    });\n                                    setUnit(e.target.value);\n                                } else {\n                                    ToggleSnackbar(\n                                        \"top\",\n                                        \"right\",\n                                        \"超出最大尺寸限制\",\n                                        \"warning\"\n                                    );\n                                }\n                            }}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>\n                                KB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024}>\n                                MB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024}>\n                                GB{suffix && suffix}\n                            </MenuItem>\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\n                                TB{suffix && suffix}\n                            </MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function UploadDownload() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer: \"1\",\n        temp_path: \"\",\n        maxEditSize: \"0\",\n        onedrive_chunk_retries: \"0\",\n        archive_timeout: \"0\",\n        download_timeout: \"0\",\n        preview_timeout: \"0\",\n        doc_preview_timeout: \"0\",\n        upload_credential_timeout: \"0\",\n        upload_session_timeout: \"0\",\n        slave_api_timeout: \"0\",\n        onedrive_monitor_timeout: \"0\",\n        share_download_session_timeout: \"0\",\n        onedrive_callback_check: \"0\",\n        reset_after_upload_failed: \"0\",\n        onedrive_source_timeout: \"0\",\n        slave_node_retry: \"0\",\n        slave_ping_interval: \"0\",\n        slave_recover_interval: \"0\",\n        slave_transfer_timeout: \"0\",\n    });\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        存储与传输\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Worker 数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列最多并行执行的任务数，保存后需要重启\n                                    Cloudreve 生效\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中转并行传输\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\n                                        \"max_parallel_transfer\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列中转任务传输时，最大并行协程数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时目录\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <SizeInput\n                                    value={options.maxEditSize}\n                                    onChange={handleChange(\"maxEditSize\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"文本文件在线编辑大小\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 分片错误重试\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={options.onedrive_chunk_retries}\n                                    onChange={handleChange(\n                                        \"onedrive_chunk_retries\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive\n                                    存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed ===\n                                                \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"上传校验失败时强制重置连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        有效期 (秒)\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        {[\n                            {\n                                name: \"打包下载\",\n                                field: \"archive_timeout\",\n                            },\n                            {\n                                name: \"下载会话\",\n                                field: \"download_timeout\",\n                            },\n                            {\n                                name: \"预览链接\",\n                                field: \"preview_timeout\",\n                            },\n                            {\n                                name: \"Office 文档预览连接\",\n                                field: \"doc_preview_timeout\",\n                            },\n                            {\n                                name: \"上传凭证\",\n                                field: \"upload_credential_timeout\",\n                            },\n                            {\n                                name: \"上传会话\",\n                                field: \"upload_session_timeout\",\n                                des: \"超出后不再处理此上传的回调请求\",\n                            },\n                            {\n                                name: \"分享下载会话\",\n                                field: \"share_download_session_timeout\",\n                                des:\n                                    \"设定时间内重复下载分享文件，不会被记入总下载次数\",\n                            },\n                            {\n                                name: \"OneDrive 客户端上传监控间隔\",\n                                field: \"onedrive_monitor_timeout\",\n                                des:\n                                    \"每间隔所设定时间，Cloudreve 会向 OneDrive 请求检查客户端上传情况已确保客户端上传可控\",\n                            },\n                            {\n                                name: \"OneDrive 回调等待\",\n                                field: \"onedrive_callback_check\",\n                                des:\n                                    \"OneDrive 客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\",\n                            },\n                            {\n                                name: \"OneDrive 下载请求缓存\",\n                                field: \"onedrive_source_timeout\",\n                                des:\n                                    \"OneDrive 获取文件下载 URL 后可将结果缓存，减轻热门文件下载API请求频率\",\n                            },\n                        ].map((input) => (\n                            <div key={input.name} className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {input.name}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options[input.field]}\n                                        onChange={handleChange(input.field)}\n                                        required\n                                    />\n                                    {input.des && (\n                                        <FormHelperText id=\"component-helper-text\">\n                                            {input.des}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        节点通信\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        {[\n                            {\n                                name: \"从机API请求超时（秒）\",\n                                field: \"slave_api_timeout\",\n                                des: \"主机等待从机API请求响应的超时时间\",\n                            },\n                            {\n                                name: \"节点心跳间隔（秒）\",\n                                field: \"slave_ping_interval\",\n                                des: \"主机节点向从机节点发送心跳的间隔\",\n                            },\n                            {\n                                name: \"心跳失败重试阈值\",\n                                field: \"slave_node_retry\",\n                                des:\n                                    \"主机向从机发送心跳失败后，主机可最大重试的次数。重试失败后，节点会进入恢复模式\",\n                            },\n                            {\n                                name: \"恢复模式心跳间隔（秒）\",\n                                field: \"slave_recover_interval\",\n                                des:\n                                    \"节点因异常被主机标记为恢复模式后，主机尝试重新连接节点的间隔\",\n                            },\n                            {\n                                name: \"从机中转超时（秒）\",\n                                field: \"slave_transfer_timeout\",\n                                des: \"从机执行文件中转任务可消耗的最长时间\",\n                            },\n                        ].map((input) => (\n                            <div key={input.name} className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        {input.name}\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options[input.field]}\n                                        onChange={handleChange(input.field)}\n                                        required\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        {input.des}\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SizeInput from \"../Common/SizeInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n    formContainer: {\n        margin: \"8px 0 8px 0\",\n    },\n}));\n\nconst packEditToForm = (target) => {\n    return {\n        ...target,\n        size: target.size.toString(),\n        time: (target.time / 86400).toString(),\n        price: (target.price / 100).toString(),\n        score: target.score.toString(),\n    };\n};\n\nconst defaultPack = {\n    name: \"\",\n    size: \"1073741824\",\n    time: \"\",\n    price: \"\",\n    score: \"\",\n};\n\nexport default function AddPack({ open, onClose, onSubmit, packEdit }) {\n    const classes = useStyles();\n    const [pack, setPack] = useState(defaultPack);\n\n    useEffect(() => {\n        if (packEdit) {\n            setPack(packEditToForm(packEdit));\n        } else {\n            setPack(defaultPack);\n        }\n    }, [packEdit]);\n\n    const handleChange = (name) => (event) => {\n        setPack({\n            ...pack,\n            [name]: event.target.value,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const packCopy = { ...pack };\n        packCopy.size = parseInt(packCopy.size);\n        packCopy.time = parseInt(packCopy.time) * 86400;\n        packCopy.price = parseInt(packCopy.price * 100);\n        packCopy.score = parseInt(packCopy.score);\n        packCopy.id = packEdit ? packEdit.id : new Date().valueOf();\n        onSubmit(packCopy, packEdit !== null);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">\n                    {packEdit ? \"编辑\" : \"添加\"}容量包\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    名称\n                                </InputLabel>\n                                <Input\n                                    value={pack.name}\n                                    onChange={handleChange(\"name\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    商品展示名称\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={pack.size}\n                                    onChange={handleChange(\"size\")}\n                                    min={1}\n                                    label={\"大小\"}\n                                    max={9223372036854775807}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    容量包的大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    有效期 (天)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={pack.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每个容量包的有效期\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (元)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0.01,\n                                        step: 0.01,\n                                    }}\n                                    value={pack.price}\n                                    onChange={handleChange(\"price\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    容量包的单价\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (积分)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={pack.score}\n                                    onChange={handleChange(\"score\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    使用积分购买时的价格，填写为 0\n                                    表示不能使用积分购买\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst useStyles = makeStyles(() => ({\n    formContainer: {\n        margin: \"8px 0 8px 0\",\n    },\n}));\n\nconst defaultGroup = {\n    name: \"\",\n    group_id: 2,\n    time: \"\",\n    price: \"\",\n    score: \"\",\n    des: \"\",\n    highlight: false,\n};\n\nconst groupEditToForm = (target) => {\n    return {\n        ...target,\n        time: (target.time / 86400).toString(),\n        price: (target.price / 100).toString(),\n        score: target.score.toString(),\n        des: target.des.join(\"\\n\"),\n    };\n};\n\nexport default function AddGroup({ open, onClose, onSubmit, groupEdit }) {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [group, setGroup] = useState(defaultGroup);\n\n    useEffect(() => {\n        if (groupEdit) {\n            setGroup(groupEditToForm(groupEdit));\n        } else {\n            setGroup(defaultGroup);\n        }\n    }, [groupEdit]);\n\n    useEffect(() => {\n        if (open && groups.length === 0) {\n            API.get(\"/admin/groups\")\n                .then((response) => {\n                    setGroups(response.data);\n                })\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                .catch(() => {});\n        }\n        // eslint-disable-next-line\n    }, [open]);\n\n    const handleChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            [name]: event.target.checked,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const groupCopy = { ...group };\n        groupCopy.time = parseInt(groupCopy.time) * 86400;\n        groupCopy.price = parseInt(groupCopy.price * 100);\n        groupCopy.score = parseInt(groupCopy.score);\n        groupCopy.id = groupEdit ? groupEdit.id : new Date().valueOf();\n        groupCopy.des = groupCopy.des.split(\"\\n\");\n        onSubmit(groupCopy, groupEdit !== null);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n            scroll={\"paper\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">\n                    {groupEdit ? \"编辑\" : \"添加\"}可购用户组\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    名称\n                                </InputLabel>\n                                <Input\n                                    value={group.name}\n                                    onChange={handleChange(\"name\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    商品展示名称\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={group.group_id}\n                                    onChange={handleChange(\"group_id\")}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID !== 3) {\n                                            return (\n                                                <MenuItem value={v.ID}>\n                                                    {v.Name}\n                                                </MenuItem>\n                                            );\n                                        }\n                                        return null;\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    购买后升级的用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    有效期 (天)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={group.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    单位购买时间的有效期\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (元)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0.01,\n                                        step: 0.01,\n                                    }}\n                                    value={group.price}\n                                    onChange={handleChange(\"price\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户组的单价\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (积分)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={group.score}\n                                    onChange={handleChange(\"score\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    使用积分购买时的价格，填写为 0\n                                    表示不能使用积分购买\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    商品描述 (一行一个)\n                                </InputLabel>\n                                <Input\n                                    value={group.des}\n                                    onChange={handleChange(\"des\")}\n                                    multiline\n                                    rowsMax={10}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    购买页面展示的商品描述\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={group.highlight}\n                                            onChange={handleCheckChange(\n                                                \"highlight\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"突出展示\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，在商品选择页面会被突出展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\n\nconst useStyles = makeStyles(() => ({\n    formContainer: {\n        margin: \"8px 0 8px 0\",\n    },\n}));\n\nexport default function AddRedeem({ open, onClose, products, onSuccess }) {\n    const classes = useStyles();\n    const [input, setInput] = useState({\n        num: 1,\n        id: 0,\n        time: 1,\n    });\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({\n            ...input,\n            [name]: event.target.value,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        input.num = parseInt(input.num);\n        input.id = parseInt(input.id);\n        input.time = parseInt(input.time);\n        input.type = 2;\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].id === input.id) {\n                if (products[i].group_id !== undefined) {\n                    input.type = 1;\n                } else {\n                    input.type = 0;\n                }\n                break;\n            }\n        }\n\n        API.post(\"/admin/redeem\", input)\n            .then((response) => {\n                onSuccess(response.data);\n                onClose();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">生成兑换码</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    生成数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                        max: 100,\n                                    }}\n                                    value={input.num}\n                                    onChange={handleChange(\"num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    激活码批量生成数量\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    对应商品\n                                </InputLabel>\n                                <Select\n                                    value={input.id}\n                                    onChange={(e) => {\n                                        handleChange(\"id\")(e);\n                                    }}\n                                >\n                                    {products.map((v) => (\n                                        <MenuItem\n                                            key={v.id}\n                                            value={v.id}\n                                            data-type={\"1\"}\n                                        >\n                                            {v.name}\n                                        </MenuItem>\n                                    ))}\n                                    <MenuItem value={0}>积分</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    商品数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    value={input.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    对于积分类商品，此处为积分数量，其他商品为时长倍数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        disabled={loading}\n                        onClick={onClose}\n                        color=\"default\"\n                    >\n                        取消\n                    </Button>\n                    <Button disabled={loading} type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Link from \"@material-ui/core/Link\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AddPack from \"../Dialogs/AddPack\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport { sizeToString } from \"../../../utils\";\nimport AddGroup from \"../Dialogs/AddGroupk\";\nimport AddRedeem from \"../Dialogs/AddRedeem\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    tabForm: {\n        marginTop: 20,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n        marginTop: theme.spacing(2),\n    },\n    navigator: {\n        marginTop: 10,\n    },\n}));\n\nconst product = {};\n\nexport default function VAS() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [tab, setTab] = useState(0);\n    const [options, setOptions] = useState({\n        alipay_enabled: \"0\",\n        payjs_enabled: \"0\",\n        wechat_enabled: \"0\",\n        payjs_id: \"\",\n        appid: \"\",\n        appkey: \"\",\n        shopid: \"\",\n        payjs_secret: \"\",\n        wechat_appid: \"\",\n        wechat_mchid: \"\",\n        wechat_serial_no: \"\",\n        wechat_api_key: \"\",\n        wechat_pk_content: \"\",\n        score_enabled: \"0\",\n        share_score_rate: \"0\",\n        score_price: \"0\",\n        ban_time: \"0\",\n        group_sell_data: \"[]\",\n        pack_data: \"[]\",\n    });\n    const [groups, setGroups] = useState([]);\n    const [packs, setPacks] = useState([]);\n    const [addPack, setAddPack] = useState(false);\n    const [addGroup, setAddGroup] = useState(false);\n    const [packEdit, setPackEdit] = useState(null);\n    const [groupEdit, setGroupEdit] = useState(null);\n    const [addRedeem, setAddRedeem] = useState(false);\n    const [redeems, setRedeems] = useState([]);\n    const [redeemsRes, setRedeemsRes] = useState([]);\n    const [redeemsResOpen, setRedeemsResOpen] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadRedeemList = () => {\n        API.post(\"/admin/redeem/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setRedeems(response.data.items);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        const res = JSON.parse(options.group_sell_data);\n        res.forEach((k) => {\n            product[k.id] = k.name;\n        });\n        setGroups(res);\n    }, [options.group_sell_data]);\n\n    useEffect(() => {\n        const res = JSON.parse(options.pack_data);\n        res.forEach((k) => {\n            product[k.id] = k.name;\n        });\n        setPacks(res);\n    }, [options.pack_data]);\n\n    useEffect(() => {\n        if (tab === 3) {\n            loadRedeemList();\n        }\n    }, [tab, page, pageSize]);\n\n    const deleteRedeem = (id) => {\n        API.delete(\"/admin/redeem/\" + id)\n            .then(() => {\n                loadRedeemList();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const redeemGenerated = (codes) => {\n        setRedeemsRes(codes);\n        setRedeemsResOpen(true);\n        loadRedeemList();\n    };\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value,\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const updateOption = () => {\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        updateOption();\n    };\n\n    const updatePackOption = (name, pack) => {\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: k === name ? pack : options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已保存\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleAddPack = (pack, isEdit) => {\n        setAddPack(false);\n        setPackEdit(null);\n        let newPacks;\n        if (isEdit) {\n            newPacks = packs.map((v) => {\n                if (v.id === pack.id) {\n                    return pack;\n                }\n                return v;\n            });\n        } else {\n            newPacks = [...packs, pack];\n        }\n\n        setPacks(newPacks);\n        const newPackData = JSON.stringify(newPacks);\n        setOptions({ ...options, pack_data: newPackData });\n        updatePackOption(\"pack_data\", newPackData);\n    };\n\n    const handleAddGroup = (group, isEdit) => {\n        setAddGroup(false);\n        setGroupEdit(null);\n        let newGroup;\n        if (isEdit) {\n            newGroup = groups.map((v) => {\n                if (v.id === group.id) {\n                    return group;\n                }\n                return v;\n            });\n        } else {\n            newGroup = [...groups, group];\n        }\n\n        setGroups(newGroup);\n        const newGroupData = JSON.stringify(newGroup);\n        setOptions({ ...options, group_sell_data: newGroupData });\n        updatePackOption(\"group_sell_data\", newGroupData);\n    };\n\n    const deletePack = (id) => {\n        let newPacks = [...packs];\n        newPacks = newPacks.filter((v) => {\n            return v.id !== id;\n        });\n        setPacks(newPacks);\n        const newPackData = JSON.stringify(newPacks);\n        setOptions({ ...options, pack_data: newPackData });\n        updatePackOption(\"pack_data\", newPackData);\n    };\n\n    const deleteGroup = (id) => {\n        let newGroups = [...groups];\n        newGroups = newGroups.filter((v) => {\n            return v.id !== id;\n        });\n        setGroups(newGroups);\n        const newPackData = JSON.stringify(newGroups);\n        setOptions({ ...options, group_sell_data: newPackData });\n        updatePackOption(\"group_sell_data\", newPackData);\n    };\n\n    return (\n        <div>\n            <Paper square>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(e, v) => setTab(v)}\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"支付/杂项设置\" />\n                    <Tab label=\"容量包\" />\n                    <Tab label=\"可购用户组\" />\n                    <Tab label=\"兑换码\" />\n                </Tabs>\n                <div className={classes.content}>\n                    {tab === 0 && (\n                        <form onSubmit={submit} className={classes.tabForm}>\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    支付宝当面付\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.alipay_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"alipay_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.alipay_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        App- ID\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.appid}\n                                                        onChange={handleChange(\n                                                            \"appid\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        当面付应用的 APPID\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        RSA 应用私钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.appkey}\n                                                        onChange={handleChange(\n                                                            \"appkey\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        当面付应用的 RSA2\n                                                        (SHA256)\n                                                        私钥，一般是由您自己生成。\n                                                        详情参考\n                                                        <Link\n                                                            target={\"_blank\"}\n                                                            href={\n                                                                \"https://docs.open.alipay.com/291/105971\"\n                                                            }\n                                                        >\n                                                            生成 RSA 密钥\n                                                        </Link>\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        支付宝公钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.shopid}\n                                                        onChange={handleChange(\n                                                            \"shopid\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        由支付宝提供，可在\n                                                        应用管理 - 应用信息 -\n                                                        接口加签方式 中获取\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    微信官方扫码支付\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.wechat_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"wechat_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.wechat_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        应用ID\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.wechat_appid}\n                                                        onChange={handleChange(\n                                                            \"wechat_appid\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        直连商户申请的公众号或移动应用appid\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        直连商户号\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.wechat_mchid}\n                                                        onChange={handleChange(\n                                                            \"wechat_mchid\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        直连商户的商户号，由微信支付生成并下发。\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        API v3 密钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.wechat_api_key}\n                                                        onChange={handleChange(\n                                                            \"wechat_api_key\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        商户需先在【商户平台】-【API安全】的页面设置该密钥，请求才能通过微信支付的签名校验。密钥的长度为32个字节。\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        商户证书序列号\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.wechat_serial_no}\n                                                        onChange={handleChange(\n                                                            \"wechat_serial_no\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        登陆商户平台【API安全】-【API证书】-【查看证书】，可查看商户API证书序列号。\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        商户API 私钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.wechat_pk_content}\n                                                        onChange={handleChange(\n                                                            \"wechat_pk_content\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        私钥文件 apiclient_key.pem 的内容\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    PAYJS 微信支付\n                                </Typography>\n\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <Alert severity=\"info\">\n                                            <Typography variant=\"body2\">\n                                                此服务由第三方平台{\" \"}\n                                                <Link\n                                                    href={\"https://payjs.cn/\"}\n                                                    target={\"_blank\"}\n                                                >\n                                                    PAYJS\n                                                </Link>{\" \"}\n                                                提供， 产生的任何纠纷与\n                                                Cloudreve 开发者无关。\n                                            </Typography>\n                                        </Alert>\n                                    </div>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.payjs_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"payjs_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.payjs_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        商户号\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.payjs_id}\n                                                        onChange={handleChange(\n                                                            \"payjs_id\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        可在 PAYJS\n                                                        管理面板首页看到\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        通信密钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={\n                                                            options.payjs_secret\n                                                        }\n                                                        onChange={handleChange(\n                                                            \"payjs_secret\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        可在 PAYJS\n                                                        管理面板首页看到\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    杂项设置\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <InputLabel htmlFor=\"component-helper\">\n                                                封禁缓冲期 (秒)\n                                            </InputLabel>\n                                            <Input\n                                                type={\"number\"}\n                                                inputProps={{\n                                                    step: 1,\n                                                    min: 1,\n                                                }}\n                                                value={options.ban_time}\n                                                onChange={handleChange(\n                                                    \"ban_time\"\n                                                )}\n                                                required\n                                            />\n                                            <FormHelperText id=\"component-helper-text\">\n                                                用户保持容量超额状态的最长时长，超出时长该用户会被系统冻结\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.score_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"score_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"允许为分享定价\"\n                                            />\n                                            <FormHelperText>\n                                                开启后，用户可为分享设定积分价格，下载需要扣除积分\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n\n                                    {options.score_enabled === \"1\" && (\n                                        <div className={classes.form}>\n                                            <FormControl fullWidth>\n                                                <InputLabel htmlFor=\"component-helper\">\n                                                    积分到账比率 (%)\n                                                </InputLabel>\n                                                <Input\n                                                    type={\"number\"}\n                                                    inputProps={{\n                                                        step: 1,\n                                                        min: 0,\n                                                        max: 100,\n                                                    }}\n                                                    value={\n                                                        options.share_score_rate\n                                                    }\n                                                    onChange={handleChange(\n                                                        \"share_score_rate\"\n                                                    )}\n                                                    required\n                                                />\n                                                <FormHelperText id=\"component-helper-text\">\n                                                    购买下载设定价格的分享，分享者实际到账的积分比率\n                                                </FormHelperText>\n                                            </FormControl>\n                                        </div>\n                                    )}\n\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <InputLabel htmlFor=\"component-helper\">\n                                                积分价格 (分)\n                                            </InputLabel>\n                                            <Input\n                                                type={\"number\"}\n                                                inputProps={{\n                                                    step: 1,\n                                                    min: 1,\n                                                }}\n                                                value={options.score_price}\n                                                onChange={handleChange(\n                                                    \"score_price\"\n                                                )}\n                                                required\n                                            />\n                                            <FormHelperText id=\"component-helper-text\">\n                                                充值积分时的价格\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Button\n                                    disabled={loading}\n                                    type={\"submit\"}\n                                    variant={\"contained\"}\n                                    color={\"primary\"}\n                                >\n                                    保存\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n\n                    {tab === 1 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddPack(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>名称</TableCell>\n                                            <TableCell>单价</TableCell>\n                                            <TableCell>时长</TableCell>\n                                            <TableCell>大小</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {packs.map((row) => (\n                                            <TableRow key={row.id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    ￥{row.price / 100}\n                                                    {row.score !== 0 &&\n                                                        \" 或 \" +\n                                                            row.score +\n                                                            \" 积分\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {Math.ceil(\n                                                        row.time / 86400\n                                                    )}\n                                                    天\n                                                </TableCell>\n                                                <TableCell>\n                                                    {sizeToString(row.size)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            setPackEdit(row);\n                                                            setAddPack(true);\n                                                        }}\n                                                        size={\"small\"}\n                                                    >\n                                                        <Edit />\n                                                    </IconButton>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deletePack(row.id)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    )}\n\n                    {tab === 2 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddGroup(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>名称</TableCell>\n                                            <TableCell>单价</TableCell>\n                                            <TableCell>时长</TableCell>\n                                            <TableCell>高亮</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {groups.map((row) => (\n                                            <TableRow key={row.id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    ￥{row.price / 100}\n                                                    {row.score !== 0 &&\n                                                        \" 或 \" +\n                                                            row.score +\n                                                            \" 积分\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {Math.ceil(\n                                                        row.time / 86400\n                                                    )}\n                                                    天\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.highlight\n                                                        ? \"是\"\n                                                        : \"否\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            setGroupEdit(row);\n                                                            setAddGroup(true);\n                                                        }}\n                                                        size={\"small\"}\n                                                    >\n                                                        <Edit />\n                                                    </IconButton>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deleteGroup(row.id)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    )}\n\n                    {tab === 3 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddRedeem(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>#</TableCell>\n                                            <TableCell>商品名</TableCell>\n                                            <TableCell>数量</TableCell>\n                                            <TableCell>兑换码</TableCell>\n                                            <TableCell>状态</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {redeems.map((row) => (\n                                            <TableRow key={row.ID}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.ID}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.ProductID === 0 &&\n                                                        \"积分\"}\n                                                    {product[row.ProductID] !==\n                                                        undefined && (\n                                                        <>\n                                                            {\n                                                                product[\n                                                                    row\n                                                                        .ProductID\n                                                                ]\n                                                            }\n                                                        </>\n                                                    )}\n                                                    {row.ProductID !== 0 &&\n                                                        !product[\n                                                            row.ProductID\n                                                        ] &&\n                                                        \"已失效商品\"}\n                                                </TableCell>\n                                                <TableCell>{row.Num}</TableCell>\n                                                <TableCell>\n                                                    {row.Code}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {!row.Used ? (\n                                                        <Box color=\"success.main\">\n                                                            未使用\n                                                        </Box>\n                                                    ) : (\n                                                        <Box color=\"warning.main\">\n                                                            已使用\n                                                        </Box>\n                                                    )}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deleteRedeem(row.ID)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                            <div className={classes.navigator}>\n                                <Pagination\n                                    count={Math.ceil(total / pageSize)}\n                                    onChange={(e, v) => setPage(v)}\n                                    color=\"secondary\"\n                                />\n                            </div>\n                        </div>\n                    )}\n\n                    <AddPack\n                        onSubmit={handleAddPack}\n                        open={addPack}\n                        packEdit={packEdit}\n                        onClose={() => {\n                            setAddPack(false);\n                            setPackEdit(null);\n                        }}\n                    />\n                    <AddGroup\n                        onSubmit={handleAddGroup}\n                        open={addGroup}\n                        groupEdit={groupEdit}\n                        onClose={() => {\n                            setAddGroup(false);\n                            setGroupEdit(null);\n                        }}\n                    />\n                    <AddRedeem\n                        open={addRedeem}\n                        onSuccess={redeemGenerated}\n                        products={[...groups, ...packs]}\n                        onClose={() => setAddRedeem(false)}\n                    />\n                    <AlertDialog\n                        title={\"生成结果\"}\n                        open={redeemsResOpen}\n                        msg={redeemsRes.map((v, k) => (\n                            <div key={k}>{v}</div>\n                        ))}\n                        onClose={() => {\n                            setRedeemsResOpen(false);\n                            setRedeemsRes([]);\n                        }}\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { CompactPicker } from \"react-color\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles((theme) => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\",\n        },\n        marginTop: theme.spacing(1),\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\",\n        },\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\",\n    },\n    fab: {\n        textAlign: \"right\",\n    },\n}));\n\nexport default function CreateTheme({ open, onClose, onSubmit }) {\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\",\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\",\n            },\n        },\n    });\n\n    const subTheme = useCallback(() => {\n        return createMuiTheme(theme);\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\",\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\",\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={(e) => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value,\n                                            },\n                                        },\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={(c) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex,\n                                                },\n                                            },\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark,\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"文字输入\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\n                    创建\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { Delete } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    colorContainer: {\n        display: \"flex\",\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6,\n    },\n}));\n\nexport default function Theme() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme: \"\",\n        home_view_method: \"icon\",\n        share_view_method: \"list\",\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteTheme = (color) => {\n        if (color === options.defaultTheme) {\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\n            return;\n        }\n        if (Object.keys(theme).length <= 1) {\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\n            return;\n        }\n        const themeCopy = { ...theme };\n        delete themeCopy[color];\n        const resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    const addTheme = (newTheme) => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                \"主色调不能与已有配色重复\",\n                \"warning\"\n            );\n            return;\n        }\n        const res = {\n            ...theme,\n            [newTheme.palette.primary.main]: newTheme,\n        };\n        const resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes: resStr,\n        });\n    };\n\n    useEffect(() => {\n        const res = JSON.parse(options.themes);\n        const themeString = {};\n\n        Object.keys(res).map((k) => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        主题配色\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>关键色</TableCell>\n                                        <TableCell>色彩配置</TableCell>\n                                        <TableCell>操作</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map((k) => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main,\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        \"格式不正确\"\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={(e) => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value,\n                                                        });\n                                                    }}\n                                                    onBlur={(e) => {\n                                                        try {\n                                                            const res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if (\n                                                                !(\n                                                                    \"palette\" in\n                                                                    res\n                                                                ) ||\n                                                                !(\n                                                                    \"primary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .primary\n                                                                ) ||\n                                                                !(\n                                                                    \"secondary\" in\n                                                                    res.palette\n                                                                ) ||\n                                                                !(\n                                                                    \"main\" in\n                                                                    res.palette\n                                                                        .secondary\n                                                                )\n                                                            ) {\n                                                                throw \"error\";\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res,\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true,\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false,\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton\n                                                    onClick={() =>\n                                                        deleteTheme(k)\n                                                    }\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{ marginTop: 8 }}\n                                    onClick={() => setCreate(true)}\n                                >\n                                    新建配色方案\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\n                                <Typography variant=\"body2\">\n                                    完整的配置项可在{\" \"}\n                                    <Link\n                                        href={\n                                            \"https://material-ui.com/zh/customization/default-theme/\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        默认主题 - Material-UI\n                                    </Link>{\" \"}\n                                    查阅。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认配色\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map((k) => (\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .primary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                            theme[k].palette\n                                                                .secondary.main,\n                                                    }}\n                                                    className={classes.colorDot}\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好配色时，站点默认使用的配色方案\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        界面\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    个人文件列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        小图标\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目录分享页列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>\n                                        小图标\n                                    </MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，目录分享页面的默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme\n                onSubmit={addTheme}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function ImageSetting() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server: \"\",\n        avatar_path: \"\",\n        avatar_size: \"\",\n        avatar_size_l: \"\",\n        avatar_size_m: \"\",\n        avatar_size_s: \"\",\n        thumb_width: \"\",\n        thumb_height: \"\",\n        office_preview_service: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        头像\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Gravatar 服务器\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Gravatar 服务器地址，可选择使用国内镜像\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    头像存储路径\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户上传自定义头像的存储路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={options.avatar_size}\n                                    onChange={handleChange(\"avatar_size\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"头像文件大小限制\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可上传头像文件的最大大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        文件预览\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    缩略图高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1,\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Office 文档预览服务\n                                </InputLabel>\n                                <Input\n                                    value={options.office_preview_service}\n                                    onChange={handleChange(\n                                        \"office_preview_service\"\n                                    )}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    可使用以下替换变量：\n                                    <br />\n                                    <code>{\"{$src}\"}</code> - 文件 URL\n                                    <br />\n                                    <code>{\"{$srcB64}\"}</code> - Base64\n                                    编码后的文件 URL\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        display: \"flex\",\n    },\n    cover: {\n        width: 100,\n        height: 60,\n    },\n    card: {},\n    content: {\n        flex: \"1 0 auto\",\n    },\n    bg: {\n        backgroundColor: theme.palette.background.default,\n        padding: \"24px 24px\",\n    },\n    dialogFooter: {\n        justifyContent: \"space-between\",\n    },\n}));\n\nconst policies = [\n    {\n        name: \"本机存储\",\n        img: \"local.png\",\n        path: \"/admin/policy/add/local\",\n    },\n    {\n        name: \"从机存储\",\n        img: \"remote.png\",\n        path: \"/admin/policy/add/remote\",\n    },\n    {\n        name: \"七牛\",\n        img: \"qiniu.png\",\n        path: \"/admin/policy/add/qiniu\",\n    },\n    {\n        name: \"阿里云 OSS\",\n        img: \"oss.png\",\n        path: \"/admin/policy/add/oss\",\n    },\n    {\n        name: \"又拍云\",\n        img: \"upyun.png\",\n        path: \"/admin/policy/add/upyun\",\n    },\n    {\n        name: \"腾讯云 COS\",\n        img: \"cos.png\",\n        path: \"/admin/policy/add/cos\",\n    },\n    {\n        name: \"OneDrive\",\n        img: \"onedrive.png\",\n        path: \"/admin/policy/add/onedrive\",\n    },\n    {\n        name: \"Amazon S3\",\n        img: \"s3.png\",\n        path: \"/admin/policy/add/s3\",\n    },\n];\n\nexport default function AddPolicy({ open, onClose }) {\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">选择存储方式</DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map((v, index) => (\n                        <Grid key={index} item sm={12} md={6}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={() => {\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"/static/img/\" + v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textSecondary\"\n                                        >\n                                            {v.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions className={classes.dialogFooter}>\n                <Button\n                    onClick={() =>\n                        window.open(\n                            \"https://docs.cloudreve.org/use/policy/compare\"\n                        )\n                    }\n                    color=\"primary\"\n                >\n                    存储策略对比\n                </Button>\n                <Button onClick={onClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { policyTypeMap } from \"../../../config\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory, useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"类型\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属文件数\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"数据量\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Policy() {\n    const classes = useStyles();\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter },\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, filter]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/policy/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    添加存储策略\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight: 8,\n                        }}\n                        value={filter}\n                        onChange={(e) => setFilter(e.target.value)}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"local\"}>本机</MenuItem>\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\n                        <MenuItem value={\"s3\"}>Amazon S3</MenuItem>\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {policyTypeMap[row.Type] !==\n                                            undefined &&\n                                            policyTypeMap[row.Type]}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={(e) => {\n                                                    setEditID(row.ID);\n                                                    handleClick(e);\n                                                }}\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\n                    }}\n                >\n                    专家模式编辑\n                </MenuItem>\n                <MenuItem\n                    onClick={(e) => {\n                        handleClose(e);\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\n                    }}\n                >\n                    向导模式编辑\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile ? \"文件名魔法变量\" : \"路径魔法变量\"}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>魔法变量</TableCell>\n                                <TableCell>描述</TableCell>\n                                <TableCell>示例</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{randomkey16}\"}\n                                </TableCell>\n                                <TableCell>16位随机字符</TableCell>\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{randomkey8}\"}\n                                </TableCell>\n                                <TableCell>8位随机字符</TableCell>\n                                <TableCell>gWz78q30</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{timestamp}\"}\n                                </TableCell>\n                                <TableCell>秒级时间戳</TableCell>\n                                <TableCell>1582692933</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{timestamp_nano}\"}\n                                </TableCell>\n                                <TableCell>纳秒级时间戳</TableCell>\n                                <TableCell>1582692933231834600</TableCell>\n                            </TableRow>\n                            {!isSlave && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{uid}\"}\n                                    </TableCell>\n                                    <TableCell>用户ID</TableCell>\n                                    <TableCell>1</TableCell>\n                                </TableRow>\n                            )}\n                            {isFile && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{originname}\"}\n                                    </TableCell>\n                                    <TableCell>原始文件名</TableCell>\n                                    <TableCell>MyPico.mp4</TableCell>\n                                </TableRow>\n                            )}\n                            {!isFile && !isSlave && (\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {\"{path}\"}\n                                    </TableCell>\n                                    <TableCell>用户上传路径</TableCell>\n                                    <TableCell>/我的文件/学习资料/</TableCell>\n                                </TableRow>\n                            )}\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{date}\"}\n                                </TableCell>\n                                <TableCell>日期</TableCell>\n                                <TableCell>20060102</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{datetime}\"}\n                                </TableCell>\n                                <TableCell>日期时间</TableCell>\n                                <TableCell>20060102150405</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{year}\"}\n                                </TableCell>\n                                <TableCell>年份</TableCell>\n                                <TableCell>2006</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{month}\"}\n                                </TableCell>\n                                <TableCell>月份</TableCell>\n                                <TableCell>01</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{day}\"}\n                                </TableCell>\n                                <TableCell>日</TableCell>\n                                <TableCell>02</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{hour}\"}\n                                </TableCell>\n                                <TableCell>小时</TableCell>\n                                <TableCell>15</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{minute}\"}\n                                </TableCell>\n                                <TableCell>分钟</TableCell>\n                                <TableCell>04</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {\"{second}\"}\n                                </TableCell>\n                                <TableCell>秒</TableCell>\n                                <TableCell>05</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({ onChange, value, required, label }) {\n    const [domain, setDomain] = useState(\"\");\n    const [protocol, setProtocol] = useState(\"https://\");\n    const [error, setError] = useState();\n\n    useState(() => {\n        value = value ? value : \"\";\n        if (value.startsWith(\"https://\")) {\n            setDomain(value.replace(\"https://\", \"\"));\n            setProtocol(\"https://\");\n        } else {\n            if (value !== \"\") {\n                setDomain(value.replace(\"http://\", \"\"));\n                setProtocol(\"http://\");\n            }\n        }\n    }, [value]);\n\n    useEffect(() => {\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\n            setError(\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\n            );\n        } else {\n            setError(\"\");\n        }\n    }, [protocol]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={(e) => {\n                    setDomain(e.target.value);\n                    onChange({\n                        target: {\n                            value: protocol + e.target.value,\n                        },\n                    });\n                }}\n                required={required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={(e) => {\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target: {\n                                        value: e.target.value + domain,\n                                    },\n                                });\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && (\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\n            )}\n        </FormControl>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function LocalGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule,\n        })\n            .then(() => {\n                setActiveStep(1);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { randomStr } from \"../../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储端配置\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"remote\",\n                  Name: \"\",\n                  Server: \"https://example.com:5212\",\n                  SecretKey: randomStr(64),\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret: policy.SecretKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}从机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                        从机存储策略允许你使用同样运行了 Cloudreve\n                        的服务器作为存储端， 用户上传下载流量通过 HTTP 直传。\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                将和主站相同版本的 Cloudreve\n                                程序拷贝至要作为从机的服务器上。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                                可将您的密钥填入下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机密钥\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength: 64,\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                修改从机配置文件。\n                                <br />\n                                在从机端 Cloudreve 的同级目录下新建\n                                <code>conf.ini</code>\n                                文件，填入从机配置，启动/重启从机端 Cloudreve。\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                            </Typography>\n                            <pre>\n                                [System]\n                                <br />\n                                Mode = slave\n                                <br />\n                                Listen = :5212\n                                <br />\n                                <br />\n                                [Slave]\n                                <br />\n                                Secret = {policy.SecretKey}\n                                <br />\n                                <br />\n                                [CORS]\n                                <br />\n                                AllowOrigins = *<br />\n                                AllowMethods = OPTIONS,GET,POST\n                                <br />\n                                AllowHeaders = *<br />\n                            </pre>\n                            <Typography variant={\"body2\"}>\n                                从机端配置文件格式大致与主站端相同，区别在于：\n                                <ul>\n                                    <li>\n                                        <code>System</code>\n                                        分区下的\n                                        <code>mode</code>\n                                        字段必须更改为<code>slave</code>\n                                    </li>\n                                    <li>\n                                        必须指定<code>Slave</code>分区下的\n                                        <code>Secret</code>\n                                        字段，其值为第二步里填写或生成的密钥。\n                                    </li>\n                                    <li>\n                                        必须启动跨域配置，即<code>CORS</code>\n                                        字段的内容，\n                                        具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过\n                                        Web 端向从机上传文件。\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写从机地址。\n                                <br />\n                                如果主站启用了\n                                HTTPS，从机也需要启用，并在下方填入 HTTPS\n                                协议的地址。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机地址\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={() => testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    测试从机通信\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={(e) => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\",\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"qiniu\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      mimetype: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 七牛 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用七牛存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.qiniu.com/create\"}\n                                    target={\"_blank\"}\n                                >\n                                    七牛控制面板\n                                </Link>\n                                创建对象存储资源。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储空间名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公有\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写您为存储空间绑定的 CDN 加速域名。\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"CDN 加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在七牛控制面板进入 个人中心 -\n                                密钥管理，在下方填写获得到的 AK、SK。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3, [\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件 MimeType？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"image/*\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4, [\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !==\n                                            \"\",\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\n                                    隔开。七牛服务器会侦测文件内容以判断\n                                    MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            MimeType 列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function OSSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"oss\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      server_side_endpoint: \"\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        if (!useLanEndpoint) {\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://oss.console.aliyun.com/overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    OSS 管理控制台\n                                </Link>\n                                创建 Bucket。注意：创建空间类型只能选择\n                                <code>标准存储</code>或<code>低频访问</code>\n                                ，暂不支持<code>归档存储</code>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您创建 Bucket 时指定的\n                                <code>Bucket 名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Bucket 名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的概览页面，填写\n                                <code>访问域名</code>栏目下\n                                <code>外网访问</code> 一行中间的{\" \"}\n                                <code>EndPoint（地域节点）</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                            title:\n                                                \"格式不合法，只需输入域名部分即可\",\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                如果您的 Cloudreve\n                                部署在阿里云计算服务中，并且与 OSS\n                                处在同一可用区下，您可以额外指定使用内网\n                                EndPoint\n                                以节省流量开始。是否要在服务端发送请求时使用 OSS\n                                内网 EndPoint？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useLanEndpoint.toString()}\n                                        onChange={(e) => {\n                                            setUseLanEndpoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useLanEndpoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            内网 EndPoint\n                                        </InputLabel>\n                                        <Input\n                                            required={useLanEndpoint}\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                            inputProps={{\n                                                pattern:\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\n                                                title:\n                                                    \"格式不合法，只需输入域名部分即可\",\n                                            }}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>7</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://cdn.console.aliyun.com/domain/list\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        阿里云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS\n                                    Bucket。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在阿里云\n                                <Link\n                                    href={\n                                        \"https://usercenter.console.aliyun.com/#/manage/ak\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    安全信息管理\n                                </Link>\n                                页面获取 用户 AccessKey，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(8, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    n\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function UpyunGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"upyun\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  IsPrivate: \"false\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      token: \"\",\n                  },\n              }\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用又拍云存储策略前，请确保您在 参数设置 -\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.upyun.com/services/create/file/\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    又拍云面板\n                                </Link>\n                                创建云存储服务。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写所创建的服务名称：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        服务名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用\n                                HTTPS：\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。\n                                <br />\n                                前往所创建云存储服务的 功能配置 面板，转到\n                                访问配置 选项卡，开启 Token 防盗链并设定密码。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"已开启 Token 防盗链\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"未开启 Token 防盗链\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    填写您所设置的 Token 防盗链 密钥\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Token 防盗链 密钥\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={\n                                                policy.IsPrivate === \"true\"\n                                            }\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"开启 Token 防盗链后无法使用直链功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"云函数回调\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function COSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"cos\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [region, setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = policy.Server;\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const creatCallback = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region: region,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\n                setActiveStep(6);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置\n                                - 站点信息 - 站点URL 中填写的\n                                地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cos5\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    COS 管理控制台\n                                </Link>\n                                创建存储桶。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建存储桶的基础配置页面，将\n                                <code>空间名称</code>填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        空间名称\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\n                                            title:\n                                                \"空间名格式不正确, 举例：ccc-1252109809\",\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的访问权限类型，推荐选择\n                                <code>私有读写</code>\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有读写\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读私有写\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的基础配置，填写\n                                <code>基本信息</code>栏目下 给出的{\" \"}\n                                <code>访问域名</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={\"访问域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link\n                                        href={\n                                            \"https://console.cloud.tencent.com/cdn/access/guid\"\n                                        }\n                                        target={\"_blank\"}\n                                    >\n                                        腾讯云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS\n                                    存储桶。在下方填写 CDN\n                                    加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在腾讯云\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/cam/capi\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    访问密钥\n                                </Link>\n                                页面获取\n                                一对访问密钥，并填写在下方。请确保这对密钥拥有\n                                COS 和 SCF 服务的访问权限。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretId\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContental}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 客户端直传需要借助腾讯云的\n                                <Link\n                                    href={\n                                        \"https://console.cloud.tencent.com/scf/index?rid=16\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    云函数\n                                </Link>\n                                产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\n                                如果是作为公有使用，请务必创建回调云函数。\n                                <br />\n                                <br />\n                            </Typography>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 可以尝试帮你自动创建回调云函数，请选择\n                                COS 存储桶 所在地域后继续。\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶所在地区\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={(e) =>\n                                            setRegion(e.target.value)\n                                        }\n                                        required\n                                    >\n                                        <MenuItem value={\"ap-beijing\"}>\n                                            华北地区(北京)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-chengdu\"}>\n                                            西南地区(成都)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou\"}>\n                                            华南地区(广州)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-guangzhou-open\"}>\n                                            华南地区(广州Open)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-hongkong\"}>\n                                            港澳台地区(中国香港)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-mumbai\"}>\n                                            亚太南部(孟买)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-shanghai\"}>\n                                            华东地区(上海)\n                                        </MenuItem>\n                                        <MenuItem value={\"ap-singapore\"}>\n                                            亚太东南(新加坡)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-siliconvalley\"}>\n                                            美国西部(硅谷)\n                                        </MenuItem>\n                                        <MenuItem value={\"na-toronto\"}>\n                                            北美地区(多伦多)\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我创建\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport AlertDialog from \"../../Dialogs/Alert\";\nimport { getNumber } from \"../../../../utils\";\nimport DomainInput from \"../../Common/DomainInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"应用授权\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"账号授权\",\n        optional: false,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nexport default function OneDriveGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\n        props.policy && props.policy.OptionsSerialized.od_proxy\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\n            : false\n    );\n    const [useSharePoint, setUseSharePoint] = useState(\n        props.policy && props.policy.OptionsSerialized.od_driver\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\n            : false\n    );\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"onedrive\",\n                  Name: \"\",\n                  BucketName: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"https://graph.microsoft.com/v1.0\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      od_redirect: \"\",\n                      od_proxy: \"\",\n                      od_driver: \"\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n    const [httpsAlert, setHttpsAlert] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"],\n        })\n            .then((response) => {\n                if (!response.data.siteURL.startsWith(\"https://\")) {\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\") {\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized: {\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\n                                \"/api/v3/callback/onedrive/auth\",\n                                response.data.siteURL\n                            ).toString(),\n                        },\n                    });\n                }\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const statOAuth = () => {\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\n            .then((response) => {\n                window.location.href = response.data;\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\n            policyCopy.BaseURL =\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\n        } else {\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\n        }\n\n        if (!useCDN) {\n            policyCopy.OptionsSerialized.od_proxy = \"\";\n        }\n\n        if (!useSharePoint) {\n            policyCopy.OptionsSerialized.od_driver = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={() => setHttpsAlert(false)}\n                title={\"警告\"}\n                msg={\n                    \"您必须启用 HTTPS 才能使用 OneDrive/SharePoint 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} OneDrive/SharePoint 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\n                                        \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (国际版账号)\n                                </Link>{\" \"}\n                                或者{\" \"}\n                                <Link\n                                    href={\n                                        \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\n                                    }\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (世纪互联账号)\n                                </Link>\n                                并登录，登录后进入\n                                <code>Azure Active Directory</code>管理面板。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入左侧 <code>应用注册</code> 菜单，并点击{\" \"}\n                                <code>新注册</code> 按钮。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写应用注册表单。其中，名称可任取；\n                                <code>受支持的帐户类型</code> 选择为\n                                <code>\n                                    任何组织目录(任何 Azure AD 目录 -\n                                    多租户)中的帐户\n                                </code>\n                                ；<code>重定向 URI (可选)</code>\n                                请选择<code>Web</code>，并填写\n                                <code>\n                                    {policy.OptionsSerialized.od_redirect}\n                                </code>\n                                ； 其他保持默认即可\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                创建完成后进入应用管理的<code>概览</code>\n                                页面，复制<code>应用程序(客户端) ID</code>\n                                并填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        应用程序(客户端) ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入应用管理页面左侧的<code>证书和密码</code>\n                                菜单，点击\n                                <code>新建客户端密码</code>\n                                按钮，<code>截止期限</code>选择为\n                                <code>从不</code>\n                                。创建完成后将客户端密码的值填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        客户端密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择您的 Microsoft 365 账号类型：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\n                                                \"https://graph.microsoft.com/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"国际版\"\n                                        />\n                                        <FormControlLabel\n                                            value={\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\n                                            }\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"世纪互联版\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否将文件存放在 SharePoint 中？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useSharePoint.toString()}\n                                        onChange={(e) => {\n                                            setUseSharePoint(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"存到指定 SharePoint 中\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"存到账号默认 OneDrive 驱动器中\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useSharePoint}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SharePoint 站点地址\n                                        </InputLabel>\n                                        <Input\n                                            placeholder={\n                                                \"https://example.sharepoint.com/sites/demo\"\n                                            }\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                            required={useSharePoint}\n                                            label={\"SharePoint 站点地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>8</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要在文件下载时替换为使用自建的反代服务器？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN.toString()}\n                                        onChange={(e) => {\n                                            setUseCDN(\n                                                e.target.value === \"true\"\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                            <Collapse in={useCDN}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <DomainInput\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                            required={useCDN}\n                                            label={\"反代服务器地址\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>9</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}\n                                ，但是你需要点击下方按钮，并使用 OneDrive\n                                登录授权以完成初始化后才能使用。\n                                日后你可以在存储策略列表页面重新进行授权。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    转到授权页面\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}></div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已添加！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport { getNumber } from \"../../../../utils\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AlertDialog from \"../../Dialogs/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false,\n    },\n    {\n        title: \"上传路径\",\n        optional: false,\n    },\n    {\n        title: \"直链设置\",\n        optional: false,\n    },\n    {\n        title: \"上传限制\",\n        optional: false,\n    },\n    {\n        title: \"跨域策略\",\n        optional: true,\n    },\n    {\n        title: \"完成\",\n        optional: false,\n    },\n];\n\nconst regions = {\n    \"us-east-2\": \"US East (Ohio)\",\n    \"us-east-1\": \"US East (N. Virginia)\",\n    \"us-west-1\": \"US West (N. California)\",\n    \"us-west-2\": \"US West (Oregon)\",\n    \"af-south-1\": \"Africa (Cape Town)\",\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\n    \"ca-central-1\": \"Canada (Central)\",\n    \"cn-north-1\": \"China (Beijing)\",\n    \"cn-northwest-1\": \"China (Ningxia)\",\n    \"eu-central-1\": \"Europe (Frankfurt)\",\n    \"eu-west-1\": \"Europe (Ireland)\",\n    \"eu-west-2\": \"Europe (London)\",\n    \"eu-south-1\": \"Europe (Milan)\",\n    \"eu-west-3\": \"Europe (Paris)\",\n    \"eu-north-1\": \"Europe (Stockholm)\",\n    \"me-south-1\": \"Middle East (Bahrain)\",\n    \"sa-east-1\": \"South America (São Paulo)\",\n};\n\nexport default function S3Guide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(true);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"s3\",\n                  Name: \"\",\n                  SecretKey: \"\",\n                  AccessKey: \"\",\n                  BaseURL: \"\",\n                  Server: \"\",\n                  IsPrivate: \"true\",\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\",\n                      region: \"us-east-2\",\n                  },\n              }\n    );\n    const [policyID, setPolicyID] = useState(\n        props.policy ? props.policy.ID : 0\n    );\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = () => {\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={alertOpen}\n                onClose={() => setAlertOpen(false)}\n                title={\"警告\"}\n                msg={\n                    \"S3 类型存储策略目前仅可用于自己使用，或者是给受信任的用户组使用。\"\n                }\n            />\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"} Amazon S3 存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                Cloudreve 主站需要启用 CORS 支持，具体步骤如下：\n                                <br />\n                                修改 Cloudreve 配置文件，新增以下 CORS\n                                配置项，保存并重启 Cloudreve。\n                                <pre>\n                                    [CORS]\n                                    <br />\n                                    AllowOrigins = *<br />\n                                    AllowMethods = OPTIONS,GET,POST\n                                    <br />\n                                    AllowHeaders = *<br />\n                                </pre>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往 AWS S3\n                                控制台创建存储桶，在下方填写您创建存储桶时指定的\n                                <code>存储桶名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的公共访问权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"阻止全部公共访问权限\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许公共读取\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                (可选) 指定存储桶的 EndPoint（地域节点），\n                                填写为完整的 URL 格式，比如{\" \"}\n                                <code>https://bucket.region.example.com</code>。\n                                留空则将使用系统生成的默认接入点。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择存储桶所在的区域，或者手动输入区域代码\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <Autocomplete\n                                        options={Object.keys(regions)}\n                                        freeSolo\n                                        value={policy.OptionsSerialized.region}\n                                        onInputChange={(_, value) =>\n                                            handleOptionChange(\"region\")({\n                                                target: { value: value },\n                                            })\n                                        }\n                                        renderOption={(option) => (\n                                            <React.Fragment>\n                                                {regions[option]}\n                                            </React.Fragment>\n                                        )}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                style={{ width: \"100%\" }}\n                                                {...params}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用 CDN 加速访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={(e) => {\n                                            setUseCDN(e.target.value);\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    CDN 加速域名\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(6, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                获取访问密钥，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern: \"\\\\S+\",\n                                            title: \"不能含有空格\",\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(7, [useCDN === \"true\"])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={(e) => {\n                                            if (\n                                                policy.IsPrivate === \"true\" &&\n                                                e.target.value === \"true\"\n                                            ) {\n                                                ToggleSnackbar(\n                                                    \"top\",\n                                                    \"right\",\n                                                    \"私有空间无法开启此功能\",\n                                                    \"warning\"\n                                                );\n                                                return;\n                                            }\n                                            handleChange(\"IsOriginLinkEnable\")(\n                                                e\n                                            );\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={(e) => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer} />\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                S3 Bucket 需要正确配置跨域策略后才能使用 Web\n                                端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\n                                Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={() => createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => {\n                                setActiveStep(\n                                    (prevActiveStep) => prevActiveStep + 1\n                                );\n                                setSkipped((prevSkipped) => {\n                                    const newSkipped = new Set(\n                                        prevSkipped.values()\n                                    );\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }}\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useParams } from \"react-router\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddPolicyParent() {\n    const classes = useStyles();\n\n    const { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type === \"local\" && <LocalGuide />}\n                {type === \"remote\" && <RemoteGuide />}\n                {type === \"qiniu\" && <QiniuGuide />}\n                {type === \"oss\" && <OSSGuide />}\n                {type === \"upyun\" && <UpyunGuide />}\n                {type === \"cos\" && <COSGuide />}\n                {type === \"onedrive\" && <OneDriveGuide />}\n                {type === \"s3\" && <S3Guide />}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nexport default function EditPro(props) {\n    const [, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>设置项</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>描述</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    ID\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>存储策略编号</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    类型\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>存储策略类型</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    名称\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储策名称</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Server\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储端 Endpoint</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    BucketName\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\n                                                \"BucketName\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储桶标识</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    私有空间\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否为私有空间</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    文件资源根URL\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    预览/获取文件外链时生成URL的前缀\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    AccessKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>AccessKey / 刷新Token</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SecretKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>SecretKey</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    最大单文件尺寸 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min: 0,\n                                                step: 1,\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    最大可上传的文件尺寸，填写为0表示不限制\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    自动重命名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\n                                                \"AutoRename\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否根据规则对上传物理文件重命名\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储路径\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\n                                                \"DirNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储路径</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储文件名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储文件名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许获取外链\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\n                                                \"IsOriginLinkEnable\"\n                                            )}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    又拍云防盗链 Token\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许文件扩展名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>留空表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许的 MimeType\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对七牛存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 重定向地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_redirect\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_redirect\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>一般添加后无需修改</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 反代服务器地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_proxy\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_proxy\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive/SharePoint 驱动器资源标识\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .od_driver\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"od_driver\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 OneDrive\n                                    存储策略有效，留空则使用用户的默认 OneDrive\n                                    驱动器\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Amazon S3 Region\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized.region\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"region\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>\n                                    仅对 Amazon S3 存储策略有效\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    内网 EndPoint\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .server_side_endpoint\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"server_side_endpoint\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对 OSS 存储策略有效</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{ margin: 8 }}\n                    >\n                        保存更改\n                    </Button>\n                </form>\n            </TableContainer>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useParams } from \"react-router\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport S3Guide from \"./Guid/S3Guide\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport EditPro from \"./Guid/EditPro\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditPolicyPreload() {\n    const classes = useStyles();\n    const [type, setType] = useState(\"\");\n    const [policy, setPolicy] = useState({});\n\n    const { mode, id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then((response) => {\n                response.data.IsOriginLinkEnable = response.data\n                    .IsOriginLinkEnable\n                    ? \"true\"\n                    : \"false\";\n                response.data.AutoRename = response.data.AutoRename\n                    ? \"true\"\n                    : \"false\";\n                response.data.MaxSize = response.data.MaxSize.toString();\n                response.data.IsPrivate = response.data.IsPrivate\n                    ? \"true\"\n                    : \"false\";\n                response.data.OptionsSerialized.file_type = response.data\n                    .OptionsSerialized.file_type\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\n                    : \"\";\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" && (\n                    <>\n                        {type === \"local\" && <LocalGuide policy={policy} />}\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\n                        {type === \"cos\" && <COSGuide policy={policy} />}\n                        {type === \"onedrive\" && (\n                            <OneDriveGuide policy={policy} />\n                        )}\n                        {type === \"s3\" && <S3Guide policy={policy} />}\n                    </>\n                )}\n\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory, useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属用户数\",\n        minWidth: 50,\n        align: \"right\",\n    },\n    {\n        id: \"size\",\n        label: \"最大容量\",\n        minWidth: 100,\n        align: \"right\",\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\",\n    },\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Group() {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    const location = useLocation();\n    const history = useHistory();\n    const query = useQuery();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (query.get(\"code\") === \"0\") {\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\n                \"warning\"\n            );\n        }\n    }, [location]);\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const deletePolicy = (id) => {\n        API.delete(\"/admin/group/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户组\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null &&\n                                            row.PolicyList.map((pid, key) => {\n                                                let res = \"\";\n                                                if (policies[pid]) {\n                                                    res += policies[pid].Name;\n                                                }\n                                                if (\n                                                    key !==\n                                                    row.PolicyList.length - 1\n                                                ) {\n                                                    res += \" / \";\n                                                }\n                                                return res;\n                                            })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/group/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\nexport default function GroupForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: [\"1\"], // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\",\n                  },\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const theme = useTheme();\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value,\n        });\n    };\n\n    const handleOptionCheckChange = (name) => (event) => {\n        const value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value,\n            },\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized },\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"relocate\",\n            \"one_time_download\",\n            \"share_download\",\n            \"share_free\",\n            \"aria2\",\n        ].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] =\n                    groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\"compress_size\", \"decompress_size\"].forEach((v) => {\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\n                groupCopy.OptionsSerialized[v] = parseInt(\n                    groupCopy.OptionsSerialized[v]\n                );\n            }\n        });\n        groupCopy.PolicyList = groupCopy.PolicyList.map((v) => {\n            return parseInt(v);\n        });\n\n        if (groupCopy.PolicyList.length < 1 && groupCopy.ID !== 3) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                \"至少要为用户组选择一个存储策略\",\n                \"warning\"\n            );\n            return;\n        }\n\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\n                groupCopy.OptionsSerialized.aria2_options\n            );\n        } catch (e) {\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy,\n        })\n            .then(() => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户组已\" + (props.group ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && \"新建用户组\"}\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        {group.ID !== 3 && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            用户组名\n                                        </InputLabel>\n                                        <Input\n                                            value={group.Name}\n                                            onChange={handleChange(\"Name\")}\n                                            required\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            用户组的名称\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            可用存储策略\n                                        </InputLabel>\n                                        <Select\n                                            labelId=\"demo-mutiple-chip-label\"\n                                            id=\"demo-mutiple-chip\"\n                                            multiple\n                                            value={group.PolicyList}\n                                            onChange={handleChange(\n                                                \"PolicyList\"\n                                            )}\n                                            input={\n                                                <Input id=\"select-multiple-chip\" />\n                                            }\n                                            renderValue={(selected) => (\n                                                <div className={classes.chips}>\n                                                    {selected.map((value) => (\n                                                        <Chip\n                                                            style={{\n                                                                margin: 2,\n                                                            }}\n                                                            key={value}\n                                                            size={\"small\"}\n                                                            label={\n                                                                policies[value]\n                                                            }\n                                                            className={\n                                                                classes.chip\n                                                            }\n                                                        />\n                                                    ))}\n                                                </div>\n                                            )}\n                                        >\n                                            {Object.keys(policies).map(\n                                                (pid) => (\n                                                    <MenuItem\n                                                        key={pid}\n                                                        value={pid}\n                                                        style={getStyles(\n                                                            pid,\n                                                            group.PolicyList,\n                                                            theme\n                                                        )}\n                                                    >\n                                                        {policies[pid]}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </Select>\n                                        <FormHelperText id=\"component-helper-text\">\n                                            指定用户组可用的存储策略，可多选，用户可在选定范围内自由切换存储策略。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <SizeInput\n                                            value={group.MaxStorage}\n                                            onChange={handleChange(\n                                                \"MaxStorage\"\n                                            )}\n                                            min={0}\n                                            max={9223372036854775807}\n                                            label={\"初始容量\"}\n                                            required\n                                        />\n                                    </FormControl>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        用户组下的用户初始可用最大容量\n                                    </FormHelperText>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"下载限速\"}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                填写为 0 表示不限制。开启限制后，\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.ShareEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"ShareEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"允许创建分享\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法创建分享链接\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法下载别人创建的文件分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_free === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_free\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"免积分下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，用户可以免费下载需付积分的分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.WebDAVEnabled ===\n                                                    \"true\"\n                                                }\n                                                onChange={handleCheckChange(\n                                                    \"WebDAVEnabled\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"WebDAV\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        关闭后，用户无法通过 WebDAV\n                                        协议连接至网盘\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"禁止多次下载请求\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .aria2 === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"aria2\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"离线下载\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否允许用户创建离线下载任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 任务参数\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        此用户组创建离线下载任务时额外携带的参数，以\n                                        JSON\n                                        编码后的格式书写，您可也可以将这些设置写在\n                                        Aria2 配置文件里，可用参数请查阅官方文档\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"打包下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户多选文件打包下载\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .archive_task === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"archive_task\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"压缩/解压缩 任务\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否用户创建 压缩/解压缩 任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待压缩文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待解压文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n\n                        {group.ID !== 3 && (\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    group.OptionsSerialized\n                                                        .relocate === \"true\"\n                                                }\n                                                onChange={handleOptionCheckChange(\n                                                    \"relocate\"\n                                                )}\n                                            />\n                                        }\n                                        label=\"存储策略转移\"\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        是否用户创建存储策略转移任务\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport GroupForm from \"./GroupForm\";\n\nexport default function EditGroupPreload() {\n    const [group, setGroup] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then((response) => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"relocate\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"share_free\",\n                    \"aria2\",\n                ].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[v] = response.data\n                            .OptionsSerialized[v]\n                            ? \"true\"\n                            : \"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\"compress_size\", \"decompress_size\"].forEach((v) => {\n                    if (response.data.OptionsSerialized[v] !== undefined) {\n                        response.data.OptionsSerialized[\n                            v\n                        ] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList.map((v) => {\n                    return v.toString();\n                });\n\n                // JSON转换\n                if (\n                    response.data.OptionsSerialized.aria2_options === undefined\n                ) {\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\n                } else {\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\n                            response.data.OptionsSerialized.aria2_options\n                        );\n                    } catch (e) {\n                        ToggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            \"Aria2 设置项格式错误\",\n                            \"warning\"\n                        );\n                        return;\n                    }\n                }\n                setGroup(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        group_id: \"all\",\n        status: \"all\",\n    });\n    const [groups, setGroups] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                nick: keywords,\n                email: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户组\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {groups.map((v) => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        用户状态\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"0\"}>正常</MenuItem>\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 昵称 / 用户名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport UserFilter from \"../Dialogs/UserFilter\";\nimport Badge from \"@material-ui/core/Badge\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Group() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const block = (id) => {\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\" + id)\n            .then((response) => {\n                setUsers(\n                    users.map((v) => {\n                        if (v.ID === id) {\n                            const newUser = { ...v, Status: response.data };\n                            return newUser;\n                        }\n                        return v;\n                    })\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = users.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        昵称\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        Email\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    用户组\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        已用空间\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color:\n                                                        theme.palette.success\n                                                            .main,\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                正常\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                未激活\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                被封禁\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                超额封禁\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"封禁/解封\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() => block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\nexport default function UserForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\", // 转换类型\n                  Score: \"0\", // 转换类型\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then((response) => {\n                setGroups(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = (name) => (event) => {\n        setUser({\n            ...user,\n            [name]: event.target.value,\n        });\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n        const userCopy = { ...user };\n\n        // 整型转换\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password: userCopy.Password,\n        })\n            .then(() => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"用户已\" + (props.user ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && \"创建用户\"}\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    邮箱\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    昵称\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && \"留空表示不修改\"}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\"GroupID\")}\n                                    required\n                                >\n                                    {groups.map((v) => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户所属用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\"Status\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\n                                    <MenuItem value={\"3\"}>\n                                        超额使用被封禁\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    积分\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1,\n                                    }}\n                                    value={user.Score}\n                                    onChange={handleChange(\"Score\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport UserForm from \"./UserForm\";\n\nexport default function EditUserPreload() {\n    const [user, setUser] = useState({});\n\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then((response) => {\n                // 整型转换\n                [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        policy_id: \"all\",\n        user_id: \"\",\n    });\n    const [policies, setPolicies] = useState([]);\n    const [keywords, setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                setPolicies(response.data.items);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        存储策略\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {policies.map((v) => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../utils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport FileFilter from \"../Dialogs/FileFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function File() {\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = (force) => () => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"删除任务将在后台执行\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = files.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/file/import\")}\n                    variant={\"contained\"}\n                    style={{\n                        alignSelf: \"center\",\n                    }}\n                >\n                    从外部导入\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch(false)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"强制删除\">\n                            <IconButton\n                                onClick={deleteBatch(true)}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <DeleteForever />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        文件名\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 70 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    上传者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    上传于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/api/v3/admin/file/preview/\" +\n                                                row.ID\n                                            }\n                                        >\n                                            {row.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\n    const [input, setInput] = useState({\n        is_dir: \"all\",\n        user_id: \"\",\n    });\n    const [keywords, setKeywords] = useState(\"\");\n\n    const handleChange = (name) => (event) => {\n        setInput({ ...input, [name]: event.target.value });\n    };\n\n    const submit = () => {\n        const res = {};\n        Object.keys(input).forEach((v) => {\n            if (input[v] !== \"all\" && input[v] !== \"\") {\n                res[v] = input[v];\n            }\n        });\n        setFilter(res);\n        if (keywords !== \"\") {\n            setSearch({\n                source_name: keywords,\n            });\n        } else {\n            setSearch({});\n        }\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        源文件类型\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"1\"}>目录</MenuItem>\n                        <MenuItem value={\"0\"}>文件</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={input.user_id}\n                        onChange={handleChange(\"user_id\")}\n                        id=\"standard-basic\"\n                        label=\"上传者ID\"\n                    />\n                </FormControl>\n                <FormControl fullWidth style={{ marginTop: 16 }}>\n                    <TextField\n                        value={keywords}\n                        onChange={(e) => setKeywords(e.target.value)}\n                        id=\"standard-basic\"\n                        label=\"搜索 文件名\"\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete, FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Share() {\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        对象名\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        浏览\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        下载\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"score\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"score\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        积分\n                                        {orderBy[0] === \"score\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    自动过期\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    分享于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/s/\" +\n                                                ids[row.ID] +\n                                                (row.Password === \"\"\n                                                    ? \"\"\n                                                    : \"?password=\" +\n                                                      row.Password)\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Score}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 &&\n                                            row.RemainDownloads + \" 次下载后\"}\n                                        {row.RemainDownloads === -1 && \"无\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Order() {\n    const classes = useStyles();\n    const [orders, setOrders] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/order/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setOrders(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/order/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/order/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = orders.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < orders.length\n                                        }\n                                        checked={\n                                            orders.length > 0 &&\n                                            selected.length === orders.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    订单名\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    商品\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"order_no\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"order_no\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        订单号\n                                        {orderBy[0] === \"order_no\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                    align={\"right\"}\n                                >\n                                    单价\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 80 }}\n                                    align={\"right\"}\n                                >\n                                    数量\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    支付方式\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {orders.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.Type === 0 && \"容量包\"}\n                                        {row.Type === 1 && \"用户组\"}\n                                        {row.Type === 2 && \"积分\"}\n                                    </TableCell>\n                                    <TableCell>{row.OrderNo}</TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Method === \"score\" && row.Price}\n                                        {row.Method !== \"score\" && (\n                                            <>\n                                                ￥{(row.Price / 100).toFixed(2)}\n                                            </>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Num}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"未支付\"}\n                                        {row.Status === 1 && \"已支付\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Method === \"score\" && \"积分\"}\n                                        {row.Method === \"alipay\" && \"支付宝\"}\n                                        {row.Method === \"wechat\" && \"微信\"}\n                                        {row.Method === \"payjs\" && \"PayJS\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Link,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function Aria2Helper(props) {\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {\"如何配置离线下载？\"}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Cloudreve 的离线下载支持主从分散模式。您可以配置多个\n                    Cloudreve\n                    从机节点，这些节点可以用来处理离线下载任务，分散主节点的压力。当然，您也可以配置只在主节点上处理离线下载任务，这是最简单的一种方式。\n                    <ul>\n                        <li>\n                            如果您只需要为主机启用离线下载功能，请{\" \"}\n                            <Link\n                                component={RouterLink}\n                                to={\"/admin/node/edit/1\"}\n                            >\n                                点击这里\n                            </Link>{\" \"}\n                            编辑主节点；\n                        </li>\n                        <li>\n                            如果您想要在从机节点上分散处理离线下载任务，请{\" \"}\n                            <Link component={RouterLink} to={\"/admin/node/add\"}>\n                                点击这里\n                            </Link>{\" \"}\n                            添加并配置新节点。\n                        </li>\n                    </ul>\n                    当你添加多个可用于离线下载的节点后，主节点会将离线下载请求轮流发送到这些节点处理。\n                    节点离线下载配置完成后，您可能还需要{\" \"}\n                    <Link component={RouterLink} to={\"/admin/group\"}>\n                        到这里\n                    </Link>{\" \"}\n                    编辑用户组，为对应用户组开启离线下载权限。\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { sizeToString } from \"../../../utils\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport Aria2Helper from \"./Aria2Helper\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Download() {\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [helperOpen, setHelperOpen] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <Aria2Helper\n                open={helperOpen}\n                onClose={() => setHelperOpen(false)}\n            />\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => loadList()}\n                    variant={\"outlined\"}\n                >\n                    刷新\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => setHelperOpen(true)}\n                    >\n                        <HelpIcon /> {\"  \"}如何配置离线下载\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    源地址\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    处理节点\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 150 }}\n                                    align={\"right\"}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"就绪\"}\n                                        {row.Status === 1 && \"下载中\"}\n                                        {row.Status === 2 && \"暂停中\"}\n                                        {row.Status === 3 && \"出错\"}\n                                        {row.Status === 4 && \"完成\"}\n                                        {row.Status === 5 && \"取消/停止\"}\n                                        {row.Status === 6 && \"未知\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.NodeID <= 1 && (\n                                            <Link\n                                                component={RouterLink}\n                                                to={\"/admin/node/edit/1\"}\n                                            >\n                                                主机\n                                            </Link>\n                                        )}\n                                        {row.NodeID > 1 && (\n                                            <Link\n                                                component={RouterLink}\n                                                to={\n                                                    \"/admin/node/edit/\" +\n                                                    row.NodeID\n                                                }\n                                            >\n                                                从机#{row.NodeID}\n                                            </Link>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function Task() {\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search,\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const deletePolicy = (id) => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    最后进度\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    错误信息\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(\n                                            row.Type,\n                                            row.Progress\n                                        )}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" + row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PathSelector from \"../../FileManager/PathSelector\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    userSelect: {\n        width: 400,\n        borderRadius: 0,\n    },\n}));\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value]);\n\n    return debouncedValue;\n}\n\nexport default function Import() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        policy: 1,\n        userInput: \"\",\n        src: \"\",\n        dst: \"\",\n        recursive: true,\n    });\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [policies, setPolicies] = useState({});\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectRemote, setSelectRemote] = useState(false);\n    const [selectLocal, setSelectLocal] = useState(false);\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleCheckChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.checked,\n        });\n    };\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (user === null) {\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.post(\"/admin/task/import\", {\n            uid: user.ID,\n            policy_id: parseInt(options.policy),\n            src: options.src,\n            dst: options.dst,\n            recursive: options.recursive,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/admin/file\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\n\n    useEffect(() => {\n        if (debouncedSearchTerm !== \"\") {\n            API.post(\"/admin/user/list\", {\n                page: 1,\n                page_size: 10000,\n                order_by: \"id asc\",\n                searches: {\n                    nick: debouncedSearchTerm,\n                    email: debouncedSearchTerm,\n                },\n            })\n                .then((response) => {\n                    setUsers(response.data.items);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }, [debouncedSearchTerm]);\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {},\n        })\n            .then((response) => {\n                const res = {};\n                response.data.items.forEach((v) => {\n                    res[v.ID] = v;\n                });\n                setPolicies(res);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const selectUser = (u) => {\n        setOptions({\n            ...options,\n            userInput: \"\",\n        });\n        setUser(u);\n    };\n\n    const setMoveTarget = (setter) => (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setter(path == \"//\" ? \"/\" : path);\n    };\n\n    const openPathSelector = (isSrcSelect) => {\n        if (isSrcSelect) {\n            if (\n                !policies[options.policy] ||\n                policies[options.policy].Type === \"local\" ||\n                policies[options.policy].Type === \"remote\"\n            ) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"选择的存储策略只支持手动输入路径\",\n                    \"warning\"\n                );\n                return;\n            }\n            setSelectRemote(true);\n        } else {\n            if (user === null) {\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\n                return;\n            }\n            setSelectLocal(true);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={selectRemote}\n                onClose={() => setSelectRemote(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\"/admin/file/folders/policy/\" + options.policy}\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            src: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectRemote(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={selectLocal}\n                onClose={() => setSelectLocal(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    api={\n                        \"/admin/file/folders/user/\" +\n                        (user === null ? 0 : user.ID)\n                    }\n                    selected={[]}\n                    onSelect={setMoveTarget((p) =>\n                        setOptions({\n                            ...options,\n                            dst: p,\n                        })\n                    )}\n                />\n\n                <DialogActions>\n                    <Button\n                        onClick={() => setSelectLocal(false)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        导入外部目录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">\n                                您可以将存储策略中已有文件、目录结构导入到\n                                Cloudreve\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\n                            </Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    存储策略\n                                </InputLabel>\n                                <Select\n                                    labelId=\"demo-mutiple-chip-label\"\n                                    id=\"demo-mutiple-chip\"\n                                    value={options.policy}\n                                    onChange={handleChange(\"policy\")}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                >\n                                    {Object.keys(policies).map((pid) => (\n                                        <MenuItem key={pid} value={pid}>\n                                            {policies[pid].Name}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要导入文件目前存储所在的存储策略\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目标用户\n                                </InputLabel>\n                                <Input\n                                    value={options.userInput}\n                                    onChange={(e) => {\n                                        handleChange(\"userInput\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    startAdornment={\n                                        user !== null && (\n                                            <InputAdornment position=\"start\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    onDelete={() => {\n                                                        setUser(null);\n                                                    }}\n                                                    label={user.Nick}\n                                                />\n                                            </InputAdornment>\n                                        )\n                                    }\n                                    disabled={user !== null}\n                                />\n                                <Popper\n                                    open={\n                                        options.userInput !== \"\" &&\n                                        users.length > 0\n                                    }\n                                    anchorEl={anchorEl}\n                                    placement={\"bottom\"}\n                                    transition\n                                >\n                                    {({ TransitionProps }) => (\n                                        <Fade\n                                            {...TransitionProps}\n                                            timeout={350}\n                                        >\n                                            <Paper\n                                                className={classes.userSelect}\n                                            >\n                                                {users.map((u) => (\n                                                    <MenuItem\n                                                        key={u.ID}\n                                                        onClick={() =>\n                                                            selectUser(u)\n                                                        }\n                                                    >\n                                                        {u.Nick}{\" \"}\n                                                        {\"<\" + u.Email + \">\"}\n                                                    </MenuItem>\n                                                ))}\n                                            </Paper>\n                                        </Fade>\n                                    )}\n                                </Popper>\n                                <FormHelperText id=\"component-helper-text\">\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    原始目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.src}\n                                    onChange={(e) => {\n                                        handleChange(\"src\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(true)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要导入的目录在存储端的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目的目录路径\n                                </InputLabel>\n\n                                <Input\n                                    value={options.dst}\n                                    onChange={(e) => {\n                                        handleChange(\"dst\")(e);\n                                        setAnchorEl(e.currentTarget);\n                                    }}\n                                    required\n                                    endAdornment={\n                                        <Button\n                                            onClick={() =>\n                                                openPathSelector(false)\n                                            }\n                                        >\n                                            选择\n                                        </Button>\n                                    }\n                                />\n\n                                <FormHelperText id=\"component-helper-text\">\n                                    要将目录导入到用户文件系统中的路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.recursive}\n                                            onChange={handleCheckChange(\n                                                \"recursive\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"递归导入子目录\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否将目录下的所有子目录递归导入\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        创建导入任务\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport { reportReasons } from \"../../../config\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport { Delete } from \"@material-ui/icons\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function ReportList() {\n    const classes = useStyles();\n    const [reports, setReports] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [users, setUsers] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [ids, setIds] = useState({});\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/report/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n        })\n            .then((response) => {\n                setUsers(response.data.users);\n                setReports(response.data.items);\n                setTotal(response.data.total);\n                setIds(response.data.ids);\n                setSelected([]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy]);\n\n    const deleteReport = (id) => {\n        setLoading(true);\n        API.post(\"/admin/report/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"标记成功\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteShare = (id) => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = () => {\n        setLoading(true);\n        API.post(\"/admin/report/delete\", { id: selected })\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"标记成功\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = reports.map((n) => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"标记为已处理\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <CheckCircleOutlineIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < reports.length\n                                        }\n                                        checked={\n                                            reports.length > 0 &&\n                                            selected.length === reports.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\",\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\",\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    举报对象\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    原因\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    补充描述\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    举报时间\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {reports.map((row) => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={(event) =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Share.ID === 0 && \"[已失效]\"}\n                                        {row.Share.ID > 0 && (\n                                            <Link\n                                                target={\"_blank\"}\n                                                color=\"inherit\"\n                                                href={\n                                                    \"/s/\" +\n                                                    ids[row.Share.ID] +\n                                                    (row.Share.Password === \"\"\n                                                        ? \"\"\n                                                        : \"?password=\" +\n                                                          row.Share.Password)\n                                                }\n                                            >\n                                                {row.Share.SourceName}\n                                            </Link>\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Share.ID > 0 &&\n                                            (row.Share.IsDir ? \"目录\" : \"文件\")}\n                                    </TableCell>\n                                    <TableCell>\n                                        {reportReasons[row.Reason]}\n                                    </TableCell>\n                                    <TableCell\n                                        style={{ wordBreak: \"break-all\" }}\n                                    >\n                                        {row.Description}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/admin/user/edit/\" +\n                                                row.Share.UserID\n                                            }\n                                        >\n                                            {users[row.Share.UserID]\n                                                ? users[row.Share.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {formatLocalTime(\n                                            row.CreatedAt,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"标记为已处理\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deleteReport(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <CheckCircleOutlineIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                        {row.Share.ID > 0 && (\n                                            <Tooltip title={\"删除分享\"}>\n                                                <IconButton\n                                                    disabled={loading}\n                                                    onClick={() =>\n                                                        deleteShare(\n                                                            row.Share.ID\n                                                        )\n                                                    }\n                                                    size={\"small\"}\n                                                >\n                                                    <Delete />\n                                                </IconButton>\n                                            </Tooltip>\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Input from \"@material-ui/core/Input\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n}));\n\nexport default function Captcha() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        captcha_type: \"normal\",\n        captcha_height: \"1\",\n        captcha_width: \"1\",\n        captcha_mode: \"3\",\n        captcha_CaptchaLen: \"\",\n        captcha_ReCaptchaKey: \"\",\n        captcha_ReCaptchaSecret: \"\",\n        captcha_TCaptcha_CaptchaAppId: \"\",\n        captcha_TCaptcha_AppSecretKey: \"\",\n        captcha_TCaptcha_SecretId: \"\",\n        captcha_TCaptcha_SecretKey: \"\",\n    });\n\n    const handleChange = (name) => (event) => {\n        setOptions({\n            ...options,\n            [name]: event.target.value,\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options),\n        })\n            .then((response) => {\n                setOptions(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        const option = [];\n        Object.keys(options).forEach((k) => {\n            option.push({\n                key: k,\n                value: options[k],\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        验证码\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    验证码类型\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_type}\n                                    onChange={handleChange(\"captcha_type\")}\n                                    required\n                                >\n                                    <MenuItem value={\"normal\"}>普通</MenuItem>\n                                    <MenuItem value={\"recaptcha\"}>\n                                        reCAPTCHA V2\n                                    </MenuItem>\n                                    <MenuItem value={\"tcaptcha\"}>\n                                        腾讯云验证码\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    验证码类型\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                {options.captcha_type === \"normal\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            普通验证码\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        宽度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_width}\n                                        onChange={handleChange(\"captcha_width\")}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        高度\n                                    </InputLabel>\n                                    <Input\n                                        type={\"number\"}\n                                        inputProps={{\n                                            min: 1,\n                                            step: 1,\n                                        }}\n                                        value={options.captcha_height}\n                                        onChange={handleChange(\n                                            \"captcha_height\"\n                                        )}\n                                        required\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        模式\n                                    </InputLabel>\n                                    <Select\n                                        value={options.captcha_mode}\n                                        onChange={handleChange(\"captcha_mode\")}\n                                        required\n                                    >\n                                        <MenuItem value={\"0\"}>数字</MenuItem>\n                                        <MenuItem value={\"1\"}>字母</MenuItem>\n                                        <MenuItem value={\"2\"}>算数</MenuItem>\n                                        <MenuItem value={\"3\"}>\n                                            数字+字母\n                                        </MenuItem>\n                                    </Select>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        验证码的形式\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"recaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            reCAPTCHA V2\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Site KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 网站密钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Secret\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_ReCaptchaSecret\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://www.google.com/recaptcha/admin/create\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                应用管理页面\n                                            </Link>{\" \"}\n                                            获取到的的 秘钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {options.captcha_type === \"tcaptcha\" && (\n                    <div className={classes.root}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            腾讯云验证码\n                        </Typography>\n                        <div className={classes.formContainer}>\n                            <div className={classes.form}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SecretId\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/capi\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                访问密钥页面\n                                            </Link>{\" \"}\n                                            获取到的的 SecretId\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            SecretKey\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_SecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_SecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/capi\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                访问密钥页面\n                                            </Link>{\" \"}\n                                            获取到的的 SecretKey\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APPID\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_CaptchaAppId\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_CaptchaAppId\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                图形验证页面\n                                            </Link>{\" \"}\n                                            获取到的的 APPID\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            App Secret Key\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={\n                                                options.captcha_TCaptcha_AppSecretKey\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_TCaptcha_AppSecretKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            <Link\n                                                href={\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\n                                                }\n                                                target={\"_blank\"}\n                                            >\n                                                图形验证页面\n                                            </Link>{\" \"}\n                                            获取到的的 App Secret Key\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport { useHistory } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    Delete,\n    Edit,\n    Cancel,\n    CheckCircle,\n    PlayArrow,\n    Pause,\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Chip from \"@material-ui/core/Chip\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    container: {\n        overflowX: \"auto\",\n    },\n    tableContainer: {\n        marginTop: 16,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    disabledCell: {\n        color: theme.palette.text.disabled,\n    },\n    verticalAlign: {\n        verticalAlign: \"middle\",\n        display: \"inline-block\",\n    },\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    {\n        id: \"status\",\n        label: \"当前状态\",\n        minWidth: 50,\n    },\n    {\n        id: \"features\",\n        label: \"已启用功能\",\n        minWidth: 170,\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n    },\n];\n\nconst features = [\n    {\n        field: \"Aria2Enabled\",\n        name: \"离线下载\",\n    },\n];\n\nexport default function Node() {\n    const classes = useStyles();\n    const [nodes, setNodes] = useState([]);\n    const [isActive, setIsActive] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.post(\"/admin/node/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then((response) => {\n                setNodes(response.data.items);\n                setTotal(response.data.total);\n                setIsActive(response.data.active);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const toggleNode = (id, desired) => {\n        setLoading(true);\n        API.patch(\"/admin/node/enable/\" + id + \"/\" + desired)\n            .then((response) => {\n                loadList();\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"节点已\" + (desired === 1 ? \"暂停使用\" : \"启用\"),\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteNode = (id) => {\n        setLoading(true);\n        API.delete(\"/admin/node/\" + id)\n            .then(() => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"节点已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const getStatusBadge = (status) => {\n        if (status === 1) {\n            return (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label=\"未启用\"\n                />\n            );\n        }\n    };\n\n    const getFeatureBadge = (node) =>\n        features.map((feature) => {\n            if (node[feature.field]) {\n                return (\n                    <Chip\n                        className={classes.disabledBadge}\n                        size=\"small\"\n                        color=\"primary\"\n                        label={feature.name}\n                    />\n                );\n            }\n        });\n\n    const getRealStatusBadge = (status) =>\n        status ? (\n            <Box color=\"success.main\" fontSize=\"small\">\n                <CheckCircle\n                    className={classes.verticalAlign}\n                    fontSize=\"small\"\n                />{\" \"}\n                <span className={classes.verticalAlign}>在线</span>\n            </Box>\n        ) : (\n            <Box color=\"error.main\" fontSize=\"small\">\n                <Cancel className={classes.verticalAlign} fontSize=\"small\" />{\" \"}\n                <span className={classes.verticalAlign}>离线</span>\n            </Box>\n        );\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/node/add\")}\n                    variant={\"contained\"}\n                >\n                    接入新节点\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{\n                                            minWidth: column.minWidthclassNames,\n                                        }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {nodes.map((row) => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell\n                                        className={classNames({\n                                            [classes.disabledCell]:\n                                                row.Status === 1,\n                                        })}\n                                    >\n                                        {row.Name}\n                                        {getStatusBadge(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getRealStatusBadge(isActive[row.ID])}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getFeatureBadge(row)}\n                                    </TableCell>\n\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip\n                                            title={\n                                                row.Status === 1\n                                                    ? \"启用节点\"\n                                                    : \"暂停使用节点\"\n                                            }\n                                        >\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    toggleNode(\n                                                        row.ID,\n                                                        1 - row.Status\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                {row.Status === 1 && (\n                                                    <PlayArrow />\n                                                )}\n                                                {row.Status !== 1 && <Pause />}\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/node/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    deleteNode(row.ID)\n                                                }\n                                                disabled={loading}\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={(e) => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Communication(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = () => {\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: props.node.Server,\n            secret: props.node.SlaveKey,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                您可以添加同样运行了 Cloudreve 的服务器作为从机端，\n                正常运行工作的从机端可以为主机分担某些异步任务（如离线下载）。\n                请参考下面向导部署并配置连接 Cloudreve 从机节点。\n                <Box fontWeight=\"fontWeightBold\">\n                    如果你已经在目标服务器上部署了从机存储策略，您可以跳过本页面的某些步骤，\n                    只将从机密钥、服务器地址在这里填写并保持与从机存储策略中一致即可。\n                </Box>\n                在后续版本中，从机存储策略的相关配置会合并到这里。\n            </Alert>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        将和主站相同版本的 Cloudreve\n                        程序拷贝至要作为从机的服务器上。\n                    </Typography>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>2</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                        可将您的密钥填入下方：\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                从机密钥\n                            </InputLabel>\n                            <Input\n                                required\n                                inputProps={{\n                                    minlength: 64,\n                                }}\n                                value={props.node.SlaveKey}\n                                onChange={props.handleTextChange(\"SlaveKey\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>3</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        修改从机配置文件。\n                        <br />\n                        在从机端 Cloudreve 的同级目录下新建\n                        <code>conf.ini</code>\n                        文件，填入从机配置，启动/重启从机端 Cloudreve。\n                        以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                    </Typography>\n                    <pre>\n                        [System]\n                        <br />\n                        Mode = slave\n                        <br />\n                        Listen = :5212\n                        <br />\n                        <br />\n                        [Slave]\n                        <br />\n                        Secret = {props.node.SlaveKey}\n                        <br />\n                    </pre>\n                    <Typography variant={\"body2\"}>\n                        从机端配置文件格式大致与主站端相同，区别在于：\n                        <ul>\n                            <li>\n                                <code>System</code>\n                                分区下的\n                                <code>mode</code>\n                                字段必须更改为<code>slave</code>\n                            </li>\n                            <li>\n                                必须指定<code>Slave</code>分区下的\n                                <code>Secret</code>\n                                字段，其值为第二步里填写或生成的密钥。\n                            </li>\n                        </ul>\n                        一个从机 Cloudreve 实例可以对接多个 Cloudreve\n                        主节点，只需在所有主节点中添加此从机节点并保持密钥一致即可。\n                    </Typography>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>4</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        填写从机地址。\n                        <br />\n                        如果主站启用了 HTTPS，从机也需要启用，并在下方填入 HTTPS\n                        协议的地址。\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                从机地址\n                            </InputLabel>\n                            <Input\n                                fullWidth\n                                required\n                                type={\"url\"}\n                                value={props.node.Server}\n                                onChange={props.handleTextChange(\"Server\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>5</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                    </Typography>\n                    <div className={classes.form}>\n                        <Button\n                            disabled={loading}\n                            variant={\"outlined\"}\n                            onClick={() => testSlave()}\n                            color={\"primary\"}\n                        >\n                            测试从机通信\n                        </Button>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                >\n                    下一步\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport API from \"../../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Aria2RPC(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testAria2 = () => {\n        setLoading(true);\n        API.post(\"/admin/node/aria2/test\", {\n            type: props.node.Type,\n            server: props.node.Server,\n            secret: props.node.SlaveKey,\n            rpc: props.node.Aria2OptionsSerialized.server,\n            token: props.node.Aria2OptionsSerialized.token,\n        })\n            .then((response) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"连接成功，Aria2 版本为：\" + response.data,\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const mode = props.node.Type === 0 ? \"从机\" : \"主机\";\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                <Typography variant=\"body2\">\n                    Cloudreve 的离线下载功能由{\" \"}\n                    <Link href={\"https://aria2.github.io/\"} target={\"_blank\"}>\n                        Aria2\n                    </Link>{\" \"}\n                    驱动。如需使用，请在目标节点服务器上以和运行 Cloudreve\n                    相同的用户身份启动 Aria2， 并在 Aria2 的配置文件中开启 RPC\n                    服务，\n                    <Box component=\"span\" fontWeight=\"fontWeightBold\">\n                        Aria2 需要和{mode} Cloudreve 进程共用相同的文件系统。\n                    </Box>{\" \"}\n                    更多信息及指引请参考文档的{\" \"}\n                    <Link\n                        href={\"https://docs.cloudreve.org/use/aria2\"}\n                        target={\"_blank\"}\n                    >\n                        离线下载\n                    </Link>{\" \"}\n                    章节。\n                </Typography>\n            </Alert>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        {props.node.Type === 0\n                            ? \"是否需要此节点接管离线下载任务？\"\n                            : \"是否需要主机接管离线下载任务？\"}\n                        <br />\n                        {props.node.Type === 0\n                            ? \"开启后，用户的离线下载请求可以被分流到此节点处理。\"\n                            : \"开启后，用户的离线下载请求可以被分流到主机处理。\"}\n                    </Typography>\n\n                    <div className={classes.form}>\n                        <FormControl required component=\"fieldset\">\n                            <RadioGroup\n                                required\n                                value={props.node.Aria2Enabled}\n                                onChange={props.handleTextChange(\n                                    \"Aria2Enabled\"\n                                )}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={\"true\"}\n                                    control={<Radio color={\"primary\"} />}\n                                    label=\"启用\"\n                                />\n                                <FormControlLabel\n                                    value={\"false\"}\n                                    control={<Radio color={\"primary\"} />}\n                                    label=\"关闭\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <Collapse in={props.node.Aria2Enabled === \"true\"}>\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>2</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            {props.node.Type === 0\n                                ? \" 在目标节点服务器上与节点 \"\n                                : \"在与 \"}\n                            Cloudreve 进程相同的文件系统环境下启动 Aria2\n                            进程。在启动 Aria2 时，需要在其配置文件中启用 RPC\n                            服务，并设定 RPC\n                            Secret，以便后续使用。以下为一个供参考的配置：\n                        </Typography>\n                        <pre>\n                            # 启用 RPC 服务\n                            <br />\n                            enable-rpc=true\n                            <br />\n                            # RPC 监听端口\n                            <br />\n                            rpc-listen-port=6800\n                            <br />\n                            # RPC 授权令牌，可自行设定\n                            <br />\n                            rpc-secret=\n                            {props.node.Aria2OptionsSerialized.token}\n                            <br />\n                        </pre>\n                        <Alert severity=\"info\" style={{ marginBottom: 10 }}>\n                            <Typography variant=\"body2\">\n                                推荐在日常启动流程中，先启动 Aria2，再启动节点\n                                Cloudreve，这样节点 Cloudreve 可以向 Aria2\n                                订阅事件通知，下载状态变更处理更及时。当然，如果没有这一流程，节点\n                                Cloudreve 也会通过轮询追踪任务状态。\n                            </Typography>\n                        </Alert>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>3</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            在下方填写{mode} Cloudreve 与 Aria2 通信的 RPC\n                            服务地址。一般可填写为\n                            <code>http://127.0.0.1:6800/</code>,其中端口号\n                            <code>6800</code>与上文配置文件中\n                            <code>rpc-listen-port</code>保持一致。\n                        </Typography>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 服务器地址\n                                </InputLabel>\n                                <Input\n                                    required\n                                    type={\"url\"}\n                                    value={\n                                        props.node.Aria2OptionsSerialized.server\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"server\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    包含端口的完整 RPC\n                                    服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用\n                                    Aria2 服务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>4</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            RPC 授权令牌，与 Aria2 配置文件中\n                            <code>rpc-secret</code>保持一致，未设置请留空。\n                        </Typography>\n                        <div className={classes.form}>\n                            <Input\n                                value={props.node.Aria2OptionsSerialized.token}\n                                onChange={props.handleOptionChange(\"token\")}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>5</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            在下方填写 Aria2 用作临时下载目录的 节点上的\n                            <strong>绝对路径</strong>，节点上的 Cloudreve\n                            进程需要此目录的读、写、执行权限。\n                        </Typography>\n                        <div className={classes.form}>\n                            <Input\n                                value={\n                                    props.node.Aria2OptionsSerialized.temp_path\n                                }\n                                onChange={props.handleOptionChange(\"temp_path\")}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>5</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            在下方按需要填写一些 Aria2 额外参数信息。\n                        </Typography>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态刷新间隔 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .interval\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"interval\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 调用超时 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 1,\n                                    }}\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .timeout\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"timeout\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    调用 RPC 服务时最长等待时间\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    全局任务参数\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={\n                                        props.node.Aria2OptionsSerialized\n                                            .options\n                                    }\n                                    onChange={props.handleOptionChange(\n                                        \"options\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    创建下载任务时携带的额外设置参数，以 JSON\n                                    编码后的格式书写，您可也可以将这些设置写在\n                                    Aria2 配置文件里，可用参数请查阅官方文档\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.subStepContainer}>\n                    <div className={classes.stepNumberContainer}>\n                        <div className={classes.stepNumber}>6</div>\n                    </div>\n                    <div className={classes.subStepContent}>\n                        <Typography variant={\"body2\"}>\n                            完成以上步骤后，你可以点击下方的测试按钮测试\n                            {mode}\n                            Cloudreve 向 Aria2 通信是否正常。\n                            {props.node.Type === 0 &&\n                                \"在进行测试前请先确保您已进行并通过上一页面中的“从机通信测试”。\"}\n                        </Typography>\n                        <div className={classes.form}>\n                            <Button\n                                disabled={loading}\n                                variant={\"outlined\"}\n                                onClick={() => testAria2()}\n                                color={\"primary\"}\n                            >\n                                测试 Aria2 通信\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Collapse>\n\n            <div className={classes.stepFooter}>\n                {props.activeStep !== 0 && (\n                    <Button\n                        color={\"default\"}\n                        className={classes.button}\n                        onClick={props.onBack}\n                    >\n                        上一步\n                    </Button>\n                )}\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                    onClick={props.onSubmit}\n                >\n                    下一步\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Metainfo(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    return (\n        <form\n            className={classes.stepContent}\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.onSubmit(e);\n            }}\n        >\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>1</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>为此节点命名：</Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <Input\n                                required\n                                value={props.node.Name}\n                                onChange={props.handleTextChange(\"Name\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.subStepContainer}>\n                <div className={classes.stepNumberContainer}>\n                    <div className={classes.stepNumber}>2</div>\n                </div>\n                <div className={classes.subStepContent}>\n                    <Typography variant={\"body2\"}>\n                        为此节点指定负载均衡权重，数值为整数。某些负载均衡策略会根据此数值加权选择节点\n                    </Typography>\n                    <div className={classes.form}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"component-helper\">\n                                负载均衡权重\n                            </InputLabel>\n                            <Input\n                                type={\"number\"}\n                                required\n                                inputProps={{\n                                    step: 1,\n                                    min: 0,\n                                }}\n                                value={props.node.Rank}\n                                onChange={props.handleTextChange(\"Rank\")}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n            </div>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    disabled={loading || props.loading}\n                    type={\"submit\"}\n                    variant={\"contained\"}\n                    color={\"primary\"}\n                >\n                    下一步\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\",\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\",\n        },\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\",\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter: {\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\": {\n        code: {\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        pre: {\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color: \"#fff\",\n            fontFamily:\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n        },\n    },\n}));\n\nexport default function Completed(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <form className={classes.stepContent}>\n            <Typography>节点已保存！</Typography>\n            <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                如果您添加了新节点，还需要在节点列表手动启动节点才能正常使用。\n            </Typography>\n\n            <div className={classes.stepFooter}>\n                <Button\n                    color={\"primary\"}\n                    className={classes.button}\n                    onClick={() => history.push(\"/admin/node\")}\n                >\n                    返回节点列表\n                </Button>\n            </div>\n        </form>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../../actions\";\nimport { randomStr } from \"../../../../utils\";\nimport Communication from \"./Communication\";\nimport Aria2RPC from \"./Aria2RPC\";\nimport API from \"../../../../middleware/Api\";\nimport Metainfo from \"./Metainfo\";\nimport Completed from \"./Completed\";\n\nconst steps = [\n    {\n        slaveOnly: true,\n        title: \"通信配置\",\n        optional: false,\n        component: function show(p) {\n            return <Communication {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"离线下载\",\n        optional: false,\n        component: function show(p) {\n            return <Aria2RPC {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"杂项信息\",\n        optional: false,\n        component: function show(p) {\n            return <Metainfo {...p} />;\n        },\n    },\n    {\n        slaveOnly: false,\n        title: \"完成\",\n        optional: false,\n        component: function show(p) {\n            return <Completed {...p} />;\n        },\n    },\n];\n\nexport default function NodeGuide(props) {\n    const [activeStep, setActiveStep] = useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [loading, setLoading] = useState(false);\n    const [node, setNode] = useState(\n        props.node\n            ? props.node\n            : {\n                  Status: 1,\n                  Type: 0,\n                  Aria2Enabled: \"false\",\n                  Server: \"https://example.com:5212\",\n                  SlaveKey: randomStr(64),\n                  MasterKey: randomStr(64),\n                  Rank: \"0\",\n                  Aria2OptionsSerialized: {\n                      token: randomStr(32),\n                      options: \"{}\",\n                      interval: \"10\",\n                      timeout: \"10\",\n                  },\n              }\n    );\n\n    const usedSteps = useMemo(() => {\n        return steps.filter((step) => !(step.slaveOnly && node.Type === 1));\n    }, [node.Type]);\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleTextChange = (name) => (event) => {\n        setNode({\n            ...node,\n            [name]: event.target.value,\n        });\n    };\n\n    const handleOptionChange = (name) => (event) => {\n        setNode({\n            ...node,\n            Aria2OptionsSerialized: {\n                ...node.Aria2OptionsSerialized,\n                [name]: event.target.value,\n            },\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const nextStep = () => {\n        if (props.node || activeStep + 1 === steps.length - 1) {\n            setLoading(true);\n\n            const nodeCopy = { ...node };\n            nodeCopy.Aria2OptionsSerialized = {\n                ...node.Aria2OptionsSerialized,\n            };\n            nodeCopy.Rank = parseInt(nodeCopy.Rank);\n            nodeCopy.Aria2OptionsSerialized.interval = parseInt(\n                nodeCopy.Aria2OptionsSerialized.interval\n            );\n            nodeCopy.Aria2OptionsSerialized.timeout = parseInt(\n                nodeCopy.Aria2OptionsSerialized.timeout\n            );\n            nodeCopy.Aria2Enabled = nodeCopy.Aria2Enabled === \"true\";\n            API.post(\"/admin/node\", {\n                node: nodeCopy,\n            })\n                .then(() => {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"节点已\" + (props.node ? \"保存\" : \"添加\"),\n                        \"success\"\n                    );\n                    setActiveStep(activeStep + 1);\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                })\n                .then(() => {\n                    setLoading(false);\n                });\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.node ? \"修改\" : \"添加\"} 节点\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {usedSteps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    if (!(label.slaveOnly && node.Type === 1)) {\n                        return (\n                            <Step key={label.title} {...stepProps}>\n                                <StepLabel {...labelProps}>\n                                    {label.title}\n                                </StepLabel>\n                            </Step>\n                        );\n                    }\n                })}\n            </Stepper>\n\n            {usedSteps[activeStep].component({\n                onSubmit: (e) => nextStep(),\n                node: node,\n                loading: loading,\n                onBack: (e) => setActiveStep(activeStep - 1),\n                handleTextChange: handleTextChange,\n                activeStep: activeStep,\n                handleOptionChange: handleOptionChange,\n            })}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NodeGuide from \"./Guide/NodeGuide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function AddNode() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                <NodeGuide />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NodeGuide from \"./Guide/NodeGuide\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport API from \"../../../middleware/Api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100,\n        },\n        marginBottom: 40,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function EditNode() {\n    const classes = useStyles();\n    const { id } = useParams();\n    const [node, setNode] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.get(\"/admin/node/\" + id)\n            .then((response) => {\n                response.data.Rank = response.data.Rank.toString();\n                response.data.Aria2OptionsSerialized.interval = response.data.Aria2OptionsSerialized.interval.toString();\n                response.data.Aria2OptionsSerialized.timeout = response.data.Aria2OptionsSerialized.timeout.toString();\n                response.data.Aria2Enabled = response.data.Aria2Enabled\n                    ? \"true\"\n                    : \"false\";\n                setNode(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, [id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {node && <NodeGuide node={node} />}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport { useHistory } from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport createTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from \"@material-ui/core/locale\";\nimport Index from \"./component/Admin/Index\";\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\nimport Access from \"./component/Admin/Setting/Access\";\nimport Mail from \"./component/Admin/Setting/Mail\";\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\nimport VAS from \"./component/Admin/Setting/VAS\";\nimport Theme from \"./component/Admin/Setting/Theme\";\nimport ImageSetting from \"./component/Admin/Setting/Image\";\nimport Policy from \"./component/Admin/Policy/Policy\";\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\nimport Group from \"./component/Admin/Group/Group\";\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\nimport User from \"./component/Admin/User/User\";\nimport UserForm from \"./component/Admin/User/UserForm\";\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\nimport File from \"./component/Admin/File/File\";\nimport Share from \"./component/Admin/Share/Share\";\nimport Order from \"./component/Admin/Order/Order\";\nimport Download from \"./component/Admin/Task/Download\";\nimport Task from \"./component/Admin/Task/Task\";\nimport Import from \"./component/Admin/File/Import\";\nimport ReportList from \"./component/Admin/Report/ReportList\";\nimport Captcha from \"./component/Admin/Setting/Captcha\";\nimport Node from \"./component/Admin/Node/Node\";\nimport AddNode from \"./component/Admin/Node/AddNode\";\nimport EditNode from \"./component/Admin/Node/EditNode\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst theme = createTheme(\n    {\n        palette: {\n            background: {},\n        },\n    },\n    zhCN\n);\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const user = Auth.GetUser();\n        if (user && user.group) {\n            if (user.group.id !== 1) {\n                history.push(\"/home\");\n                return;\n            }\n            setShow(true);\n            return;\n        }\n        history.push(\"/login\");\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show && (\n                        <Dashboard\n                            content={(path) => (\n                                <Switch>\n                                    <Route path={`${path}/home`} exact>\n                                        <Index />\n                                    </Route>\n\n                                    <Route path={`${path}/basic`}>\n                                        <SiteInformation />\n                                    </Route>\n\n                                    <Route path={`${path}/access`}>\n                                        <Access />\n                                    </Route>\n\n                                    <Route path={`${path}/mail`}>\n                                        <Mail />\n                                    </Route>\n\n                                    <Route path={`${path}/upload`}>\n                                        <UploadDownload />\n                                    </Route>\n\n                                    <Route path={`${path}/vas`}>\n                                        <VAS />\n                                    </Route>\n\n                                    <Route path={`${path}/theme`}>\n                                        <Theme />\n                                    </Route>\n\n                                    <Route path={`${path}/image`}>\n                                        <ImageSetting />\n                                    </Route>\n\n                                    <Route path={`${path}/captcha`}>\n                                        <Captcha />\n                                    </Route>\n\n                                    <Route path={`${path}/policy`} exact>\n                                        <Policy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/add/:type`}\n                                        exact\n                                    >\n                                        <AddPolicy />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/policy/edit/:mode/:id`}\n                                        exact\n                                    >\n                                        <EditPolicyPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/group`} exact>\n                                        <Group />\n                                    </Route>\n\n                                    <Route path={`${path}/group/add`} exact>\n                                        <GroupForm />\n                                    </Route>\n\n                                    <Route\n                                        path={`${path}/group/edit/:id`}\n                                        exact\n                                    >\n                                        <EditGroupPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/user`} exact>\n                                        <User />\n                                    </Route>\n\n                                    <Route path={`${path}/user/add`} exact>\n                                        <UserForm />\n                                    </Route>\n\n                                    <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload />\n                                    </Route>\n\n                                    <Route path={`${path}/file`} exact>\n                                        <File />\n                                    </Route>\n\n                                    <Route path={`${path}/file/import`} exact>\n                                        <Import />\n                                    </Route>\n\n                                    <Route path={`${path}/share`} exact>\n                                        <Share />\n                                    </Route>\n\n                                    <Route path={`${path}/order`} exact>\n                                        <Order />\n                                    </Route>\n\n                                    <Route path={`${path}/download`} exact>\n                                        <Download />\n                                    </Route>\n\n                                    <Route path={`${path}/task`} exact>\n                                        <Task />\n                                    </Route>\n\n                                    <Route path={`${path}/report`} exact>\n                                        <ReportList />\n                                    </Route>\n\n                                    <Route path={`${path}/node`} exact>\n                                        <Node />\n                                    </Route>\n\n                                    <Route path={`${path}/node/add`} exact>\n                                        <AddNode />\n                                    </Route>\n\n                                    <Route path={`${path}/node/edit/:id`} exact>\n                                        <EditNode />\n                                    </Route>\n                                </Switch>\n                            )}\n                        />\n                    )}\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}
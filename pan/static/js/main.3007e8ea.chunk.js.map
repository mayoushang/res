{"version":3,"sources":["middleware/Api.js","redux/explorer/action.ts","utils/page.js","component/Dial/AutoHidden.js","redux/explorer/reducer.ts","middleware/Auth.ts","component/Placeholder/TextLoading.js","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Modals/Report.js","utils/index.js","component/Modals/PurchaseShare.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/Modals/Relocate.js","component/FileManager/Modals.js","component/Viewer/Text.js","component/Viewer/Code.js","actions/explorer.js","actions/index.js","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/PolicySwitcher.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","config.js","component/FileManager/ImgPreview.js","utils/datetime.js","loader/utils.js","loader/index.js","component/Upload/FileList.js","component/Dial/Create.js","component/Upload/Uploader.js","component/FileManager/TypeIcon.js","component/FileManager/PathSelector.js","serviceWorker.js","middleware/AuthRoute.js","component/Placeholder/PageLoading.js","component/Share/NotFound.js","middleware/Init.js","component/Common/ICPFooter.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","redux/explorer/index.ts","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/ContextMenu.js","component/FileManager/Explorer.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/FileManager.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/VAS/Quota.js","component/VAS/PackSelect.js","component/VAS/BuyQuota.js","component/Modals/CreateWebDAVAccount.js","component/Modals/CreateWebDAVMount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Ifm.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/QQ.js","component/Login/Register.js","component/Login/Apps.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/Modals/SiteNotice.js","App.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","redux/viewUpdate/action.ts"],"names":["baseURL","getBaseURL","instance","axios","create","withCredentials","crossDomain","AppError","message","code","error","this","stack","Error","prototype","Object","constructor","interceptors","response","use","rawData","data","undefined","Auth","signout","window","location","href","msg","Promise","reject","setFileList","list","type","setDirList","setSortMethod","method","setSideBar","open","sortMethodFuncs","sizePos","a","b","size","sizeRes","namePos","name","localeCompare","navigator","languages","language","numeric","ignorePunctuation","nameRev","timePos","Date","parse","date","timeRev","updateFileList","dispatch","getState","sortMethod","viewUpdate","dirList","filter","x","fileList","sortFunc","sort","changeSortMethod","explorer","toggleObjectInfoSidebar","closeContextMenu","statusHelper","isHomePage","path","isSharePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","AutoHidden","children","enable","useState","hidden","setHidden","prev","scrollY","lastUpdate","useEffect","addEventListener","e","currentTarget","handleNavigation","in","initState","dndSignal","dndTarget","dndSource","selected","selectProps","isMultiple","withFolder","withFile","lastSelect","file","id","index","shiftSelectedIds","imgPreview","first","other","keywords","fileSave","sideBarOpen","checkSelectedProps","length","forEach","value","state","action","assign","target","source","addedSelected","targets","newSelected","fileIds","filteredSelected","includes","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","SetPreference","key","preference","GetPreference","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","icon","color","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","useDispatch","ToggleThemeMode","useCallback","toggleDaylightMode","isDayLight","isDark","title","placement","classNames","onClick","sideButton","marginRight","sortOptions","SubActions","isSmall","share","inherit","viewMethod","explorerViewMethod","OpenLoadingDialog","changeViewMethod","ChangeSortMethod","OpenResaveDialog","openResaveDialog","SetShareUserPopover","setShareUserPopover","anchorSort","setAnchorSort","selectedIndex","setSelectedIndex","openReport","setOpenReport","toggleViewMethod","newMethod","toggleSnackbars","vertical","horizontal","toggleSnackbar","opensendgift","fontSize","anchorEl","Boolean","onClose","map","option","event","0","1","2","3","4","5","handleMenuItemClick","creator","nick","style","height","src","widthAnimation","shareUrl","minWidth","wrapper","margin","spacing","buttonProgress","secondary","light","top","left","flexCenter","alignItems","noFlex","display","scoreCalc","marginTop","Report","reason","setReason","des","setDes","loading","setLoading","ToggleSnackbar","setTimeout","aria-labelledby","maxWidth","fullWidth","component","aria-label","onChange","reportReasons","v","k","toString","control","label","multiline","variant","rows","API","post","parseInt","then","catch","disabled","sizeToString","bytes","i","Math","floor","log","pow","toFixed","fixUrlHash","setCookie","days","setTime","getTime","document","cookie","setGetParameter","paramName","paramValue","url","indexOf","prefix","substring","suffix","history","pushState","allowSharePreview","shareInfo","allowPreview","userInfo","uid","checkGetParameters","field","changeThemeColor","querySelector","setAttribute","bufferDecode","Uint8Array","from","atob","c","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","substr","split","slice","join","filePath","hex2bin","hex","padStart","pathJoin","parts","sep","separator","part","RegExp","basename","pathList","pop","filename","randomStr","result","characters","charactersLength","charAt","random","getNumber","base","conditions","isMac","platform","toUpperCase","vhCheck","vh","innerHeight","documentElement","setProperty","PurchaseShareDialog","callback","score","autoFocus","fab","right","bottom","zIndex","badge","fabProgress","green","buttonSuccess","SaveButton","buttonClassname","clsx","status","avatar","blue","loadingContainer","marginLeft","LoadingDialog","modals","text","loadingText","Dialog","DialogContent","DialogContentText","CircularProgress","contentFix","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","items","push","src_dir","dst","modalsLoading","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","scoreEnabled","score_enabled","scoreRate","share_score_rate","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","Divider","List","aria-controls","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","edge","onMouseDown","on","onIcon","Visibility","offIcon","VisibilityOff","labelWidth","Select","labelId","MenuItem","Typography","inputProps","min","ceil","TextField","onFocus","select","readonly","submitFormBody","is_dir","DecompressDialog","CompressDialog","fileName","setFileName","input","RelocateDialog","selectedPolicy","setSelectedPolicy","policies","setPolicies","get","options","current","dst_policy_id","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","downloaded","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","getSource","pathHelper","pathname","scoreHandler","archiveDownload","Download","dragMove","group","shareFree","reqURL","downloadPath","encodeURIComponent","put","postBody","refreshStorage","submitRemove","delete","submitResave","shareKey","submitMove","patch","DragSelectedPath","closeAllModals","doMove","openLoadingDialog","submitRename","findIndex","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","setMoveTarget","remoteDownloadNext","PurchaseShare","onSubmit","createNewFolder","createNewFile","copy","move","resave","remove","music","controls","remoteDownload","placeholder","torrentDownload","decompress","compress","relocate","Component","Modals","connect","withRouter","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","math","useRouteMatch","$vm","createRef","useLocation","query","URLSearchParams","search","useParams","SetSubTitle","changeSubTitle","params","requestURL","responseType","textdata","Buffer","toBase64","resolve","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","$img2Url","console","elevation","ref","onSave","toolbar","h1","h2","h3","h4","img","link","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","extension","codePreviewSuffix","Array","Set","keys","fallback","readOnly","extraEditorClassName","removeSelectedTargets","addSelectedTargets","setSelectedTarget","openPreview","router","isShare","changeContextMenu","user","shareDownload","previewPath","isPreviewable","showImgPreivew","openMusicDialog","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","begin","end","max","newShiftSelected","setLastSelect","setShiftSelectedIds","setNavigator","navigatorLoading","navigateTo","navigateUp","pathSplit","newPath","drawerToggleAction","dragAndDrop","menuType","setNavigatorLoadingStatus","setNavigatorError","openCreateFolderDialog","openCreateFileDialog","setUserPopover","anchor","openRenameDialog","openMoveDialog","openRemoveDialog","openShareDialog","applyThemes","setSessionStatus","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openRelocateDialog","openGetSourceDialog","openCopyDialog","enableLoadUploader","searchMyFile","saveFile","setSiteConfig","config","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","openURL","sigOut","reload","Popover","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","UserAvatarPopover","userPopoverAnchorEl","uploadFromFile","policySelected","PolicySwitcher","setAnchorEl","switchTo","ListItemAvatar","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","componentDidMount","handleDrawerToggle","mobileOpen","loadUploader","openDownload","signOut","finally","UploaderRef","unlisten","listen","getCookie","arrcookie","arr","unescape","drawer","upDrawer","minStickDrawer","iconFix","webdav","_MEIQIA","iOS","process","browser","test","userAgent","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","subTitle","grow","sectionForFile","allowArchiveDownload","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","withTheme","flexShrink","drawerDesktop","mixins","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","minHeight","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","imgPreviewSuffix","msDocPreviewSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","xml","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","policyTypeMap","local","remote","qiniu","upyun","oss","cos","onedrive","s3","toLowerCase","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","ImagPreviewComponent","photoIndex","isOpen","firstOne","newImg","intro","fileType","images","visible","onIndexChange","n","ImgPreivew","dayjs","extend","utc","timezone","preferTimeZone","timeZone","refreshTimeZone","formatLocalTime","time","format","tz","validateTimeZone","isFunction","val","noop","newScript","scriptElem","createElement","hasOwnProperty","call","body","appendChild","keyIterator","cols","next","parallel","tasks","each","hasError","successed","ret","task","err","args","series","thunk","nextKey","nextThunk","isArray","iterator","loadedScript","pendingScripts","failedScript","addCache","entry","removeFailedScript","script","node","parentNode","removeChild","uploaderLoader","WrappedComponent","ScriptLoader","context","isScriptLoaded","isScriptLoadSucceed","_isMounted","scripts","onComplete","loadNewScript","taskComplete","callbacks","startLoadingScripts","policyType","onScriptLoaded","refs","wrappedInstance","defaultProps","hoistStatics","FileList","files","openFileList","cancelUpload","deQueue","reQueue","addNewFile","getElementsByClassName","click","getProgressBackground","lighten","darken","filesNow","fileID","f","splice","errMsg","ignoreMsg","Slide","direction","inRef","bind","enQueue","setComplete","setError","fullScreen","isWidthDown","TransitionComponent","Transition","AppBar","Toolbar","flex","dialogContent","minHight","item","progressContainer","progress","progressContent","TypeIcon","isUpload","listAction","plupload","formatSize","speed","loaded","errorStatus","successStatus","progressBar","wordBreak","withWidth","UploadButton","setOpen","queued","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","openUpload","uploadButton","contains","uploadClicked","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","tooltipOpen","UploaderComponent","uploader","addFile","fileAdd","currntPath","enqueFiles","isDsStore","removeFile","relativePath","pathCache","Qiniu","runtimes","browse_button","drop_element","max_file_size","policy","maxSize","dragdrop","chunk_size","getChunkSize","saveType","filters","mime_types","allowedType","extensions","multi_selection","uptoken_url","uptoken","domain","max_retries","get_new_uptoken","auto_start","log_level","init","FilesAdded","BeforeUpload","QueueChanged","UploadProgress","UploadComplete","Fresh","FileUploaded","errTip","FilesRemoved","onError","setRef","Uploader","forwardRef","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","fileSuffix","getColor","getColorValue","iconClassName","PathSelectorCompoment","selectedTarget","toBeLoad","enterFolder","back","paths","api","objects","unshift","handleSelect","selector","primaryTypographyProps","buttonIcon","iconWhite","maxHeight","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","match","AuthRoute","rest","render","to","PageLoading","emptyContainer","emptyInfoBig","ads","Notice","rel","initUserConfig","themes","enableUploaderLoad","uploadConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","icp","ICPFooter","siteICPId","show","setShow","pageHelper","Link","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaContainer","required","Input","autoComplete","captchaPlaceholder","alt","ReCAPTCHA","handleExpired","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","reset","onExpired","onErrored","token","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","elem","childProps","displayName","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","res","ticket","randstr","isValidate","submit","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","useRef","normal","captchaParamsRef","CaptchaRender","validate","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","flexDirection","form","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","QQLogin","authn","ApplyThemes","SetSessionStatus","GetQueryString","reg","r","afterLogin","backurl","decodeURIComponent","removeItem","_QQLogin","Paper","login","userName","Password","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Fingerprint","VpnKey","actions","reducers","expandMore","active","textTransform","PathButton","inputRef","useDrop","accept","drop","more","collect","monitor","isOver","canDrop","isActive","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","element","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","navigateToPath","apiURL","parent","pathTemp","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","drawerDesktopOpen","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","Menu","disableAutoFocusItem","Archive","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","SmallIconCompoment","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","isFolder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","divider","boxSizing","fontWeight","FileIconCompoment","showPicIcon","pic","hide","picPreview","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","Folder","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","renderItem","TableRowCompoment","tableIcon","TableRow","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","userSelect","FolderDropWarpper","isListView","fixFlex","ObjectIcon","navigatorPath","ContextMenu","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","selectFileAction","handleIconClick","stopPropagation","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","clickUpload","renderMenuItems","visibleCount","condition","dense","allowRemoteDownload","menuOpen","anchorReference","anchorPosition","Unarchive","InfoOutlined","propover","contextType","contextOpen","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","away","showView","listView","Table","table","TableHead","TableSortLabel","changeSort","visuallyHidden","TableBody","normalView","flexFix","data-clickAway","typeHeader","Grid","xs","md","sm","lg","view","rootTable","rootShare","navigatorError","errorBox","errorMsg","navigatorErrorMsg","emptyIcon","emptyInfoSmall","Explorer","hint","upButton","clickAway","clip","ListLoading","drawerContainer","placeContent","fileIcon","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","details","setDetails","propsItem","d","t","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","datetime","query_date","locale","Hidden","Clear","Drawer","gutterBottom","FileManager","DndProvider","backend","HTML5Backend","DragLayer","VideoViewer","Google","client","slot","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","Card","CardHeader","subheader","create_date","Pagination","count","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","setFiles","dividers","FormGroup","row","FormControlLabel","filesCopy","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","actionButton","infoTitle","infoValue","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","newExpanded","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","downloading","finishedList","continue","loadDownloading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","cursor","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","rewards","box","boxContent","fileSize","boxFooter","actionLeft","openResave","downloadButton","SharedFile","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","QuotaCompoment","basic","pack","r1","r2","r3","packs","usedR","baseR","packR","proBar","r1_block","note_block","r2_block","r3_block","align","activate_date","expiration","expiration_date","Quota","lineHeight","float","PackSelect","boxHead","packName","price","priceWithScore","boxBottom","BuyQuotaCompoment","IntervalId","confirmRedeem","redeemCode","dialog","doRedeem","redeemInfo","buyPack","packType","selectedPack","packPayMethod","groups","selectedGroup","num","scoreNum","times","payment","qr_code","setInterval","querryLoop","clearInterval","handleChangeIndex","handleTexyChange","selectPack","selectGroup","selectPackPayMethod","scorePrice","alipay","payjs","wechat","score_price","methodSelect","FormLabel","RadioGroup","Radio","textField","step","Tabs","Tab","AccountBalanceWallet","payMethod","priceShow","tier","highlight","titleTypographyProps","subheaderTypographyProps","cardHeader","cardPricing","line","cardActions","redeemContainer","codeContainer","BuyQuota","grey","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","CreateWebDAVMount","Storage","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","mount","setMount","accounts","setAccounts","setFolders","account","ID","CreatedAt","Name","Root","mountInfo","indicatorColor","textColor","newValue","Alert","severity","origin","TableContainer","clipboard","writeText","accountCopy","deleteAccount","policy_name","folderCopy","deleteMount","footer","Tasks","setTasks","nowrap","getError","Ifm","iFrameHeight","iframe","clientHeight","frameBorder","scrolling","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","credential","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","changeView","loadSetting","doChangeGroup","useGravatar","changeNick","bindQQ","uploadAvatar","formData","FormData","append","fileInput","headers","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","infoTextWithIcon","rightIconWithText","infoText","ConfirmationNumber","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","userGravatar","paddingText","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","QQCallback","setMsg","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Apps","exp","Days","toGMTString","JumpUrl","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","overflowWrap","SiteNotice","site_notice","newNotice","dangerouslySetInnerHTML","__html","PDFViewer","App","themeConfig","prefersDarkMode","useMediaQuery","useMemo","prefer","createMuiTheme","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","doNavigate","defaultStatus","rawStore","configCache","InitSiteConfig","black","contrastText","bgSelected","ErrorBoundary","errorInfo","componentStack","Admin","hash","fetch","contentType","ready","unregister","checkValidServiceWorker","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","getElementById","setSubtitle"],"mappings":"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","file":"static/js/main.3007e8ea.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport Auth from \"./Auth\";\r\n\r\nexport const baseURL = \"/api/v3\";\r\n\r\nexport const getBaseURL = () => {\r\n    return baseURL;\r\n};\r\n\r\nconst instance = axios.create({\r\n    baseURL: getBaseURL(),\r\n    withCredentials: true,\r\n    crossDomain: true,\r\n});\r\n\r\nfunction AppError(message, code, error) {\r\n    this.code = code;\r\n    this.message = message || \"未知错误\";\r\n    this.message += error ? \" \" + error : \"\";\r\n    this.stack = new Error().stack;\r\n}\r\nAppError.prototype = Object.create(Error.prototype);\r\nAppError.prototype.constructor = AppError;\r\n\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        response.rawData = response.data;\r\n        response.data = response.data.data;\r\n        if (\r\n            response.rawData.code !== undefined &&\r\n            response.rawData.code !== 0 &&\r\n            response.rawData.code !== 203\r\n        ) {\r\n            // 登录过期\r\n            if (response.rawData.code === 401) {\r\n                Auth.signout();\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            // 非管理员\r\n            if (response.rawData.code === 40008) {\r\n                window.location.href = \"/home\";\r\n            }\r\n            throw new AppError(\r\n                response.rawData.msg,\r\n                response.rawData.code,\r\n                response.rawData.error\r\n            );\r\n        }\r\n        return response;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\r\nimport { closeContextMenu } from \"../viewUpdate/action\";\r\n\r\nexport interface ActionSetFileList extends AnyAction {\r\n    type: \"SET_FILE_LIST\";\r\n    list: CloudreveFile[];\r\n}\r\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\r\n    return {\r\n        type: \"SET_FILE_LIST\",\r\n        list,\r\n    };\r\n};\r\n\r\nexport interface ActionSetDirList extends AnyAction {\r\n    type: \"SET_DIR_LIST\";\r\n    list: CloudreveFile[];\r\n}\r\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\r\n    return {\r\n        type: \"SET_DIR_LIST\",\r\n        list,\r\n    };\r\n};\r\n\r\nexport interface ActionSetSortMethod extends AnyAction {\r\n    type: \"SET_SORT_METHOD\";\r\n    method: SortMethod;\r\n}\r\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\r\n    return {\r\n        type: \"SET_SORT_METHOD\",\r\n        method,\r\n    };\r\n};\r\n\r\nexport const setSideBar = (open: boolean) => {\r\n    return {\r\n        type: \"SET_SIDE_BAR\",\r\n        open,\r\n    };\r\n};\r\n\r\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\r\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\r\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return a.size - b.size;\r\n    },\r\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return b.size - a.size;\r\n    },\r\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return a.name.localeCompare(\r\n            b.name,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n        );\r\n    },\r\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return b.name.localeCompare(\r\n            a.name,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n        );\r\n    },\r\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(a.date) - Date.parse(b.date);\r\n    },\r\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(b.date) - Date.parse(a.date);\r\n    },\r\n};\r\n\r\nexport const updateFileList = (\r\n    list: CloudreveFile[]\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        // TODO: define state type\r\n        const { sortMethod } = state.viewUpdate;\r\n        const dirList = list.filter((x) => {\r\n            return x.type === \"dir\";\r\n        });\r\n        const fileList = list.filter((x) => {\r\n            return x.type === \"file\";\r\n        });\r\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\r\n        dispatch(setDirList(dirList.sort(sortFunc)));\r\n        dispatch(setFileList(fileList.sort(sortFunc)));\r\n    };\r\n};\r\n\r\nexport const changeSortMethod = (\r\n    method: SortMethod\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        const { fileList, dirList } = state.explorer;\r\n        const sortFunc = sortMethodFuncs[method];\r\n        dispatch(setSortMethod(method));\r\n        dispatch(setDirList(dirList.sort(sortFunc)));\r\n        dispatch(setFileList(fileList.sort(sortFunc)));\r\n    };\r\n};\r\n\r\nexport const toggleObjectInfoSidebar = (\r\n    open: boolean\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        if (open) {\r\n            dispatch(closeContextMenu());\r\n        }\r\n        dispatch(setSideBar(true));\r\n    };\r\n};\r\n","const statusHelper = {\r\n    isHomePage(path) {\r\n        return path === \"/home\";\r\n    },\r\n    isSharePage(path) {\r\n        return path && path.startsWith(\"/s/\");\r\n    },\r\n    isAdminPage(path) {\r\n        return path && path.startsWith(\"/admin\");\r\n    },\r\n    isLoginPage(path) {\r\n        return path && path.startsWith(\"/login\");\r\n    },\r\n    isMobile() {\r\n        return window.innerWidth < 600;\r\n    },\r\n};\r\nexport default statusHelper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction AutoHidden({ children, enable }) {\r\n    const [hidden, setHidden] = useState(false);\r\n\r\n    let prev = window.scrollY;\r\n    let lastUpdate = window.scrollY;\r\n    const show = 50;\r\n\r\n    useEffect(() => {\r\n        const handleNavigation = (e) => {\r\n            const window = e.currentTarget;\r\n\r\n            if (prev > window.scrollY) {\r\n                if (lastUpdate - window.scrollY > show) {\r\n                    lastUpdate = window.scrollY;\r\n                    setHidden(false);\r\n                }\r\n            } else if (prev < window.scrollY) {\r\n                if (window.scrollY - lastUpdate > show) {\r\n                    lastUpdate = window.scrollY;\r\n                    setHidden(true);\r\n                }\r\n            }\r\n            prev = window.scrollY;\r\n        };\r\n        if (enable) {\r\n            window.addEventListener(\"scroll\", (e) => handleNavigation(e));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [enable]);\r\n\r\n    return <Zoom in={!hidden}>{children}</Zoom>;\r\n}\r\n\r\nexport default AutoHidden;\r\n","/* eslint-disable no-case-declarations */\r\nimport { AnyAction } from \"redux\";\r\nimport { CloudreveFile } from \"../../types\";\r\n\r\ninterface SelectProps {\r\n    isMultiple: boolean;\r\n    withFolder: boolean;\r\n    withFile: boolean;\r\n}\r\n\r\nexport interface ExplorerState {\r\n    dndSignal: boolean;\r\n    dndTarget: any;\r\n    dndSource: any;\r\n    fileList: CloudreveFile[];\r\n    dirList: CloudreveFile[];\r\n    selected: CloudreveFile[];\r\n    selectProps: SelectProps;\r\n    lastSelect: {\r\n        file: CloudreveFile;\r\n        index: number;\r\n    };\r\n    shiftSelectedIds: string[];\r\n    imgPreview: {\r\n        first: CloudreveFile;\r\n        other: [];\r\n    };\r\n    keywords: string;\r\n    fileSave: boolean;\r\n    sideBarOpen: boolean;\r\n}\r\n\r\nexport const initState: ExplorerState = {\r\n    dndSignal: false,\r\n    dndTarget: null,\r\n    dndSource: null,\r\n    fileList: [],\r\n    dirList: [],\r\n    selected: [],\r\n    selectProps: {\r\n        isMultiple: false,\r\n        withFolder: false,\r\n        withFile: false,\r\n    },\r\n    lastSelect: {\r\n        file: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n        },\r\n        index: -1,\r\n    },\r\n    shiftSelectedIds: [],\r\n    imgPreview: {\r\n        first: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n        },\r\n        other: [],\r\n    },\r\n    keywords: \"\",\r\n    fileSave: false,\r\n    sideBarOpen: false,\r\n};\r\n\r\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\r\n    const isMultiple = selected.length > 1;\r\n    let withFolder = false;\r\n    let withFile = false;\r\n    selected.forEach((value) => {\r\n        if (value.type === \"dir\") {\r\n            withFolder = true;\r\n        } else if (value.type === \"file\") {\r\n            withFile = true;\r\n        }\r\n    });\r\n    return {\r\n        isMultiple,\r\n        withFolder,\r\n        withFile,\r\n    };\r\n};\r\n\r\nconst explorer = (\r\n    state: ExplorerState = initState,\r\n    action: AnyAction\r\n): ExplorerState => {\r\n    switch (action.type) {\r\n        case \"DRAG_AND_DROP\":\r\n            return Object.assign({}, state, {\r\n                dndSignal: !state.dndSignal,\r\n                dndTarget: action.target,\r\n                dndSource: action.source,\r\n            });\r\n        case \"SET_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                fileList: action.list,\r\n            });\r\n        case \"SET_DIR_LIST\":\r\n            return Object.assign({}, state, {\r\n                dirList: action.list,\r\n            });\r\n        case \"ADD_SELECTED_TARGETS\":\r\n            const addedSelected = [...state.selected, ...action.targets];\r\n            return Object.assign({}, state, {\r\n                selected: addedSelected,\r\n                selectProps: checkSelectedProps(addedSelected),\r\n            });\r\n        case \"SET_SELECTED_TARGET\":\r\n            const newSelected = action.targets;\r\n            return Object.assign({}, state, {\r\n                selected: newSelected,\r\n                selectProps: checkSelectedProps(newSelected),\r\n            });\r\n        case \"RMOVE_SELECTED_TARGETS\":\r\n            const { fileIds } = action;\r\n            const filteredSelected = state.selected.filter((file) => {\r\n                return !fileIds.includes(file.id);\r\n            });\r\n            return Object.assign({}, state, {\r\n                selected: filteredSelected,\r\n                selectProps: checkSelectedProps(filteredSelected),\r\n            });\r\n        case \"REFRESH_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                },\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                },\r\n                keywords: action.keywords,\r\n            });\r\n        case \"SHOW_IMG_PREIVEW\":\r\n            return Object.assign({}, state, {\r\n                imgPreview: {\r\n                    first: action.first,\r\n                    other: state.fileList,\r\n                },\r\n            });\r\n        case \"SAVE_FILE\":\r\n            return {\r\n                ...state,\r\n                fileSave: !state.fileSave,\r\n            };\r\n        case \"SET_LAST_SELECT\":\r\n            const { file, index } = action;\r\n            return {\r\n                ...state,\r\n                lastSelect: {\r\n                    file,\r\n                    index,\r\n                },\r\n            };\r\n        case \"SET_SHIFT_SELECTED_IDS\":\r\n            const { shiftSelectedIds } = action;\r\n            return {\r\n                ...state,\r\n                shiftSelectedIds,\r\n            };\r\n        case \"SET_NAVIGATOR\":\r\n            return {\r\n                ...state,\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                },\r\n                keywords: \"\",\r\n            };\r\n        case \"SET_SIDE_BAR\":\r\n            return {\r\n                ...state,\r\n                sideBarOpen: action.open,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default explorer;\r\n","const Auth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb: any) {\r\n        Auth.SetUser(cb);\r\n        Auth.isAuthenticated = true;\r\n    },\r\n    GetUser() {\r\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\r\n    },\r\n    SetUser(newUser: any) {\r\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n    },\r\n    Check(): boolean {\r\n        if (Auth.isAuthenticated) {\r\n            return true;\r\n        }\r\n        if (localStorage.getItem(\"user\") !== null) {\r\n            return !Auth.GetUser().anonymous;\r\n        }\r\n        return false;\r\n    },\r\n    signout() {\r\n        Auth.isAuthenticated = false;\r\n        const oldUser = Auth.GetUser();\r\n        oldUser.id = 0;\r\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\r\n    },\r\n    SetPreference(key: string, value: any) {\r\n        let preference = JSON.parse(\r\n            localStorage.getItem(\"user_preference\") || \"{}\"\r\n        );\r\n        preference = preference == null ? {} : preference;\r\n        preference[key] = value;\r\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\r\n    },\r\n    GetPreference(key: string): any | null {\r\n        const preference = JSON.parse(\r\n            localStorage.getItem(\"user_preference\") || \"{}\"\r\n        );\r\n        if (preference && preference[key]) {\r\n            return preference[key];\r\n        }\r\n        return null;\r\n    },\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Code } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"70%\",\r\n        padding: 40,\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            width: \"100%\",\r\n            padding: 10,\r\n        },\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => (\r\n    <Code\r\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n        className={props.className}\r\n    />\r\n);\r\n\r\nfunction TextLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextLoading;\r\n","import React, { useCallback } from \"react\";\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport DayIcon from \"@material-ui/icons/Brightness7\";\r\nimport NightIcon from \"@material-ui/icons/Brightness4\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleDaylightMode } from \"../../actions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    icon: {\r\n        color: \"rgb(255, 255, 255)\",\r\n        opacity: \"0.54\",\r\n    },\r\n}));\r\n\r\nconst DarkModeSwitcher = ({ position }) => {\r\n    const ThemeType = useSelector(\r\n        (state) => state.siteConfig.theme.palette.type\r\n    );\r\n    const dispatch = useDispatch();\r\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\r\n        dispatch,\r\n    ]);\r\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\r\n    const isDark = ThemeType && ThemeType === \"dark\";\r\n    const toggleMode = () => {\r\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\r\n        ToggleThemeMode();\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <Tooltip\r\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\r\n            placement=\"bottom\"\r\n        >\r\n            <IconButton\r\n                className={classNames({\r\n                    [classes.icon]: \"left\" === position,\r\n                })}\r\n                onClick={toggleMode}\r\n                color=\"inherit\"\r\n            >\r\n                {isDayLight && <NightIcon />}\r\n                {isDark && <DayIcon />}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { Report as ReportIcon } from \"@material-ui/icons\";\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport Report from \"../../Modals/Report\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport {\r\n    changeViewMethod,\r\n    openResaveDialog,\r\n    setShareUserPopover,\r\n    toggleSnackbar,\r\n} from \"../../../actions\";\r\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sideButton: {\r\n        padding: \"8px\",\r\n        marginRight: \"5px\",\r\n    },\r\n}));\r\n\r\nconst sortOptions = [\"A-Z\", \"Z-A\", \"最早\", \"最新\", \"最小\", \"最大\"];\r\n\r\nexport default function SubActions({ isSmall, share, inherit }) {\r\n    const dispatch = useDispatch();\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const OpenLoadingDialog = useCallback(\r\n        (method) => dispatch(changeViewMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const ChangeSortMethod = useCallback(\r\n        (method) => dispatch(changeSortMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const OpenResaveDialog = useCallback(\r\n        (key) => dispatch(openResaveDialog(key)),\r\n        [dispatch]\r\n    );\r\n    const SetShareUserPopover = useCallback(\r\n        (e) => dispatch(setShareUserPopover(e)),\r\n        [dispatch]\r\n    );\r\n    const [anchorSort, setAnchorSort] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [openReport, setOpenReport] = useState(false);\r\n    const showSortOptions = (e) => {\r\n        setAnchorSort(e.currentTarget);\r\n    };\r\n    const handleMenuItemClick = (e, index) => {\r\n        setSelectedIndex(index);\r\n        const optionsTable = {\r\n            0: \"namePos\",\r\n            1: \"nameRev\",\r\n            2: \"timePos\",\r\n            3: \"timeRev\",\r\n            4: \"sizePos\",\r\n            5: \"sizeRes\",\r\n        };\r\n        ChangeSortMethod(optionsTable[index]);\r\n        setAnchorSort(null);\r\n    };\r\n\r\n    const toggleViewMethod = () => {\r\n        const newMethod =\r\n            viewMethod === \"icon\"\r\n                ? \"list\"\r\n                : viewMethod === \"list\"\r\n                ? \"smallIcon\"\r\n                : \"icon\";\r\n        Auth.SetPreference(\"view_method\", newMethod);\r\n        OpenLoadingDialog(newMethod);\r\n    };\r\n\r\n    const toggleSnackbars = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const rewards = () => {\r\n        if (!Auth.Check()) {\r\n            toggleSnackbars(\r\n                \"top\",\r\n                \"right\",\r\n                \"登录后才能继续操作\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        window.opensendgift(share.key);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>  \r\n            {share && (\r\n            <IconButton title=\"打赏\" className={classes.sideButton} onClick={rewards}>\r\n              <MonetizationOnIcon fontSize=\"small\"/>\r\n            </IconButton>\r\n            )}\r\n            {viewMethod === \"icon\" && (\r\n                <IconButton\r\n                    title=\"列表展示\"\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n            {viewMethod === \"list\" && (\r\n                <IconButton\r\n                    title=\"小图标展示\"\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n\r\n            {viewMethod === \"smallIcon\" && (\r\n                <IconButton\r\n                    title=\"大图标展示\"\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n\r\n            <IconButton\r\n                title=\"排序方式\"\r\n                className={classes.sideButton}\r\n                onClick={showSortOptions}\r\n                color={inherit ? \"inherit\" : \"default\"}\r\n            >\r\n                <TextTotateVerticalIcon\r\n                    fontSize={isSmall ? \"small\" : \"default\"}\r\n                />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"sort-menu\"\r\n                anchorEl={anchorSort}\r\n                open={Boolean(anchorSort)}\r\n                onClose={() => setAnchorSort(null)}\r\n            >\r\n                {sortOptions.map((option, index) => (\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                    >\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n            {share && (\r\n                <>\r\n                    <IconButton\r\n                        title={\"保存到我的文件\"}\r\n                        className={classes.sideButton}\r\n                        onClick={() => OpenResaveDialog(share.key)}\r\n                    >\r\n                        <SaveIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        title={\"举报\"}\r\n                        className={classes.sideButton}\r\n                        onClick={() => setOpenReport(true)}\r\n                    >\r\n                        <ReportIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                    </IconButton>\r\n                    <Report\r\n                        open={openReport}\r\n                        share={share}\r\n                        onClose={() => setOpenReport(false)}\r\n                    />\r\n                </>\r\n            )}\r\n            {share && (\r\n                <IconButton\r\n                    title={\"由 \" + share.creator.nick + \" 创建\"}\r\n                    className={classes.sideButton}\r\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\r\n                    style={{ padding: 5 }}\r\n                >\r\n                    <Avatar\r\n                        style={{ height: 23, width: 23 }}\r\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\r\n                    />\r\n                </IconButton>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { FormControl, makeStyles, TextField } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { reportReasons } from \"../../config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widthAnimation: {},\r\n    shareUrl: {\r\n        minWidth: \"400px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n    },\r\n    flexCenter: {\r\n        alignItems: \"center\",\r\n    },\r\n    noFlex: {\r\n        display: \"block\",\r\n    },\r\n    scoreCalc: {\r\n        marginTop: 10,\r\n    },\r\n}));\r\n\r\nexport default function Report(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [reason, setReason] = useState(\"0\");\r\n    const [des, setDes] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const onClose = () => {\r\n        props.onClose();\r\n        setTimeout(() => {\r\n            setDes(\"\");\r\n            setReason(\"0\");\r\n        }, 500);\r\n    };\r\n\r\n    const submitReport = () => {\r\n        setLoading(true);\r\n        API.post(\"/share/report/\" + props.share.key, {\r\n            des: des,\r\n            reason: parseInt(reason),\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"举报成功\", \"success\");\r\n                setLoading(false);\r\n                onClose();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            className={classes.widthAnimation}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">举报</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                        aria-label=\"gender\"\r\n                        name=\"gender1\"\r\n                        value={reason}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                    >\r\n                        {reportReasons.map((v, k) => (\r\n                            <FormControlLabel\r\n                                key={k}\r\n                                value={k.toString()}\r\n                                control={<Radio />}\r\n                                label={v}\r\n                            />\r\n                        ))}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"补充描述\"\r\n                    multiline\r\n                    value={des}\r\n                    onChange={(e) => setDes(e.target.value)}\r\n                    variant=\"filled\"\r\n                    rows={4}\r\n                />\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={onClose}>关闭</Button>\r\n                <Button\r\n                    onClick={submitReport}\r\n                    color=\"secondary\"\r\n                    disabled={loading}\r\n                >\r\n                    提交\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","export const sizeToString = (bytes) => {\r\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\r\n    const k = 1024;\r\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\r\n};\r\n\r\nexport const fixUrlHash = (path) => {\r\n    return path;\r\n};\r\n\r\nexport const setCookie = (name, value, days) => {\r\n    if (days) {\r\n        const date = new Date();\r\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\r\n};\r\n\r\nexport const setGetParameter = (paramName, paramValue) => {\r\n    let url = window.location.href;\r\n\r\n    if (url.indexOf(paramName + \"=\") >= 0) {\r\n        const prefix = url.substring(0, url.indexOf(paramName));\r\n        let suffix = url.substring(url.indexOf(paramName));\r\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\r\n        suffix =\r\n            suffix.indexOf(\"&\") >= 0\r\n                ? suffix.substring(suffix.indexOf(\"&\"))\r\n                : \"\";\r\n        url = prefix + paramName + \"=\" + paramValue + suffix;\r\n    } else {\r\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\r\n        else url += \"&\" + paramName + \"=\" + paramValue;\r\n    }\r\n    if (url === window.location.href) {\r\n        return;\r\n    }\r\n    window.history.pushState(null, null, url);\r\n};\r\n\r\nexport const allowSharePreview = () => {\r\n    if (!window.isSharePage) {\r\n        return true;\r\n    }\r\n    if (window.isSharePage) {\r\n        if (window.shareInfo.allowPreview) {\r\n            return true;\r\n        }\r\n        if (window.userInfo.uid === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const checkGetParameters = (field) => {\r\n    const url = window.location.href;\r\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\r\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\r\n    return false;\r\n};\r\n\r\nexport const changeThemeColor = (color) => {\r\n    const metaThemeColor = window.document.querySelector(\r\n        \"meta[name=theme-color]\"\r\n    );\r\n    metaThemeColor.setAttribute(\"content\", color);\r\n};\r\n\r\nexport function bufferDecode(value) {\r\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\r\n}\r\n\r\n// ArrayBuffer to URLBase64\r\nexport function bufferEncode(value) {\r\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\")\r\n        .replace(/=/g, \"\");\r\n}\r\n\r\nexport function pathBack(path) {\r\n    const folders =\r\n        path !== null\r\n            ? path.substr(1).split(\"/\")\r\n            : this.props.path.substr(1).split(\"/\");\r\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\r\n}\r\n\r\nexport function filePath(file) {\r\n    return file.path === \"/\"\r\n        ? file.path + file.name\r\n        : file.path + \"/\" + file.name;\r\n}\r\n\r\nexport function hex2bin(hex) {\r\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\r\n}\r\n\r\nexport function pathJoin(parts, sep) {\r\n    const separator = sep || \"/\";\r\n    parts = parts.map((part, index) => {\r\n        if (index) {\r\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\r\n        }\r\n        if (index !== parts.length - 1) {\r\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\r\n        }\r\n        return part;\r\n    });\r\n    return parts.join(separator);\r\n}\r\n\r\nexport function basename(path) {\r\n    const pathList = path.split(\"/\");\r\n    pathList.pop();\r\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\r\n}\r\n\r\nexport function filename(path) {\r\n    const pathList = path.split(\"/\");\r\n    return pathList.pop();\r\n}\r\n\r\nexport function randomStr(length) {\r\n    let result = \"\";\r\n    const characters =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += characters.charAt(\r\n            Math.floor(Math.random() * charactersLength)\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getNumber(base, conditions) {\r\n    conditions.forEach((v) => {\r\n        if (v) {\r\n            base++;\r\n        }\r\n    });\r\n    return base;\r\n}\r\n\r\nexport const isMac = () => {\r\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\r\n};\r\n\r\nexport function vhCheck() {\r\n    const vh = window.innerHeight;\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n}\r\n","import React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nexport default function PurchaseShareDialog(props) {\r\n    return (\r\n        <Dialog\r\n            open={props.callback}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                确定要支付 {props.score}积分 购买此分享？\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    购买后，您可以自由预览、下载此分享的所有内容，一定期限内不会重复扣费。\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <Button\r\n                    onClick={() => props.callback()}\r\n                    color=\"primary\"\r\n                    autoFocus\r\n                >\r\n                    确定\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n    badge: {\r\n        position: \"absolute\",\r\n        bottom: 26,\r\n        top: \"auto\",\r\n        zIndex: 9999,\r\n        right: 7,\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: \"absolute\",\r\n        top: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        \"&:hover\": {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SaveButton(props) {\r\n    const classes = useStyles();\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: props.status === \"success\",\r\n    });\r\n\r\n    return (\r\n        <AutoHidden enable={statusHelper.isMobile()}>\r\n            <div className={classes.fab}>\r\n                <div className={classes.wrapper}>\r\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\r\n                        <Fab\r\n                            onClick={props.onClick}\r\n                            color=\"primary\"\r\n                            className={buttonClassname}\r\n                            disabled={props.status === \"loading\"}\r\n                            aria-label=\"add\"\r\n                        >\r\n                            {props.status === \"success\" ? (\r\n                                <CheckIcon />\r\n                            ) : (\r\n                                <SaveIcon />\r\n                            )}\r\n                        </Fab>\r\n                    </Tooltip>\r\n                    {props.status === \"loading\" && (\r\n                        <CircularProgress\r\n                            size={68}\r\n                            className={classes.fabProgress}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </AutoHidden>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    loadingContainer: {\r\n        display: \"flex\",\r\n    },\r\n    loading: {\r\n        marginTop: 10,\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\nexport default function LoadingDialog() {\r\n    const classes = useStyles();\r\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\r\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\r\n\r\n    return (\r\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogContent>\r\n                <DialogContentText className={classes.loadingContainer}>\r\n                    <CircularProgress color=\"secondary\" />\r\n                    <div className={classes.loading}>{text}</div>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    toggleSnackbar,\r\n    setModalsLoading,\r\n    refreshFileList,\r\n} from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function CopyDialog(props) {\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n    const RefreshFileList = useCallback(() => {\r\n        dispatch(refreshFileList());\r\n    }, [dispatch]);\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n\r\n        if (props.selected[0].type === \"dir\") {\r\n            dirs.push(props.selected[0].id);\r\n        } else {\r\n            items.push(props.selected[0].id);\r\n        }\r\n\r\n        API.post(\"/object/copy\", {\r\n            src_dir: props.selected[0].path,\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                RefreshFileList();\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        复制到 <strong>{selectedPathName}</strong>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\" || props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport {\r\n    Checkbox,\r\n    FormControl,\r\n    makeStyles,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport CasinoIcon from \"@material-ui/icons/Casino\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\r\nimport ToggleIcon from \"material-ui-toggle-icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widthAnimation: {},\r\n    shareUrl: {\r\n        minWidth: \"400px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n    },\r\n    flexCenter: {\r\n        alignItems: \"center\",\r\n    },\r\n    noFlex: {\r\n        display: \"block\",\r\n    },\r\n    scoreCalc: {\r\n        marginTop: 10,\r\n    },\r\n}));\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        border: \"0px solid rgba(0, 0, 0, .125)\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {\r\n            margin: \"auto\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        padding: 0,\r\n        \"&$expanded\": {},\r\n    },\r\n    content: {\r\n        margin: 0,\r\n        display: \"initial\",\r\n        \"&$expanded\": {\r\n            margin: \"0 0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        padding: 24,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nexport default function CreatShare(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const scoreEnabled = useSelector((state) => state.siteConfig.score_enabled);\r\n    const scoreRate = useSelector((state) => state.siteConfig.share_score_rate);\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [shareURL, setShareURL] = React.useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        downloads: 1,\r\n        expires: 24 * 3600,\r\n        showPassword: false,\r\n        score: 0,\r\n    });\r\n    const [shareOption, setShareOption] = React.useState({\r\n        password: false,\r\n        expire: false,\r\n        score: false,\r\n        preview: true,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        // 输入密码\r\n        if (prop === \"password\") {\r\n            if (event.target.value === \"\") {\r\n                setShareOption({ ...shareOption, password: false });\r\n            } else {\r\n                setShareOption({ ...shareOption, password: true });\r\n            }\r\n        }\r\n\r\n        // 输入积分\r\n        if (prop === \"score\") {\r\n            if (event.target.value == \"0\") {\r\n                setShareOption({ ...shareOption, score: false });\r\n            } else {\r\n                setShareOption({ ...shareOption, score: true });\r\n            }\r\n        }\r\n\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const randomPassword = () => {\r\n        setShareOption({ ...shareOption, password: true });\r\n        setValues({\r\n            ...values,\r\n            password: Math.random().toString(36).substr(2).slice(2, 8),\r\n            showPassword: true,\r\n        });\r\n    };\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const handleCheck = (prop) => () => {\r\n        if (!shareOption[prop]) {\r\n            handleExpand(prop)(null, true);\r\n        }\r\n        if (prop === \"password\" && shareOption[prop]) {\r\n            setValues({\r\n                ...values,\r\n                password: \"\",\r\n            });\r\n        }\r\n        if (prop === \"score\" && shareOption[prop]) {\r\n            setValues({\r\n                ...values,\r\n                score: 0,\r\n            });\r\n        }\r\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\r\n    };\r\n\r\n    const onClose = () => {\r\n        props.onClose();\r\n        setTimeout(() => {\r\n            setShareURL(\"\");\r\n        }, 500);\r\n    };\r\n\r\n    const submitShare = (e) => {\r\n        e.preventDefault();\r\n        props.setModalsLoading(true);\r\n        const submitFormBody = {\r\n            id: props.selected[0].id,\r\n            is_dir: props.selected[0].type === \"dir\",\r\n            password: values.password,\r\n            downloads: shareOption.expire ? values.downloads : -1,\r\n            expire: values.expires,\r\n            score: parseInt(values.score),\r\n            preview: shareOption.preview,\r\n        };\r\n\r\n        API.post(\"/share\", submitFormBody)\r\n            .then((response) => {\r\n                setShareURL(response.data);\r\n                setValues({\r\n                    password: \"\",\r\n                    downloads: 1,\r\n                    expires: 24 * 3600,\r\n                    showPassword: false,\r\n                    score: 0,\r\n                });\r\n                setShareOption({\r\n                    password: false,\r\n                    expire: false,\r\n                    score: false,\r\n                });\r\n                props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleFocus = (event) => event.target.select();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            className={classes.widthAnimation}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\r\n\r\n            {shareURL === \"\" && (\r\n                <>\r\n                    <Divider />\r\n                    <List>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"password\"}\r\n                            onChange={handleExpand(\"password\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <LockIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"使用密码保护\" />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.password}\r\n                                            onChange={handleCheck(\"password\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <FormControl\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\r\n                                        分享密码\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        fullWidth\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={\r\n                                            values.showPassword\r\n                                                ? \"text\"\r\n                                                : \"password\"\r\n                                        }\r\n                                        value={values.password}\r\n                                        onChange={handleChange(\"password\")}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip title=\"随机生成\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={randomPassword}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <CasinoIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={\r\n                                                        handleClickShowPassword\r\n                                                    }\r\n                                                    onMouseDown={\r\n                                                        handleMouseDownPassword\r\n                                                    }\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    <ToggleIcon\r\n                                                        on={values.showPassword}\r\n                                                        onIcon={<Visibility />}\r\n                                                        offIcon={\r\n                                                            <VisibilityOff />\r\n                                                        }\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        labelWidth={70}\r\n                                    />\r\n                                </FormControl>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"expire\"}\r\n                            onChange={handleExpand(\"expire\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <TimerIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"自动过期\" />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.expire}\r\n                                            onChange={handleCheck(\"expire\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails\r\n                                className={classes.flexCenter}\r\n                            >\r\n                                <FormControl\r\n                                    style={{\r\n                                        marginRight: 10,\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={values.downloads}\r\n                                        onChange={handleChange(\"downloads\")}\r\n                                    >\r\n                                        <MenuItem value={1}>1 次下载</MenuItem>\r\n                                        <MenuItem value={2}>2 次下载</MenuItem>\r\n                                        <MenuItem value={3}>3 次下载</MenuItem>\r\n                                        <MenuItem value={4}>4 次下载</MenuItem>\r\n                                        <MenuItem value={5}>5 次下载</MenuItem>\r\n                                        <MenuItem value={20}>\r\n                                            20 次下载\r\n                                        </MenuItem>\r\n                                        <MenuItem value={50}>\r\n                                            50 次下载\r\n                                        </MenuItem>\r\n                                        <MenuItem value={100}>\r\n                                            100 次下载\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Typography>或者</Typography>\r\n                                <FormControl\r\n                                    style={{\r\n                                        marginRight: 10,\r\n                                        marginLeft: 10,\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={values.expires}\r\n                                        onChange={handleChange(\"expires\")}\r\n                                    >\r\n                                        <MenuItem value={300}>5 分钟</MenuItem>\r\n                                        <MenuItem value={3600}>1 小时</MenuItem>\r\n                                        <MenuItem value={24 * 3600}>\r\n                                            1 天\r\n                                        </MenuItem>\r\n                                        <MenuItem value={7 * 24 * 3600}>\r\n                                            7 天\r\n                                        </MenuItem>\r\n                                        <MenuItem value={30 * 24 * 3600}>\r\n                                            30 天\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Typography>后过期</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        {scoreEnabled && (\r\n                            <ExpansionPanel\r\n                                expanded={expanded === \"score\"}\r\n                                onChange={handleExpand(\"score\")}\r\n                            >\r\n                                <ExpansionPanelSummary\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                >\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <AccountBalanceWalletIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"付积分下载\" />\r\n                                        <ListItemSecondaryAction>\r\n                                            <Checkbox\r\n                                                checked={shareOption.score}\r\n                                                onChange={handleCheck(\"score\")}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                </ExpansionPanelSummary>\r\n\r\n                                <ExpansionPanelDetails\r\n                                    className={classes.noFlex}\r\n                                >\r\n                                    <FormControl\r\n                                        variant=\"outlined\"\r\n                                        color=\"secondary\"\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel htmlFor=\"filled-adornment-password\">\r\n                                            每人次下载需支付的积分\r\n                                        </InputLabel>\r\n                                        <OutlinedInput\r\n                                            fullWidth\r\n                                            id=\"outlined-adornment-password\"\r\n                                            type=\"number\"\r\n                                            inputProps={{ min: 0 }}\r\n                                            value={values.score}\r\n                                            onChange={handleChange(\"score\")}\r\n                                            labelWidth={180}\r\n                                        />\r\n                                    </FormControl>\r\n                                    {values.score !== 0 && scoreRate !== \"100\" && (\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            className={classes.scoreCalc}\r\n                                        >\r\n                                            {\"预计每人次下载可到账 \" +\r\n                                                Math.ceil(\r\n                                                    (values.score * scoreRate) /\r\n                                                        100\r\n                                                ) +\r\n                                                \" 积分\"}\r\n                                        </Typography>\r\n                                    )}\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                        )}\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"preview\"}\r\n                            onChange={handleExpand(\"preview\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <LockIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"允许预览\" />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.preview}\r\n                                            onChange={handleCheck(\"preview\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Typography>\r\n                                    是否允许在分享页面预览文件内容\r\n                                </Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    </List>\r\n                    <Divider />\r\n                </>\r\n            )}\r\n            {shareURL !== \"\" && (\r\n                <DialogContent>\r\n                    <TextField\r\n                        onFocus={handleFocus}\r\n                        autoFocus\r\n                        inputProps={{ readonly: true }}\r\n                        label=\"分享链接\"\r\n                        value={shareURL}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n            )}\r\n\r\n            <DialogActions>\r\n                <Button onClick={onClose}>关闭</Button>\r\n\r\n                {shareURL === \"\" && (\r\n                    <div className={classes.wrapper}>\r\n                        <Button\r\n                            onClick={submitShare}\r\n                            color=\"secondary\"\r\n                            disabled={props.modalsLoading}\r\n                        >\r\n                            创建分享链接\r\n                            {props.modalsLoading && (\r\n                                <CircularProgress\r\n                                    size={24}\r\n                                    className={classes.buttonProgress}\r\n                                />\r\n                            )}\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport { filePath } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function DecompressDialog(props) {\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n        API.post(\"/file/decompress\", {\r\n            src: filePath(props.selected[0]),\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        解压送至 <strong>{selectedPathName}</strong>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\" || props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function CompressDialog(props) {\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n\r\n        API.post(\"/file/compress\", {\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            name: fileName,\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        <TextField\r\n                            onChange={(e) => setFileName(e.target.value)}\r\n                            value={fileName}\r\n                            fullWidth\r\n                            autoFocus\r\n                            id=\"standard-basic\"\r\n                            label=\"压缩文件名\"\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={\r\n                            selectedPath === \"\" ||\r\n                            fileName === \"\" ||\r\n                            props.modalsLoading\r\n                        }\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    input: {\r\n        width: 250,\r\n    },\r\n}));\r\n\r\nexport default function RelocateDialog(props) {\r\n    const [selectedPolicy, setSelectedPolicy] = useState(\"\");\r\n    const [policies, setPolicies] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const submitRelocate = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n\r\n        API.post(\"/file/relocate\", {\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst_policy_id: selectedPolicy,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\"top\", \"right\", \"转移任务已创建\", \"success\");\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            API.get(\"/user/setting/policies\")\r\n                .then((response) => {\r\n                    setPolicies(response.data.options);\r\n                    setSelectedPolicy(response.data.current.id);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                });\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [props.open]);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">转移到存储策略</DialogTitle>\r\n\r\n            <DialogContent className={classes.contentFix}>\r\n                <Select\r\n                    className={classes.input}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    value={selectedPolicy}\r\n                    onChange={(e) => setSelectedPolicy(e.target.value)}\r\n                >\r\n                    {policies.map((v, k) => (\r\n                        <MenuItem key={k} value={v.id}>\r\n                            {v.name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitRelocate}\r\n                        color=\"primary\"\r\n                        disabled={selectedPolicy === \"\" || props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    closeAllModals,\r\n    toggleSnackbar,\r\n    setModalsLoading,\r\n    refreshFileList,\r\n    refreshStorage,\r\n    openLoadingDialog,\r\n} from \"../../actions/index\";\r\nimport PathSelector from \"./PathSelector\";\r\nimport API, { baseURL } from \"../../middleware/Api\";\r\nimport {\r\n    withStyles,\r\n    Button,\r\n    TextField,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Loading from \"../Modals/Loading\";\r\nimport CopyDialog from \"../Modals/Copy\";\r\nimport CreatShare from \"../Modals/CreateShare\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport PurchaseShareDialog from \"../Modals/PurchaseShare\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport DecompressDialog from \"../Modals/Decompress\";\r\nimport CompressDialog from \"../Modals/Compress\";\r\nimport RelocateDialog from \"../Modals/Relocate\";\r\n\r\nconst styles = (theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        modalsStatus: state.viewUpdate.modals,\r\n        modalsLoading: state.viewUpdate.modalsLoading,\r\n        dirList: state.explorer.dirList,\r\n        fileList: state.explorer.fileList,\r\n        dndSignale: state.explorer.dndSignal,\r\n        dndTarget: state.explorer.dndTarget,\r\n        dndSource: state.explorer.dndSource,\r\n        loading: state.viewUpdate.modals.loading,\r\n        loadingText: state.viewUpdate.modals.loadingText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeAllModals: () => {\r\n            dispatch(closeAllModals());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        setModalsLoading: (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        refreshStorage: () => {\r\n            dispatch(refreshStorage());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n    };\r\n};\r\n\r\nclass ModalsCompoment extends Component {\r\n    state = {\r\n        newFolderName: \"\",\r\n        newFileName: \"\",\r\n        newName: \"\",\r\n        selectedPath: \"\",\r\n        selectedPathName: \"\",\r\n        secretShare: false,\r\n        sharePwd: \"\",\r\n        shareUrl: \"\",\r\n        downloadURL: \"\",\r\n        remoteDownloadPathSelect: false,\r\n        source: \"\",\r\n        purchaseCallback: null,\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    newNameSuffix = \"\";\r\n    downloaded = false;\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.dndSignale !== nextProps.dndSignale) {\r\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\r\n            return;\r\n        }\r\n        if (this.props.loading !== nextProps.loading) {\r\n            // 打包下载\r\n            if (nextProps.loading === true) {\r\n                if (nextProps.loadingText === \"打包中...\") {\r\n                    if (\r\n                        pathHelper.isSharePage(this.props.location.pathname) &&\r\n                        this.props.share &&\r\n                        this.props.share.score > 0\r\n                    ) {\r\n                        this.scoreHandler(this.archiveDownload);\r\n                        return;\r\n                    }\r\n                    this.archiveDownload();\r\n                } else if (nextProps.loadingText === \"获取下载地址...\") {\r\n                    if (\r\n                        pathHelper.isSharePage(this.props.location.pathname) &&\r\n                        this.props.share &&\r\n                        this.props.share.score > 0\r\n                    ) {\r\n                        this.scoreHandler(this.Download);\r\n                        return;\r\n                    }\r\n                    this.Download();\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\r\n            const name = nextProps.selected[0].name;\r\n            this.setState({\r\n                newName: name,\r\n            });\r\n            return;\r\n        }\r\n        if (\r\n            this.props.modalsStatus.getSource !==\r\n                nextProps.modalsStatus.getSource &&\r\n            nextProps.modalsStatus.getSource === true\r\n        ) {\r\n            API.get(\"/file/source/\" + this.props.selected[0].id)\r\n                .then((response) => {\r\n                    this.setState({\r\n                        source: response.data.url,\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    scoreHandler = (callback) => {\r\n        // 分享页面需要积分下载\r\n        if (!Auth.Check()) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"登录后才能继续操作\",\r\n                \"warning\"\r\n            );\r\n            this.onClose();\r\n            return;\r\n        }\r\n        if (!Auth.GetUser().group.shareFree && !this.downloaded) {\r\n            this.setState({\r\n                purchaseCallback: () => {\r\n                    this.setState({\r\n                        purchaseCallback: null,\r\n                    });\r\n                    callback();\r\n                },\r\n            });\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    Download = () => {\r\n        let reqURL = \"\";\r\n        if (this.props.selected[0].key) {\r\n            const downloadPath =\r\n                this.props.selected[0].path === \"/\"\r\n                    ? this.props.selected[0].path + this.props.selected[0].name\r\n                    : this.props.selected[0].path +\r\n                      \"/\" +\r\n                      this.props.selected[0].name;\r\n            reqURL =\r\n                \"/share/download/\" +\r\n                this.props.selected[0].key +\r\n                \"?path=\" +\r\n                encodeURIComponent(downloadPath);\r\n        } else {\r\n            reqURL = \"/file/download/\" + this.props.selected[0].id;\r\n        }\r\n\r\n        API.put(reqURL)\r\n            .then((response) => {\r\n                window.location.assign(response.data);\r\n                this.onClose();\r\n                this.downloaded = true;\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.onClose();\r\n            });\r\n    };\r\n\r\n    archiveDownload = () => {\r\n        const dirs = [],\r\n            items = [];\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n            return null;\r\n        });\r\n\r\n        let reqURL = \"/file/archive\";\r\n        const postBody = {\r\n            items: items,\r\n            dirs: dirs,\r\n        };\r\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n            reqURL = \"/share/archive/\" + window.shareInfo.key;\r\n            postBody[\"path\"] = this.props.selected[0].path;\r\n        }\r\n\r\n        API.post(reqURL, postBody)\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    this.onClose();\r\n                    window.location.assign(response.data);\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                this.onClose();\r\n                this.props.refreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.onClose();\r\n            });\r\n    };\r\n\r\n    submitRemove = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n        API.delete(\"/object\", {\r\n            data: {\r\n                items: items,\r\n                dirs: dirs,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    this.onClose();\r\n                    setTimeout(this.props.refreshFileList, 500);\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                this.props.setModalsLoading(false);\r\n                this.props.refreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitResave = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/share/save/\" + window.shareKey, {\r\n            path:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.onClose();\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"文件已保存\",\r\n                    \"success\"\r\n                );\r\n                this.props.refreshFileList();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        this.props.setModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n        API.patch(\"/object\", {\r\n            action: \"move\",\r\n            src_dir: this.props.selected[0].path,\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst: this.DragSelectedPath\r\n                ? this.DragSelectedPath\r\n                : this.state.selectedPath === \"//\"\r\n                ? \"/\"\r\n                : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.onClose();\r\n                this.props.refreshFileList();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .then(() => {\r\n                this.props.closeAllModals();\r\n            });\r\n    };\r\n\r\n    dragMove = (source, target) => {\r\n        if (this.props.selected.length === 0) {\r\n            this.props.selected[0] = source;\r\n        }\r\n        let doMove = true;\r\n\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            // 根据ID过滤\r\n            if (value.id === target.id && value.type === target.type) {\r\n                doMove = false;\r\n                // eslint-disable-next-line\r\n                return;\r\n            }\r\n            // 根据路径过滤\r\n            if (\r\n                value.path ===\r\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\r\n            ) {\r\n                doMove = false;\r\n            }\r\n        });\r\n        if (doMove) {\r\n            this.DragSelectedPath =\r\n                target.path === \"/\"\r\n                    ? target.path + target.name\r\n                    : target.path + \"/\" + target.name;\r\n            this.props.openLoadingDialog(\"处理中...\");\r\n            this.submitMove();\r\n        }\r\n    };\r\n\r\n    submitRename = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        const newName = this.state.newName;\r\n\r\n        const src = {\r\n            dirs: [],\r\n            items: [],\r\n        };\r\n\r\n        if (this.props.selected[0].type === \"dir\") {\r\n            src.dirs[0] = this.props.selected[0].id;\r\n        } else {\r\n            src.items[0] = this.props.selected[0].id;\r\n        }\r\n\r\n        // 检查重名\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === newName;\r\n            }) !== -1 ||\r\n            this.props.fileList.findIndex((value) => {\r\n                return value.name === newName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"新名称与已有文件重复\",\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.post(\"/object/rename\", {\r\n                action: \"rename\",\r\n                src: src,\r\n                new_name: newName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                    this.props.setModalsLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    submitCreateNewFolder = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === this.state.newFolderName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"文件夹名称重复\",\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.put(\"/directory\", {\r\n                path:\r\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\r\n                    \"/\" +\r\n                    this.state.newFolderName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.setModalsLoading(false);\r\n\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n        //this.props.toggleSnackbar();\r\n    };\r\n\r\n    submitCreateNewFile = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === this.state.newFileName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"文件名称重复\",\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.post(\"/file/create\", {\r\n                path:\r\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\r\n                    \"/\" +\r\n                    this.state.newFileName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.setModalsLoading(false);\r\n\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n        //this.props.toggleSnackbar();\r\n    };\r\n\r\n    submitTorrentDownload = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\r\n            dst:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"任务已创建\",\r\n                    \"success\"\r\n                );\r\n                this.onClose();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitDownload = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/aria2/url\", {\r\n            url: this.state.downloadURL,\r\n            dst:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"任务已创建\",\r\n                    \"success\"\r\n                );\r\n                this.onClose();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        this.setState({\r\n            selectedPath: path,\r\n            selectedPathName: folder.name,\r\n        });\r\n    };\r\n\r\n    remoteDownloadNext = () => {\r\n        this.props.closeAllModals();\r\n        this.setState({\r\n            remoteDownloadPathSelect: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            newFolderName: \"\",\r\n            newFileName: \"\",\r\n            newName: \"\",\r\n            selectedPath: \"\",\r\n            selectedPathName: \"\",\r\n            secretShare: false,\r\n            sharePwd: \"\",\r\n            downloadURL: \"\",\r\n            shareUrl: \"\",\r\n            remoteDownloadPathSelect: false,\r\n            source: \"\",\r\n        });\r\n        this.newNameSuffix = \"\";\r\n        this.props.closeAllModals();\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.checked });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Loading />\r\n                <PurchaseShareDialog\r\n                    callback={this.state.purchaseCallback}\r\n                    score={this.props.share ? this.props.share.score : 0}\r\n                    onClose={() => {\r\n                        this.setState({ purchaseCallback: null });\r\n                        this.onClose();\r\n                    }}\r\n                />\r\n                <Dialog\r\n                    open={this.props.modalsStatus.getSource}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        获取文件外链\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFolder}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFolderName\"\r\n                                label=\"外链地址\"\r\n                                type=\"text\"\r\n                                value={this.state.source}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>关闭</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.createNewFolder}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFolder}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFolderName\"\r\n                                label=\"文件夹名称\"\r\n                                type=\"text\"\r\n                                value={this.state.newFolderName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitCreateNewFolder}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newFolderName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.createNewFile}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新建文件</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFile}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFileName\"\r\n                                label=\"文件名称\"\r\n                                type=\"text\"\r\n                                value={this.state.newFileName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitCreateNewFile}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newFileName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.rename}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    maxWidth=\"sm\"\r\n                    fullWidth={true}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            输入{\" \"}\r\n                            <strong>\r\n                                {this.props.selected.length === 1\r\n                                    ? this.props.selected[0].name\r\n                                    : \"\"}\r\n                            </strong>{\" \"}\r\n                            的新名称：\r\n                        </DialogContentText>\r\n                        <form onSubmit={this.submitRename}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newName\"\r\n                                label=\"新名称\"\r\n                                type=\"text\"\r\n                                value={this.state.newName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitRename}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <CopyDialog\r\n                    open={this.props.modalsStatus.copy}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.move}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                移动至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitMove}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.resave}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">保存至</DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                保存至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitResave}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.remove}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            确定要删除\r\n                            {this.props.selected.length === 1 && (\r\n                                <strong> {this.props.selected[0].name} </strong>\r\n                            )}\r\n                            {this.props.selected.length > 1 && (\r\n                                <span>\r\n                                    这{this.props.selected.length}个对象\r\n                                </span>\r\n                            )}\r\n                            吗？\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitRemove}\r\n                                color=\"primary\"\r\n                                disabled={this.props.modalsLoading}\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <CreatShare\r\n                    open={this.props.modalsStatus.share}\r\n                    onClose={this.onClose}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                    setModalsLoading={this.props.setModalsLoading}\r\n                    selected={this.props.selected}\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.music}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {this.props.selected.length !== 0 && (\r\n                                <audio\r\n                                    controls\r\n                                    src={\r\n                                        pathHelper.isSharePage(\r\n                                            this.props.location.pathname\r\n                                        )\r\n                                            ? baseURL +\r\n                                              \"/share/preview/\" +\r\n                                              this.props.selected[0].key +\r\n                                              (this.props.selected[0].key\r\n                                                  ? \"?path=\" +\r\n                                                    encodeURIComponent(\r\n                                                        this.props.selected[0]\r\n                                                            .path === \"/\"\r\n                                                            ? this.props\r\n                                                                  .selected[0]\r\n                                                                  .path +\r\n                                                                  this.props\r\n                                                                      .selected[0]\r\n                                                                      .name\r\n                                                            : this.props\r\n                                                                  .selected[0]\r\n                                                                  .path +\r\n                                                                  \"/\" +\r\n                                                                  this.props\r\n                                                                      .selected[0]\r\n                                                                      .name\r\n                                                    )\r\n                                                  : \"\")\r\n                                            : baseURL +\r\n                                              \"/file/preview/\" +\r\n                                              this.props.selected[0].id\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>关闭</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.remoteDownload}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    fullWidth\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        新建离线下载任务\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <TextField\r\n                                label=\"文件地址\"\r\n                                autoFocus\r\n                                fullWidth\r\n                                id=\"downloadURL\"\r\n                                onChange={this.handleInputChange}\r\n                                placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链\"\r\n                            />\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>关闭</Button>\r\n                        <Button\r\n                            onClick={this.remoteDownloadNext}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.props.modalsLoading ||\r\n                                this.state.downloadURL === \"\"\r\n                            }\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.remoteDownloadPathSelect}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        选择存储位置\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                下载至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitDownload}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建任务\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.torrentDownload}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        选择存储位置\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                下载至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitTorrentDownload}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建任务\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <DecompressDialog\r\n                    open={this.props.modalsStatus.decompress}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n                <CompressDialog\r\n                    open={this.props.modalsStatus.compress}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n                <RelocateDialog\r\n                    open={this.props.modalsStatus.relocate}\r\n                    onClose={this.onClose}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModalsCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Modals = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ModalsCompoment)));\r\n\r\nexport default Modals;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport Editor from \"for-editor\";\r\nimport SaveButton from \"../Dial/Save\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"8px\",\r\n    },\r\n    \"@global\": {\r\n        \".for-toolbar\": {\r\n            overflowX: \"auto!important\",\r\n        },\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function TextViewer() {\r\n    const [content, setContent] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const math = useRouteMatch();\r\n    const $vm = React.createRef();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/content/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/content/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n\r\n        setLoading(true);\r\n        API.get(requestURL, { responseType: \"arraybuffer\" })\r\n            .then((response) => {\r\n                const buffer = new Buffer(response.rawData, \"binary\");\r\n                const textdata = buffer.toString(); // for string\r\n                setContent(textdata);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法读取文件内容，\" + error.message,\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0]]);\r\n\r\n    const toBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n\r\n    const save = () => {\r\n        setStatus(\"loading\");\r\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\r\n            .then(() => {\r\n                setStatus(\"success\");\r\n                setTimeout(() => setStatus(\"\"), 2000);\r\n            })\r\n            .catch((error) => {\r\n                setStatus(\"\");\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addImg = async ($file) => {\r\n        $vm.current.$img2Url($file.name, await toBase64($file));\r\n        console.log($file);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                {loading && <TextLoading />}\r\n                {!loading && (\r\n                    <Editor\r\n                        ref={$vm}\r\n                        value={content}\r\n                        onSave={() => save()}\r\n                        addImg={($file) => addImg($file)}\r\n                        onChange={(value) => setContent(value)}\r\n                        toolbar={{\r\n                            h1: true, // h1\r\n                            h2: true, // h2\r\n                            h3: true, // h3\r\n                            h4: true, // h4\r\n                            img: true, // 图片\r\n                            link: true, // 链接\r\n                            code: true, // 代码块\r\n                            preview: true, // 预览\r\n                            expand: true, // 全屏\r\n                            /* v0.0.9 */\r\n                            undo: true, // 撤销\r\n                            redo: true, // 重做\r\n                            save: false, // 保存\r\n                            /* v0.2.3 */\r\n                            subfield: true, // 单双栏模式\r\n                        }}\r\n                    />\r\n                )}\r\n            </Paper>\r\n            {!pathHelper.isSharePage(location.pathname) && (\r\n                <SaveButton onClick={save} status={status} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Paper, useTheme } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SaveButton from \"../Dial/Save\";\r\nimport { codePreviewSuffix } from \"../../config\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nconst MonacoEditor = React.lazy(() =>\r\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    editor: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    \"@global\": {\r\n        \".overflow-guard\": {\r\n            borderRadius: \"4px!important\",\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: \"8px 16px 8px 16px\",\r\n    },\r\n    toobar: {\r\n        textAlign: \"right\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function CodeViewer() {\r\n    const [content, setContent] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [suffix, setSuffix] = useState(\"javascript\");\r\n\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const theme = useTheme();\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            const extension = query.get(\"p\").split(\".\");\r\n            setSuffix(codePreviewSuffix[extension.pop()]);\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            const extension = query.get(\"name\").split(\".\");\r\n            setSuffix(codePreviewSuffix[extension.pop()]);\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/content/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/content/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n\r\n        setLoading(true);\r\n        API.get(requestURL, { responseType: \"arraybuffer\" })\r\n            .then((response) => {\r\n                const buffer = new Buffer(response.rawData, \"binary\");\r\n                const textdata = buffer.toString(); // for string\r\n                setContent(textdata);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法读取文件内容，\" + error.message,\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0]]);\r\n\r\n    const save = () => {\r\n        setStatus(\"loading\");\r\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\r\n            .then(() => {\r\n                setStatus(\"success\");\r\n                setTimeout(() => setStatus(\"\"), 2000);\r\n            })\r\n            .catch((error) => {\r\n                setStatus(\"\");\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const isSharePage = pathHelper.isSharePage(location.pathname);\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <div className={classes.toobar}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={suffix}\r\n                            onChange={(e) => setSuffix(e.target.value)}\r\n                        >\r\n                            {Array.from(\r\n                                new Set(\r\n                                    Object.keys(codePreviewSuffix).map((k) => {\r\n                                        return codePreviewSuffix[k];\r\n                                    })\r\n                                )\r\n                            ).map((extension) => (\r\n                                // eslint-disable-next-line react/jsx-key\r\n                                <MenuItem value={extension}>\r\n                                    {extension}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <Divider />\r\n                {loading && <TextLoading />}\r\n                {!loading && (\r\n                    <Suspense fallback={<TextLoading />}>\r\n                        <MonacoEditor\r\n                            height=\"600\"\r\n                            language={suffix}\r\n                            theme={\r\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\r\n                            }\r\n                            value={content}\r\n                            options={{\r\n                                readOnly: isSharePage,\r\n                                extraEditorClassName: classes.editor,\r\n                            }}\r\n                            onChange={(value) => setContent(value)}\r\n                        />\r\n                    </Suspense>\r\n                )}\r\n            </Paper>\r\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\r\n        </div>\r\n    );\r\n}\r\n","import { isMac } from \"../utils\";\r\nimport pathHelper from \"../utils/page\";\r\nimport Auth from \"../middleware/Auth\";\r\nimport {\r\n    changeContextMenu,\r\n    openLoadingDialog,\r\n    openMusicDialog,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"./index\";\r\nimport { isPreviewable } from \"../config\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nexport const removeSelectedTargets = (fileIds) => {\r\n    return {\r\n        type: \"RMOVE_SELECTED_TARGETS\",\r\n        fileIds,\r\n    };\r\n};\r\n\r\nexport const addSelectedTargets = (targets) => {\r\n    return {\r\n        type: \"ADD_SELECTED_TARGETS\",\r\n        targets,\r\n    };\r\n};\r\n\r\nexport const setSelectedTarget = (targets) => {\r\n    return {\r\n        type: \"SET_SELECTED_TARGET\",\r\n        targets,\r\n    };\r\n};\r\n\r\nexport const setLastSelect = (file, index) => {\r\n    return {\r\n        type: \"SET_LAST_SELECT\",\r\n        file,\r\n        index,\r\n    };\r\n};\r\n\r\nexport const setShiftSelectedIds = (shiftSelectedIds) => {\r\n    return {\r\n        type: \"SET_SHIFT_SELECTED_IDS\",\r\n        shiftSelectedIds,\r\n    };\r\n};\r\n\r\nexport const openPreview = () => {\r\n    return (dispatch, getState) => {\r\n        const {\r\n            explorer: { selected },\r\n            router: {\r\n                location: { pathname },\r\n            },\r\n        } = getState();\r\n        const isShare = pathHelper.isSharePage(pathname);\r\n        if (isShare) {\r\n            if (!Auth.Check()) {\r\n                dispatch(toggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\"));\r\n                dispatch(changeContextMenu(\"file\", false));\r\n                return;\r\n            }\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                dispatch(toggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\"));\r\n                dispatch(changeContextMenu(\"file\", false));\r\n                return;\r\n            }\r\n        }\r\n\r\n        dispatch(changeContextMenu(\"file\", false));\r\n        const previewPath =\r\n            selected[0].path === \"/\"\r\n                ? selected[0].path + selected[0].name\r\n                : selected[0].path + \"/\" + selected[0].name;\r\n        switch (isPreviewable(selected[0].name)) {\r\n            case \"img\":\r\n                dispatch(showImgPreivew(selected[0]));\r\n                return;\r\n            case \"msDoc\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/doc?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/doc?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"audio\":\r\n                dispatch(openMusicDialog());\r\n                return;\r\n            case \"video\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/video?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/video?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"pdf\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/pdf?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/pdf?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"edit\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/text?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/text?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"code\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/code?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/code?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            default:\r\n                dispatch(openLoadingDialog(\"获取下载地址...\"));\r\n                return;\r\n        }\r\n    };\r\n};\r\n\r\nexport const selectFile = (file, event, fileIndex) => {\r\n    const { ctrlKey, metaKey, shiftKey } = event;\r\n    return (dispatch, getState) => {\r\n        // 多种组合操作忽略\r\n        if ([ctrlKey, metaKey, shiftKey].filter(Boolean).length > 1) {\r\n            return;\r\n        }\r\n        const isMacbook = isMac();\r\n        const { explorer } = getState();\r\n        const {\r\n            selected,\r\n            lastSelect,\r\n            dirList,\r\n            fileList,\r\n            shiftSelectedIds,\r\n        } = explorer;\r\n        if (\r\n            shiftKey &&\r\n            !ctrlKey &&\r\n            !metaKey &&\r\n            selected.length !== 0 &&\r\n            // 点击类型一样\r\n            file.type === lastSelect.file.type\r\n        ) {\r\n            // shift 多选\r\n            // 取消原有选择\r\n            dispatch(removeSelectedTargets(selected.map((v) => v.id)));\r\n            // 添加新选择\r\n            const begin = Math.min(lastSelect.index, fileIndex);\r\n            const end = Math.max(lastSelect.index, fileIndex);\r\n            const list = file.type === \"dir\" ? dirList : fileList;\r\n            const newShiftSelected = list.slice(begin, end + 1);\r\n            return dispatch(addSelectedTargets(newShiftSelected));\r\n        }\r\n        dispatch(setLastSelect(file, fileIndex));\r\n        dispatch(setShiftSelectedIds([]));\r\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\r\n            // Ctrl/Command 单击添加/删除\r\n            const presentIndex = selected.findIndex((value) => {\r\n                return value.id === file.id;\r\n            });\r\n            if (presentIndex !== -1) {\r\n                return dispatch(removeSelectedTargets([file.id]));\r\n            }\r\n            return dispatch(addSelectedTargets([file]));\r\n        }\r\n        // 单选\r\n        return dispatch(setSelectedTarget([file]));\r\n    };\r\n};\r\n","export * from \"./explorer\";\r\n\r\nexport const setNavigator = (path, navigatorLoading) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR\",\r\n        path,\r\n        navigatorLoading,\r\n    };\r\n};\r\n\r\nexport const navigateTo = (path) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const navigatorLoading = path !== state.navigator.path;\r\n        dispatch(setNavigator(path, navigatorLoading));\r\n    };\r\n};\r\n\r\nexport const navigateUp = () => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const pathSplit = state.navigator.path.split(\"/\");\r\n        pathSplit.pop();\r\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\r\n        const navigatorLoading = newPath !== state.navigator.path;\r\n        dispatch(setNavigator(newPath, navigatorLoading));\r\n    };\r\n};\r\n\r\nexport const drawerToggleAction = (open) => {\r\n    return {\r\n        type: \"DRAWER_TOGGLE\",\r\n        open: open,\r\n    };\r\n};\r\n\r\nexport const dragAndDrop = (source, target) => {\r\n    return {\r\n        type: \"DRAG_AND_DROP\",\r\n        source: source,\r\n        target: target,\r\n    };\r\n};\r\n\r\nexport const changeViewMethod = (method) => {\r\n    return {\r\n        type: \"CHANGE_VIEW_METHOD\",\r\n        method: method,\r\n    };\r\n};\r\n\r\nexport const toggleDaylightMode = () => {\r\n    return {\r\n        type: \"TOGGLE_DAYLIGHT_MODE\",\r\n    };\r\n};\r\n\r\nexport const changeContextMenu = (type, open) => {\r\n    return {\r\n        type: \"CHANGE_CONTEXT_MENU\",\r\n        menuType: type,\r\n        open: open,\r\n    };\r\n};\r\n\r\nexport const setNavigatorLoadingStatus = (status) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\r\n        status: status,\r\n    };\r\n};\r\n\r\nexport const setNavigatorError = (status, msg) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR_ERROR\",\r\n        status: status,\r\n        msg: msg,\r\n    };\r\n};\r\n\r\nexport const openCreateFolderDialog = () => {\r\n    return {\r\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openCreateFileDialog = () => {\r\n    return {\r\n        type: \"OPEN_CREATE_FILE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const setUserPopover = (anchor) => {\r\n    return {\r\n        type: \"SET_USER_POPOVER\",\r\n        anchor: anchor,\r\n    };\r\n};\r\n\r\nexport const setShareUserPopover = (anchor) => {\r\n    return {\r\n        type: \"SET_SHARE_USER_POPOVER\",\r\n        anchor: anchor,\r\n    };\r\n};\r\n\r\nexport const openRenameDialog = () => {\r\n    return {\r\n        type: \"OPEN_RENAME_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openResaveDialog = (key) => {\r\n    return {\r\n        type: \"OPEN_RESAVE_DIALOG\",\r\n        key: key,\r\n    };\r\n};\r\n\r\nexport const openMoveDialog = () => {\r\n    return {\r\n        type: \"OPEN_MOVE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openRemoveDialog = () => {\r\n    return {\r\n        type: \"OPEN_REMOVE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openShareDialog = () => {\r\n    return {\r\n        type: \"OPEN_SHARE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const applyThemes = (theme) => {\r\n    return {\r\n        type: \"APPLY_THEME\",\r\n        theme: theme,\r\n    };\r\n};\r\n\r\nexport const setSessionStatus = (status) => {\r\n    return {\r\n        type: \"SET_SESSION_STATUS\",\r\n        status: status,\r\n    };\r\n};\r\n\r\nexport const openMusicDialog = () => {\r\n    return {\r\n        type: \"OPEN_MUSIC_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openRemoteDownloadDialog = () => {\r\n    return {\r\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openTorrentDownloadDialog = () => {\r\n    return {\r\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openDecompressDialog = () => {\r\n    return {\r\n        type: \"OPEN_DECOMPRESS_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openCompressDialog = () => {\r\n    return {\r\n        type: \"OPEN_COMPRESS_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openRelocateDialog = () => {\r\n    return {\r\n        type: \"OPEN_RELOCATE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openGetSourceDialog = () => {\r\n    return {\r\n        type: \"OPEN_GET_SOURCE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openCopyDialog = () => {\r\n    return {\r\n        type: \"OPEN_COPY_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openLoadingDialog = (text) => {\r\n    return {\r\n        type: \"OPEN_LOADING_DIALOG\",\r\n        text: text,\r\n    };\r\n};\r\n\r\nexport const closeAllModals = () => {\r\n    return {\r\n        type: \"CLOSE_ALL_MODALS\",\r\n    };\r\n};\r\n\r\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\r\n    return {\r\n        type: \"TOGGLE_SNACKBAR\",\r\n        vertical: vertical,\r\n        horizontal: horizontal,\r\n        msg: msg,\r\n        color: color,\r\n    };\r\n};\r\n\r\nexport const enableLoadUploader = () => {\r\n    return {\r\n        type: \"ENABLE_LOAD_UPLOADER\",\r\n    };\r\n};\r\n\r\nexport const setModalsLoading = (status) => {\r\n    return {\r\n        type: \"SET_MODALS_LOADING\",\r\n        status: status,\r\n    };\r\n};\r\n\r\nexport const refreshFileList = () => {\r\n    return {\r\n        type: \"REFRESH_FILE_LIST\",\r\n    };\r\n};\r\n\r\nexport const searchMyFile = (keywords) => {\r\n    return {\r\n        type: \"SEARCH_MY_FILE\",\r\n        keywords: keywords,\r\n    };\r\n};\r\n\r\nexport const showImgPreivew = (first) => {\r\n    return {\r\n        type: \"SHOW_IMG_PREIVEW\",\r\n        first: first,\r\n    };\r\n};\r\n\r\nexport const refreshStorage = () => {\r\n    return {\r\n        type: \"REFRESH_STORAGE\",\r\n    };\r\n};\r\n\r\nexport const saveFile = () => {\r\n    return {\r\n        type: \"SAVE_FILE\",\r\n    };\r\n};\r\n\r\nexport const setSiteConfig = (config) => {\r\n    return {\r\n        type: \"SET_SITE_CONFIG\",\r\n        config: config,\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {} from \"../../actions\";\r\nimport classNames from \"classnames\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n\r\nimport { green, amber } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n    withStyles,\r\n    SnackbarContent,\r\n    Snackbar,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        snackbar: state.viewUpdate.snackbar,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = (theme) => ({\r\n    success: {\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.info.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: theme.palette.warning.main,\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon\r\n                        className={classNames(\r\n                            classes.icon,\r\n                            classes.iconVariant\r\n                        )}\r\n                    />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\r\n        .isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n});\r\nclass SnackbarCompoment extends Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\r\n            this.setState({ open: true });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: this.props.snackbar.vertical,\r\n                    horizontal: this.props.snackbar.horizontal,\r\n                }}\r\n                open={this.state.open}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={this.handleClose}\r\n                    variant={this.props.snackbar.color}\r\n                    message={this.props.snackbar.msg}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst AlertBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(SnackbarCompoment));\r\n\r\nexport default AlertBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    LogoutVariant,\r\n    HomeAccount,\r\n    DesktopMacDashboard,\r\n    AccountArrowRight,\r\n    AccountPlus,\r\n} from \"mdi-material-ui\";\r\nimport {\r\n    setSessionStatus,\r\n    setUserPopover,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    withStyles,\r\n    Avatar,\r\n    Popover,\r\n    Typography,\r\n    Chip,\r\n    ListItemIcon,\r\n    MenuItem,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        setSessionStatus: (status) => {\r\n            dispatch(setSessionStatus(status));\r\n        },\r\n    };\r\n};\r\nconst styles = () => ({\r\n    avatar: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: \"20px 20px 20px 20px\",\r\n    },\r\n    largeAvatar: {\r\n        height: \"90px\",\r\n        width: \"90px\",\r\n    },\r\n    info: {\r\n        marginLeft: \"10px\",\r\n        width: \"139px\",\r\n    },\r\n    badge: {\r\n        marginTop: \"10px\",\r\n    },\r\n    visitorMenu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass UserAvatarPopoverCompoment extends Component {\r\n    handleClose = () => {\r\n        this.props.setUserPopover(null);\r\n    };\r\n\r\n    openURL = (url) => {\r\n        window.location.href = url;\r\n    };\r\n\r\n    sigOut = () => {\r\n        API.delete(\"/user/session/\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"您已退出登录\",\r\n                    \"success\"\r\n                );\r\n                Auth.signout();\r\n                window.location.reload();\r\n                this.props.setSessionStatus(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                this.handleClose();\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isAdminPage = pathHelper.isAdminPage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        return (\r\n            <Popover\r\n                open={this.props.anchorEl !== null}\r\n                onClose={this.handleClose}\r\n                anchorEl={this.props.anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n            >\r\n                {!Auth.Check() && (\r\n                    <div className={classes.visitorMenu}>\r\n                        <Divider />\r\n                        <MenuItem\r\n                            onClick={() => this.props.history.push(\"/login\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountArrowRight />\r\n                            </ListItemIcon>\r\n                            登录\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            onClick={() => this.props.history.push(\"/signup\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountPlus />\r\n                            </ListItemIcon>\r\n                            注册\r\n                        </MenuItem>\r\n                    </div>\r\n                )}\r\n                {Auth.Check() && (\r\n                    <div>\r\n                        <div className={classes.header}>\r\n                            <div className={classes.largeAvatarContainer}>\r\n                                <Avatar\r\n                                    className={classes.largeAvatar}\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className={classes.info}>\r\n                                <Typography noWrap>{user.nickname}</Typography>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    style={{\r\n                                        fontSize: \"0.875rem\",\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    {user.user_name}\r\n                                </Typography>\r\n                                <Chip\r\n                                    className={classes.badge}\r\n                                    color={\r\n                                        user.group.id === 1\r\n                                            ? \"secondary\"\r\n                                            : \"default\"\r\n                                    }\r\n                                    label={user.group.name}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Divider />\r\n                            {!isAdminPage && (\r\n                                <MenuItem\r\n                                    style={{\r\n                                        padding: \" 11px 16px 11px 16px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.handleClose();\r\n                                        this.props.history.push(\r\n                                            \"/profile/\" + user.id\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <HomeAccount />\r\n                                    </ListItemIcon>\r\n                                    个人主页\r\n                                </MenuItem>\r\n                            )}\r\n                            {user.group.id === 1 && (\r\n                                <MenuItem\r\n                                    style={{\r\n                                        padding: \" 11px 16px 11px 16px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.handleClose();\r\n                                        this.props.history.push(\"/admin/home\");\r\n                                    }}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <DesktopMacDashboard />\r\n                                    </ListItemIcon>\r\n                                    管理面板\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <MenuItem\r\n                                style={{\r\n                                    padding: \" 11px 16px 11px 16px\",\r\n                                }}\r\n                                onClick={this.sigOut}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <LogoutVariant />\r\n                                </ListItemIcon>\r\n                                退出登录\r\n                            </MenuItem>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Popover>\r\n        );\r\n    }\r\n}\r\n\r\nUserAvatarPopoverCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserAvatarPopover = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\r\n\r\nexport default UserAvatarPopover;\r\n","import React, { useCallback } from \"react\";\r\nimport {\r\n    Avatar,\r\n    IconButton,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Nas } from \"mdi-material-ui\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { Check } from \"@material-ui/icons\";\r\nimport Backup from \"@material-ui/icons/Backup\";\r\nimport { blue, green } from \"@material-ui/core/colors\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    uploadFromFile: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    policySelected: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n}));\r\n\r\nconst PolicySwitcher = () => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [policies, setPolicies] = React.useState({\r\n        current: { id: \"\", name: \"\" },\r\n        options: [],\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleClick = (event) => {\r\n        if (policies.current.id === \"\") {\r\n            API.get(\"/user/setting/policies\", {})\r\n                .then((response) => {\r\n                    setPolicies(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                });\r\n        }\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const switchTo = (id) => {\r\n        if (id === policies.current.id) {\r\n            handleClose();\r\n            return;\r\n        }\r\n        API.patch(\"/user/setting/policy\", {\r\n            id: id,\r\n        })\r\n            .then(() => {\r\n                window.location.reload();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Tooltip title={\"存储策略\"} placement=\"bottom\">\r\n                <IconButton onClick={handleClick} color=\"inherit\">\r\n                    <Nas />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                }}\r\n            >\r\n                <List>\r\n                    {policies.options.map((value, index) => (\r\n                        <ListItem\r\n                            button\r\n                            component=\"label\"\r\n                            key={index}\r\n                            onClick={() => switchTo(value.id)}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                {value.id === policies.current.id && (\r\n                                    <Avatar className={classes.policySelected}>\r\n                                        <Check />\r\n                                    </Avatar>\r\n                                )}\r\n                                {value.id !== policies.current.id && (\r\n                                    <Avatar className={classes.uploadFromFile}>\r\n                                        <Backup />\r\n                                    </Avatar>\r\n                                )}\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={value.name} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PolicySwitcher;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport SettingIcon from \"@material-ui/icons/Settings\";\r\nimport UserAvatarPopover from \"./UserAvatarPopover\";\r\nimport { AccountCircle } from \"mdi-material-ui\";\r\nimport { setUserPopover } from \"../../actions\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    withStyles,\r\n    Grow,\r\n    Avatar,\r\n    IconButton,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\r\nimport PolicySwitcher from \"./PolicySwitcher\";\r\nimport { Home } from \"@material-ui/icons\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    mobileHidden: {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    avatar: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: \"20px 20px 20px 20px\",\r\n    },\r\n    largeAvatar: {\r\n        height: \"90px\",\r\n        width: \"90px\",\r\n    },\r\n    info: {\r\n        marginLeft: \"10px\",\r\n        width: \"139px\",\r\n    },\r\n    badge: {\r\n        marginTop: \"10px\",\r\n    },\r\n    visitorMenu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass UserAvatarCompoment extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    showUserInfo = (e) => {\r\n        this.props.setUserPopover(e.currentTarget);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n\r\n    openURL = (url) => {\r\n        window.location.href = url;\r\n    };\r\n\r\n    returnHome = () => {\r\n        window.location.href = \"/home\";\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const loginCheck = Auth.Check(this.props.isLogin);\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n        const isAdminPage = pathHelper.isAdminPage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        return (\r\n            <div className={classes.mobileHidden}>\r\n                <Grow\r\n                    in={\r\n                        this.props.selected.length <= 1 &&\r\n                        !(!this.props.isMultiple && this.props.withFile)\r\n                    }\r\n                >\r\n                    <div>\r\n                        {!isAdminPage && (\r\n                            <>\r\n                                <DarkModeSwitcher position=\"top\" />\r\n                                {loginCheck && (\r\n                                    <>\r\n                                        <PolicySwitcher />\r\n                                        <Tooltip\r\n                                            title={\"设置\"}\r\n                                            placement=\"bottom\"\r\n                                        >\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    this.props.history.push(\r\n                                                        \"/setting?\"\r\n                                                    )\r\n                                                }\r\n                                                color=\"inherit\"\r\n                                            >\r\n                                                <SettingIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                        {isAdminPage && (\r\n                            <Tooltip title={\"返回主页\"} placement=\"bottom\">\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={this.returnHome}\r\n                                >\r\n                                    <Home />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\r\n                            {!loginCheck && <AccountCircle />}\r\n                            {loginCheck && (\r\n                                <Avatar\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\r\n                                    }\r\n                                    className={classes.avatar}\r\n                                />\r\n                            )}\r\n                        </IconButton>{\" \"}\r\n                    </div>\r\n                </Grow>\r\n                <UserAvatarPopover />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserAvatarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserAvatar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\r\n\r\nexport default UserAvatar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Pageview from \"@material-ui/icons/Pageview\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\r\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\r\nimport MoveIcon from \"@material-ui/icons/Input\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountBalanceWallet from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport {\r\n    drawerToggleAction,\r\n    setSelectedTarget,\r\n    navigateTo,\r\n    openCreateFolderDialog,\r\n    openGetSourceDialog,\r\n    changeContextMenu,\r\n    searchMyFile,\r\n    saveFile,\r\n    openMusicDialog,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n    openMoveDialog,\r\n    openRemoveDialog,\r\n    openShareDialog,\r\n    openRenameDialog,\r\n    openLoadingDialog,\r\n    setSessionStatus,\r\n    openPreview,\r\n} from \"../../actions\";\r\nimport {\r\n    allowSharePreview,\r\n    checkGetParameters,\r\n    changeThemeColor,\r\n} from \"../../utils\";\r\nimport Uploader from \"../Upload/Uploader.js\";\r\nimport { sizeToString, vhCheck } from \"../../utils\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SezrchBar from \"./SearchBar\";\r\nimport StorageBar from \"./StorageBar\";\r\nimport UserAvatar from \"./UserAvatar\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    withStyles,\r\n    withTheme,\r\n    Drawer,\r\n    SwipeableDrawer,\r\n    IconButton,\r\n    Hidden,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Grow,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport FileTag from \"./FileTags\";\r\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SubActions from \"../FileManager/Navigator/SubActions\";\r\n\r\nvhCheck();\r\nconst drawerWidth = 240;\r\nconst drawerWidthMobile = 270;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        desktopOpen: state.viewUpdate.open,\r\n        selected: state.explorer.selected,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        path: state.navigator.path,\r\n        keywords: state.explorer.keywords,\r\n        title: state.siteConfig.title,\r\n        subTitle: state.viewUpdate.subTitle,\r\n        loadUploader: state.viewUpdate.loadUploader,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleDesktopToggle: (open) => {\r\n            dispatch(drawerToggleAction(open));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openGetSourceDialog: () => {\r\n            dispatch(openGetSourceDialog());\r\n        },\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        searchMyFile: (keywords) => {\r\n            dispatch(searchMyFile(keywords));\r\n        },\r\n        saveFile: () => {\r\n            dispatch(saveFile());\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openRenameDialog: () => {\r\n            dispatch(openRenameDialog());\r\n        },\r\n        openMoveDialog: () => {\r\n            dispatch(openMoveDialog());\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n        setSessionStatus: () => {\r\n            dispatch(setSessionStatus());\r\n        },\r\n        openPreview: () => {\r\n            dispatch(openPreview());\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginLeft: drawerWidthMobile,\r\n        },\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: \" background-color 250ms\",\r\n    },\r\n\r\n    drawer: {\r\n        width: 0,\r\n        flexShrink: 0,\r\n    },\r\n    drawerDesktop: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    menuButtonDesktop: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    menuIcon: {\r\n        marginRight: 20,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidthMobile,\r\n    },\r\n    drawerPaperDesktop: {\r\n        width: drawerWidth,\r\n    },\r\n    upDrawer: {\r\n        overflowX: \"hidden\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: 0,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    badge: {\r\n        top: 1,\r\n        right: -15,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    sectionForFile: {\r\n        display: \"flex\",\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    addButton: {\r\n        marginLeft: \"40px\",\r\n        marginTop: \"25px\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    fabButton: {\r\n        borderRadius: \"100px\",\r\n    },\r\n    badgeFix: {\r\n        right: \"10px\",\r\n    },\r\n    iconFix: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    dividerFix: {\r\n        marginTop: \"8px\",\r\n    },\r\n    folderShareIcon: {\r\n        verticalAlign: \"sub\",\r\n        marginRight: \"5px\",\r\n    },\r\n    shareInfoContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\",\r\n        marginBottom: \"20px\",\r\n        marginLeft: \"28px\",\r\n        textDecoration: \"none\",\r\n    },\r\n    shareAvatar: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n    },\r\n    stickFooter: {\r\n        bottom: \"0px\",\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n    },\r\n    ownerInfo: {\r\n        marginLeft: \"10px\",\r\n        width: \"150px\",\r\n    },\r\n    minStickDrawer: {\r\n        overflowY: \"auto\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: \"calc(var(--vh, 100vh) - 145px)\",\r\n        },\r\n\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minHeight: \"calc(var(--vh, 100vh) - 360px)\",\r\n        },\r\n    },\r\n});\r\nclass NavbarCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mobileOpen: false,\r\n        };\r\n        this.UploaderRef = React.createRef();\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.unlisten = this.props.history.listen(() => {\r\n            this.setState(() => ({ mobileOpen: false }));\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        changeThemeColor(\r\n            this.props.selected.length <= 1 &&\r\n                !(!this.props.isMultiple && this.props.withFile)\r\n                ? this.props.theme.palette.primary.main\r\n                : this.props.theme.palette.background.default\r\n        );\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (\r\n            (this.props.selected.length <= 1 &&\r\n                !(!this.props.isMultiple && this.props.withFile)) !==\r\n            (nextProps.selected.length <= 1 &&\r\n                !(!nextProps.isMultiple && nextProps.withFile))\r\n        ) {\r\n            changeThemeColor(\r\n                !(\r\n                    this.props.selected.length <= 1 &&\r\n                    !(!this.props.isMultiple && this.props.withFile)\r\n                )\r\n                    ? this.props.theme.palette.type === \"dark\"\r\n                        ? this.props.theme.palette.background.default\r\n                        : this.props.theme.palette.primary.main\r\n                    : this.props.theme.palette.background.default\r\n            );\r\n        }\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    loadUploader = () => {\r\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n            return (\r\n                <>\r\n                    {this.props.loadUploader && this.props.isLogin && (\r\n                        <Uploader />\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    openDownload = () => {\r\n        if (!allowSharePreview()) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"未登录用户无法预览\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.props.openLoadingDialog(\"获取下载地址...\");\r\n    };\r\n\r\n    archiveDownload = () => {\r\n        this.props.openLoadingDialog(\"打包中...\");\r\n    };\r\n\r\n    signOut = () => {\r\n        API.delete(\"/user/session/\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"您已退出登录\",\r\n                    \"success\"\r\n                );\r\n                Auth.signout();\r\n                window.location.reload();\r\n                this.props.setSessionStatus(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .finally(() => {\r\n                this.handleClose();\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const isSharePage = pathHelper.isSharePage(\r\n            this.props.location.pathname\r\n        );\r\n        const getCookie =(name)=> {\r\n            const strcookie = document.cookie;//获取cookie字符串\r\n                const arrcookie = strcookie.split(\"; \");//分割\r\n                //遍历匹配\r\n                for ( let i = 0; i < arrcookie.length; i++) {\r\n                    const arr = arrcookie[i].split(\"=\");\r\n                    if (arr[0] == name){\r\n                        return unescape(arr[1]);\r\n                    }\r\n                }\r\n            return null;\r\n        }\r\n\r\n        const drawer = (\r\n            <div id=\"container\" className={classes.upDrawer}>\r\n                {pathHelper.isMobile() && <UserInfo />}\r\n\r\n                {Auth.Check(this.props.isLogin) && (\r\n                    <>\r\n                        <div className={classes.minStickDrawer}>\r\n                            <FileTag />\r\n                            <List>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"我的分享\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/shares?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <ShareIcon\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"我的分享\" />\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"离线下载\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/aria2?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <DownloadIcon\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"离线下载\" />\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"寻求资源\"\r\n                                    onClick={() => window.open('https://ask.bilnn.com/api/user/panlogin?token='+getCookie(\"token\"))}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <Pageview\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"寻求资源\" />\r\n                                </ListItem>\r\n                                {user.group.webdav && (\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"WebDAV\"\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/webdav?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <Devices\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"WebDAV\" />\r\n                                    </ListItem>\r\n                                )}\r\n\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"任务队列\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/tasks?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <Assignment\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"任务队列\" />\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"财务管理\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/ifm/c=user&a=account\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <AccountBalanceWallet\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"财务管理\" />\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"在线客服\"\r\n                                    onClick={() => window._MEIQIA('showPanel')}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <ChatIcon\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"在线客服\" />\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n\r\n                        {pathHelper.isMobile() && (\r\n                            <>\r\n                                <Divider />\r\n                                <List>\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"个人设置\"\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/setting?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <Settings\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"个人设置\" />\r\n                                    </ListItem>\r\n\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"退出登录\"\r\n                                        onClick={this.signOut}\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <LogoutVariant\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"退出登录\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </>\r\n                        )}\r\n                        <div>\r\n                            <StorageBar></StorageBar>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {!Auth.Check(this.props.isLogin) && (\r\n                    <div>\r\n                        <ListItem\r\n                            button\r\n                            key=\"登录\"\r\n                            onClick={() => this.props.history.push(\"/login\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountArrowRight\r\n                                    className={classes.iconFix}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"登录\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            key=\"注册\"\r\n                            onClick={() => this.props.history.push(\"/signup\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountPlus className={classes.iconFix} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"注册\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            key=\"官网首页\"\r\n                            onClick={() => window.location.href='https://www.bilnn.com/'}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <WebIcon className={classes.iconFix} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"官网首页\" />\r\n                        </ListItem>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n        const iOS =\r\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n        return (\r\n            <div>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classes.appBar}\r\n                    color={\r\n                        this.props.theme.palette.type !== \"dark\" &&\r\n                        this.props.selected.length <= 1 &&\r\n                        !(!this.props.isMultiple && this.props.withFile)\r\n                            ? \"primary\"\r\n                            : \"default\"\r\n                    }\r\n                >\r\n                    <Toolbar>\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"Open drawer\"\r\n                                    onClick={this.handleDrawerToggle}\r\n                                    className={classes.menuButton}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"Open drawer\"\r\n                                    onClick={() =>\r\n                                        this.props.handleDesktopToggle(\r\n                                            !this.props.desktopOpen\r\n                                        )\r\n                                    }\r\n                                    className={classes.menuButtonDesktop}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )}\r\n                        {(this.props.selected.length > 1 ||\r\n                            (!this.props.isMultiple && this.props.withFile)) &&\r\n                            (isHomePage ||\r\n                                pathHelper.isSharePage(\r\n                                    this.props.location.pathname\r\n                                )) && (\r\n                                <Grow\r\n                                    in={\r\n                                        this.props.selected.length > 1 ||\r\n                                        (!this.props.isMultiple &&\r\n                                            this.props.withFile)\r\n                                    }\r\n                                >\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        className={classes.menuIcon}\r\n                                        onClick={() =>\r\n                                            this.props.setSelectedTarget([])\r\n                                        }\r\n                                    >\r\n                                        <BackIcon />\r\n                                    </IconButton>\r\n                                </Grow>\r\n                            )}\r\n                        {getCookie(\"thisapp\")!=\"ok\" && !Auth.Check(this.props.isLogin) && this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap\r\n                                            onClick={() => {window.location.href='https://www.bilnn.com/'}}\r\n                                >\r\n                                    {this.props.subTitle\r\n                                        ? this.props.subTitle\r\n                                        : this.props.title}\r\n                                </Typography>\r\n                            )}\r\n                        {getCookie(\"thisapp\")==\"ok\" && !Auth.Check(this.props.isLogin) && this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap\r\n                                            onClick={() => {this.props.history.push(\"/\")}}\r\n                                >\r\n                                    {this.props.subTitle\r\n                                        ? this.props.subTitle\r\n                                        : this.props.title}\r\n                                </Typography>\r\n                            )}\r\n\r\n                        {!this.props.isMultiple &&\r\n                            this.props.withFile &&\r\n                            !pathHelper.isMobile() && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {this.props.selected[0].name}{\" \"}\r\n                                    {(isHomePage ||\r\n                                        pathHelper.isSharePage(\r\n                                            this.props.location.pathname\r\n                                        )) &&\r\n                                        \"(\" +\r\n                                            sizeToString(\r\n                                                this.props.selected[0].size\r\n                                            ) +\r\n                                            \")\"}\r\n                                </Typography>\r\n                            )}\r\n\r\n                        {this.props.selected.length > 1 &&\r\n                            !pathHelper.isMobile() && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {this.props.selected.length}个对象\r\n                                </Typography>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && <SezrchBar />}\r\n                        <div className={classes.grow} />\r\n                        {(this.props.selected.length > 1 ||\r\n                            (!this.props.isMultiple && this.props.withFile)) &&\r\n                            !isHomePage &&\r\n                            !pathHelper.isSharePage(\r\n                                this.props.location.pathname\r\n                            ) &&\r\n                            Auth.Check(this.props.isLogin) &&\r\n                            !checkGetParameters(\"share\") && (\r\n                                <div className={classes.sectionForFile}>\r\n                                    <Tooltip title=\"保存\">\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            onClick={() =>\r\n                                                this.props.saveFile()\r\n                                            }\r\n                                        >\r\n                                            <SaveIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </div>\r\n                            )}\r\n                        {(this.props.selected.length > 1 ||\r\n                            (!this.props.isMultiple && this.props.withFile)) &&\r\n                            (isHomePage || isSharePage) && (\r\n                                <div className={classes.sectionForFile}>\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFile &&\r\n                                        isPreviewable(\r\n                                            this.props.selected[0].name\r\n                                        ) && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFile &&\r\n                                                    isPreviewable(\r\n                                                        this.props.selected[0]\r\n                                                            .name\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"打开\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openPreview()\r\n                                                        }\r\n                                                    >\r\n                                                        <OpenIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFile && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFile\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"下载\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.openDownload()\r\n                                                        }\r\n                                                    >\r\n                                                        <DownloadIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {(this.props.isMultiple ||\r\n                                        this.props.withFolder) &&\r\n                                        user.group.allowArchiveDownload && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    (this.props.isMultiple ||\r\n                                                        this.props\r\n                                                            .withFolder) &&\r\n                                                    user.group\r\n                                                        .allowArchiveDownload\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"打包下载\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.archiveDownload()\r\n                                                        }\r\n                                                    >\r\n                                                        <DownloadIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFolder && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFolder\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"进入目录\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.navigateTo(\r\n                                                                this.props\r\n                                                                    .path ===\r\n                                                                    \"/\"\r\n                                                                    ? this.props\r\n                                                                          .path +\r\n                                                                          this\r\n                                                                              .props\r\n                                                                              .selected[0]\r\n                                                                              .name\r\n                                                                    : this.props\r\n                                                                          .path +\r\n                                                                          \"/\" +\r\n                                                                          this\r\n                                                                              .props\r\n                                                                              .selected[0]\r\n                                                                              .name\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <OpenFolderIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple && !isSharePage && (\r\n                                        <Grow in={!this.props.isMultiple}>\r\n                                            <Tooltip title=\"外链\">\r\n                                                <IconButton\r\n                                                    color=\"inherit\"\r\n                                                    onClick={() =>\r\n                                                        this.props.openGetSourceDialog()\r\n                                                    }\r\n                                                >\r\n                                                    <LinkIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Grow>\r\n                                    )}\r\n                                    {!this.props.isMultiple &&\r\n                                        !pathHelper.isMobile() &&\r\n                                        !isSharePage && (\r\n                                            <Grow in={!this.props.isMultiple}>\r\n                                                <Tooltip title=\"分享\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openShareDialog()\r\n                                                        }\r\n                                                    >\r\n                                                        <ShareIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple && !isSharePage && (\r\n                                        <Grow in={!this.props.isMultiple}>\r\n                                            <Tooltip title=\"重命名\">\r\n                                                <IconButton\r\n                                                    color=\"inherit\"\r\n                                                    onClick={() =>\r\n                                                        this.props.openRenameDialog()\r\n                                                    }\r\n                                                >\r\n                                                    <RenameIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Grow>\r\n                                    )}\r\n                                    {!isSharePage && (\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                            {!pathHelper.isMobile() && (\r\n                                                <Grow\r\n                                                    in={\r\n                                                        this.props.selected\r\n                                                            .length !== 0 &&\r\n                                                        !pathHelper.isMobile()\r\n                                                    }\r\n                                                >\r\n                                                    <Tooltip title=\"移动\">\r\n                                                        <IconButton\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() =>\r\n                                                                this.props.openMoveDialog()\r\n                                                            }\r\n                                                        >\r\n                                                            <MoveIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grow>\r\n                                            )}\r\n\r\n                                            <Grow\r\n                                                in={\r\n                                                    this.props.selected\r\n                                                        .length !== 0\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"删除\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openRemoveDialog()\r\n                                                        }\r\n                                                    >\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n\r\n                                            {pathHelper.isMobile() && (\r\n                                                <Grow\r\n                                                    in={\r\n                                                        this.props.selected\r\n                                                            .length !== 0 &&\r\n                                                        pathHelper.isMobile()\r\n                                                    }\r\n                                                >\r\n                                                    <Tooltip title=\"更多操作\">\r\n                                                        <IconButton\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() =>\r\n                                                                this.props.changeContextMenu(\r\n                                                                    \"file\",\r\n                                                                    true\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <MoreHoriz />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grow>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && <UserAvatar />}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(!this.props.isMultiple && this.props.withFile) &&\r\n                            isHomePage &&\r\n                            pathHelper.isMobile() && <SubActions inherit />}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {this.loadUploader()}\r\n\r\n                <Hidden smUp implementation=\"css\">\r\n                    <SwipeableDrawer\r\n                        container={this.props.container}\r\n                        variant=\"temporary\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        anchor=\"left\"\r\n                        open={this.state.mobileOpen}\r\n                        onClose={this.handleDrawerToggle}\r\n                        onOpen={() =>\r\n                            this.setState(() => ({ mobileOpen: true }))\r\n                        }\r\n                        disableDiscovery={iOS}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </SwipeableDrawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaperDesktop,\r\n                        }}\r\n                        className={classNames(classes.drawer, {\r\n                            [classes.drawerOpen]: this.props.desktopOpen,\r\n                            [classes.drawerClose]: !this.props.desktopOpen,\r\n                        })}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.props.desktopOpen}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nNavbarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Navbar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMyFile } from \"../../actions\";\r\n\r\nimport {\r\n    withStyles,\r\n    InputBase,\r\n    Popper,\r\n    Fade,\r\n    Paper,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { HotKeys, configure } from \"react-hotkeys\";\r\n\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\n\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchMyFile: (keywords) => {\r\n            dispatch(searchMyFile(keywords));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    search: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(7.2),\r\n            width: \"auto\",\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(9),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\",\r\n        width: \"100%\",\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(7),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 200,\r\n            \"&:focus\": {\r\n                width: 300,\r\n            },\r\n        },\r\n    },\r\n    suggestBox: {\r\n        zIndex: \"9999\",\r\n        width: 364,\r\n    },\r\n});\r\n\r\nconst keyMap = {\r\n    SEARCH: \"enter\",\r\n};\r\n\r\nclass SearchBarCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            input: \"\",\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        SEARCH: (e) => {\r\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n                this.searchMyFile();\r\n            } else {\r\n                this.searchShare();\r\n            }\r\n            e.target.blur();\r\n        },\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const { currentTarget } = event;\r\n        this.input = event.target.value;\r\n        this.setState({\r\n            anchorEl: currentTarget,\r\n            input: event.target.value,\r\n        });\r\n    };\r\n\r\n    cancelSuggest = () => {\r\n        this.setState({\r\n            input: \"\",\r\n        });\r\n    };\r\n\r\n    searchMyFile = () => {\r\n        this.props.searchMyFile(\"keywords/\" + this.input);\r\n    };\r\n\r\n    searchShare = () => {\r\n        this.props.history.push(\r\n            \"/search?keywords=\" + encodeURIComponent(this.input)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl } = this.state;\r\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n\r\n        return (\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\r\n                    <InputBase\r\n                        placeholder=\"搜索...\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                        onBlur={this.cancelSuggest}\r\n                        value={this.state.input}\r\n                    />\r\n                </HotKeys>\r\n                <Popper\r\n                    id={id}\r\n                    open={this.state.input !== \"\"}\r\n                    anchorEl={anchorEl}\r\n                    className={classes.suggestBox}\r\n                    transition\r\n                >\r\n                    {({ TransitionProps }) => (\r\n                        <Fade {...TransitionProps} timeout={350}>\r\n                            <Paper square={true}>\r\n                                {isHomePage && (\r\n                                    <MenuItem onClick={this.searchMyFile}>\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <FileIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            classes={{\r\n                                                primary: classes.primary,\r\n                                            }}\r\n                                            primary={\r\n                                                <Typography noWrap>\r\n                                                    在我的文件中搜索{\" \"}\r\n                                                    <strong>\r\n                                                        {this.state.input}\r\n                                                    </strong>\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                                <MenuItem onClick={this.searchShare}>\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <ShareIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        classes={{ primary: classes.primary }}\r\n                                        primary={\r\n                                            <Typography noWrap>\r\n                                                在全站分享中搜索{\" \"}\r\n                                                <strong>\r\n                                                    {this.state.input}\r\n                                                </strong>\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </MenuItem>\r\n                            </Paper>\r\n                        </Fade>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SearchBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport { sizeToString } from \"../../utils\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\n\r\nimport {\r\n    withStyles,\r\n    LinearProgress,\r\n    Typography,\r\n    Divider,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        refresh: state.viewUpdate.storageRefresh,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    iconFix: {\r\n        marginLeft: \"32px\",\r\n        marginRight: \"17px\",\r\n        color: theme.palette.text.secondary,\r\n        marginTop: \"2px\",\r\n    },\r\n    textFix: {\r\n        padding: \" 0 0 0 16px\",\r\n    },\r\n    storageContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"11px\",\r\n    },\r\n    detail: {\r\n        width: \"100%\",\r\n        marginRight: \"35px\",\r\n    },\r\n    info: {\r\n        width: \"131px\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"162px\",\r\n        },\r\n        marginTop: \"5px\",\r\n    },\r\n    bar: {\r\n        marginTop: \"5px\",\r\n    },\r\n    stickFooter: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass StorageBarCompoment extends Component {\r\n    state = {\r\n        percent: 0,\r\n        used: null,\r\n        total: null,\r\n        showExpand: false,\r\n    };\r\n\r\n    firstLoad = true;\r\n\r\n    componentDidMount = () => {\r\n        if (this.firstLoad && this.props.isLogin) {\r\n            this.firstLoad = !this.firstLoad;\r\n            this.updateStatus();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.firstLoad = false;\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (\r\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\r\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\r\n        ) {\r\n            this.updateStatus();\r\n        }\r\n    };\r\n\r\n    updateStatus = () => {\r\n        let percent = 0;\r\n        API.get(\"/user/storage\")\r\n            .then((response) => {\r\n                if (response.data.used / response.data.total >= 1) {\r\n                    percent = 100;\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\r\n                        \"warning\"\r\n                    );\r\n                } else {\r\n                    percent = (response.data.used / response.data.total) * 100;\r\n                }\r\n                this.setState({\r\n                    percent: percent,\r\n                    used: sizeToString(response.data.used),\r\n                    total: sizeToString(response.data.total),\r\n                });\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .catch(() => {});\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div\r\n                onMouseEnter={() => this.setState({ showExpand: true })}\r\n                onMouseLeave={() => this.setState({ showExpand: false })}\r\n                className={classes.stickFooter}\r\n            >\r\n                <Divider />\r\n                <ButtonBase onClick={() => this.props.history.push(\"/quota\")}>\r\n                    <div className={classes.storageContainer}>\r\n                        <StorageIcon className={classes.iconFix} />\r\n                        <div className={classes.detail}>\r\n                            存储空间{\"   \"}\r\n                            {this.state.showExpand && (\r\n                                <Link href={\"/buy\"} color={\"secondary\"}>\r\n                                    扩容\r\n                                </Link>\r\n                            )}\r\n                            <LinearProgress\r\n                                className={classes.bar}\r\n                                color=\"secondary\"\r\n                                variant=\"determinate\"\r\n                                value={this.state.percent}\r\n                            />\r\n                            <div className={classes.info}>\r\n                                <Tooltip\r\n                                    title={\r\n                                        \"已使用 \" +\r\n                                        (this.state.used === null\r\n                                            ? \" -- \"\r\n                                            : this.state.used) +\r\n                                        \", 共 \" +\r\n                                        (this.state.total === null\r\n                                            ? \" -- \"\r\n                                            : this.state.total)\r\n                                    }\r\n                                    placement=\"top\"\r\n                                >\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        noWrap\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.used === null\r\n                                            ? \" -- \"\r\n                                            : this.state.used}\r\n                                        {\" / \"}\r\n                                        {this.state.total === null\r\n                                            ? \" -- \"\r\n                                            : this.state.total}\r\n                                    </Typography>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStorageBarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StorageBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\r\n\r\nexport default StorageBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserPopover } from \"../../actions\";\r\nimport { withStyles, Typography } from \"@material-ui/core\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    userNav: {\r\n        height: \"170px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: \"20px 20px 2em\",\r\n        backgroundImage:\r\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\r\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\r\n        backgroundSize: \"cover\",\r\n    },\r\n    avatar: {\r\n        display: \"block\",\r\n        width: \"70px\",\r\n        height: \"70px\",\r\n        border: \" 2px solid #fff\",\r\n        borderRadius: \"50%\",\r\n        overflow: \"hidden\",\r\n        boxShadow:\r\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\r\n    },\r\n    avatarImg: {\r\n        width: \"66px\",\r\n        height: \"66px\",\r\n    },\r\n    nickName: {\r\n        color: \"#fff\",\r\n        marginLeft: \"10px\",\r\n        marginTop: \"15px\",\r\n        fontSize: \"17px\",\r\n    },\r\n    flexAvatar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"end\",\r\n    },\r\n    groupName: {\r\n        marginLeft: \"10px\",\r\n        color: \"#ffffff\",\r\n        opacity: \"0.54\",\r\n    },\r\n    storageCircle: {\r\n        width: \"200px\",\r\n    },\r\n});\r\n\r\nclass UserInfoCompoment extends Component {\r\n    showUserInfo = (e) => {\r\n        this.props.setUserPopover(e.currentTarget);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isLogin = Auth.Check(this.props.isLogin);\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n\r\n        return (\r\n            <div className={classes.userNav}>\r\n                <div className={classes.flexAvatar}>\r\n                    {/* eslint-disable-next-line */}\r\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\r\n                        {isLogin && (\r\n                            <Avatar\r\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\r\n                                className={classes.avatarImg}\r\n                            />\r\n                        )}\r\n                        {!isLogin && (\r\n                            <Avatar\r\n                                src={\"/api/v3/user/avatar/0/l\"}\r\n                                className={classes.avatarImg}\r\n                            />\r\n                        )}\r\n                    </a>\r\n                    <DarkModeSwitcher position=\"left\" />\r\n                </div>\r\n                <div className={classes.storageCircle}>\r\n                    <Typography\r\n                        className={classes.nickName}\r\n                        component=\"h2\"\r\n                        noWrap\r\n                    >\r\n                        {isLogin ? user.nickname : \"未登录\"}\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.groupName}\r\n                        component=\"h2\"\r\n                        color=\"textSecondary\"\r\n                        noWrap\r\n                    >\r\n                        {isLogin ? user.group.name : \"游客\"}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserInfoCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserInfo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(UserInfoCompoment));\r\n\r\nexport default UserInfo;\r\n","import React, { useCallback, useState, Suspense } from \"react\";\r\nimport {\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport FolderShared from \"@material-ui/icons/FolderShared\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\r\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\r\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\r\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    Circle,\r\n    CircleOutline,\r\n    Heart,\r\n    HeartOutline,\r\n    Hexagon,\r\n    HexagonOutline,\r\n    Hexagram,\r\n    HexagramOutline,\r\n    Rhombus,\r\n    RhombusOutline,\r\n    Square,\r\n    SquareOutline,\r\n    Triangle,\r\n    TriangleOutline,\r\n    FolderHeartOutline,\r\n    TagPlus,\r\n} from \"mdi-material-ui\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": { margin: 0 },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        display: \"none\",\r\n        transition: \".15s all ease-in-out\",\r\n    },\r\n    expanded: {\r\n        display: \"block\",\r\n        transform: \"rotate(90deg)\",\r\n    },\r\n    iconFix: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    hiddenButton: {\r\n        display: \"none\",\r\n    },\r\n    subMenu: {\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    overFlow: {\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n}));\r\n\r\nconst icons = {\r\n    Circle: Circle,\r\n    CircleOutline: CircleOutline,\r\n    Heart: Heart,\r\n    HeartOutline: HeartOutline,\r\n    Hexagon: Hexagon,\r\n    HexagonOutline: HexagonOutline,\r\n    Hexagram: Hexagram,\r\n    HexagramOutline: HexagramOutline,\r\n    Rhombus: Rhombus,\r\n    RhombusOutline: RhombusOutline,\r\n    Square: Square,\r\n    SquareOutline: SquareOutline,\r\n    Triangle: Triangle,\r\n    TriangleOutline: TriangleOutline,\r\n    FolderHeartOutline: FolderHeartOutline,\r\n};\r\n\r\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\r\n\r\nexport default function FileTag() {\r\n    const classes = useStyles();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const isHomePage = pathHelper.isHomePage(location.pathname);\r\n\r\n    const [tagOpen, setTagOpen] = useState(true);\r\n    const [addTagModal, setAddTagModal] = useState(false);\r\n    const [tagHover, setTagHover] = useState(null);\r\n    const [tags, setTags] = useState(\r\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const SearchMyFile = useCallback((k) => dispatch(searchMyFile(k)), [\r\n        dispatch,\r\n    ]);\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const getIcon = (icon, color) => {\r\n        if (icons[icon]) {\r\n            const IconComponent = icons[icon];\r\n            return (\r\n                <IconComponent\r\n                    className={[classes.iconFix]}\r\n                    style={\r\n                        color\r\n                            ? {\r\n                                  color: color,\r\n                              }\r\n                            : {}\r\n                    }\r\n                />\r\n            );\r\n        }\r\n        return <Circle className={[classes.iconFix]} />;\r\n    };\r\n\r\n    const submitSuccess = (tag) => {\r\n        const newTags = [...tags, tag];\r\n        setTags(newTags);\r\n        const user = Auth.GetUser();\r\n        user.tags = newTags;\r\n        Auth.SetUser(user);\r\n    };\r\n\r\n    const submitDelete = (id) => {\r\n        API.delete(\"/tag/\" + id)\r\n            .then(() => {\r\n                const newTags = tags.filter((v) => {\r\n                    return v.id !== id;\r\n                });\r\n                setTags(newTags);\r\n                const user = Auth.GetUser();\r\n                user.tags = newTags;\r\n                Auth.SetUser(user);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={\"\"}>\r\n                <AddTag\r\n                    onSuccess={submitSuccess}\r\n                    open={addTagModal}\r\n                    onClose={() => setAddTagModal(false)}\r\n                />\r\n            </Suspense>\r\n            <ExpansionPanel\r\n                square\r\n                expanded={tagOpen && isHomePage}\r\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key=\"我的文件\"\r\n                        onClick={() =>\r\n                            !isHomePage && history.push(\"/home?path=%2F\")\r\n                        }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <KeyboardArrowRight\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]:\r\n                                            tagOpen && isHomePage,\r\n                                        [classes.iconFix]: true,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                            {!(tagOpen && isHomePage) && (\r\n                                <FolderShared className={classes.iconFix} />\r\n                            )}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"我的文件\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails>\r\n                    <List onMouseLeave={() => setTagHover(null)}>\r\n                        <ListItem\r\n                            button\r\n                            id=\"pickfiles\"\r\n                            className={classes.hiddenButton}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <UploadIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            id=\"pickfolder\"\r\n                            className={classes.hiddenButton}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <UploadIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText />\r\n                        </ListItem>\r\n                        {[\r\n                            {\r\n                                key: \"视频\",\r\n                                id: \"video\",\r\n                                icon: (\r\n                                    <VideoIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconVideo,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"图片\",\r\n                                id: \"image\",\r\n                                icon: (\r\n                                    <ImageIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconImg,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"音频\",\r\n                                id: \"audio\",\r\n                                icon: (\r\n                                    <MusicIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconAudio,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"文档\",\r\n                                id: \"doc\",\r\n                                icon: (\r\n                                    <DocIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconDoc,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                        ].map((v) => (\r\n                            <ListItem\r\n                                button\r\n                                key={v.key}\r\n                                onClick={() => SearchMyFile(v.id + \"/internal\")}\r\n                            >\r\n                                <ListItemIcon className={classes.subMenu}>\r\n                                    {v.icon}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={v.key} />\r\n                            </ListItem>\r\n                        ))}\r\n                        {tags.map((v) => (\r\n                            <ListItem\r\n                                button\r\n                                key={v.id}\r\n                                onMouseEnter={() => setTagHover(v.id)}\r\n                                onClick={() => {\r\n                                    if (v.type === 0) {\r\n                                        SearchMyFile(\"tag/\" + v.id);\r\n                                    } else {\r\n                                        NavigateTo(v.expression);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <ListItemIcon className={classes.subMenu}>\r\n                                    {getIcon(\r\n                                        v.type === 0\r\n                                            ? v.icon\r\n                                            : \"FolderHeartOutline\",\r\n                                        v.type === 0 ? v.color : null\r\n                                    )}\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    className={classes.overFlow}\r\n                                    primary={v.name}\r\n                                />\r\n\r\n                                {tagHover === v.id && (\r\n                                    <ListItemSecondaryAction\r\n                                        onClick={() => submitDelete(v.id)}\r\n                                    >\r\n                                        <IconButton\r\n                                            size={\"small\"}\r\n                                            edge=\"end\"\r\n                                            aria-label=\"delete\"\r\n                                        >\r\n                                            <Clear />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                )}\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                        <ListItem button onClick={() => setAddTagModal(true)}>\r\n                            <ListItemIcon className={classes.subMenu}>\r\n                                <TagPlus className={classes.iconFix} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"添加标签...\"} />\r\n                        </ListItem>\r\n                    </List>{\" \"}\r\n                    <Divider />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </>\r\n    );\r\n}\r\n","export const imgPreviewSuffix = [\r\n    \"bmp\",\r\n    \"png\",\r\n    \"gif\",\r\n    \"jpg\",\r\n    \"jpeg\",\r\n    \"svg\",\r\n    \"webp\",\r\n];\r\nexport const msDocPreviewSuffix = [\r\n    \"ppt\",\r\n    \"pptx\",\r\n    \"pps\",\r\n    \"doc\",\r\n    \"docx\",\r\n    \"xlsx\",\r\n    \"xls\",\r\n];\r\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\"];\r\n//export const audioPreviewSuffix = [];\r\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\"];\r\nexport const pdfPreviewSuffix = [\"pdf\"];\r\nexport const editSuffix = [\"md\", \"txt\"];\r\nexport const codePreviewSuffix = {\r\n    json: \"json\",\r\n    php: \"php\",\r\n    py: \"python\",\r\n    bat: \"bat\",\r\n    cpp: \"cpp\",\r\n    c: \"cpp\",\r\n    h: \"cpp\",\r\n    cs: \"csharp\",\r\n    css: \"css\",\r\n    dockerfile: \"dockerfile\",\r\n    go: \"go\",\r\n    html: \"html\",\r\n    ini: \"ini\",\r\n    java: \"java\",\r\n    js: \"javascript\",\r\n    jsx: \"javascript\",\r\n    less: \"less\",\r\n    lua: \"lua\",\r\n    sh: \"shell\",\r\n    sql: \"sql\",\r\n    xml: \"xml\",\r\n    yaml: \"yaml\",\r\n};\r\nexport const mediaType = {\r\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\"],\r\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\r\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\r\n    pdf: [\"pdf\"],\r\n    word: [\"doc\", \"docx\"],\r\n    ppt: [\"ppt\", \"pptx\"],\r\n    excel: [\"xls\", \"xlsx\", \"csv\"],\r\n    text: [\"txt\", \"md\", \"html\"],\r\n    torrent: [\"torrent\"],\r\n    zip: [\"zip\", \"gz\", \"tar\", \"rar\", \"7z\"],\r\n    excute: [\"exe\"],\r\n    android: [\"apk\"],\r\n    php: [\"php\"],\r\n    go: [\"go\"],\r\n    python: [\"py\"],\r\n    cpp: [\"cpp\"],\r\n    c: [\"c\"],\r\n    js: [\"js\", \"jsx\"],\r\n};\r\nexport const policyTypeMap = {\r\n    local: \"本机\",\r\n    remote: \"从机\",\r\n    qiniu: \"七牛\",\r\n    upyun: \"又拍云\",\r\n    oss: \"阿里云 OSS\",\r\n    cos: \"腾讯云\",\r\n    onedrive: \"OneDrive\",\r\n    s3: \"Amazon S3\",\r\n};\r\nexport const isPreviewable = (name) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"img\";\r\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"msDoc\";\r\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"audio\";\r\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"video\";\r\n    } else if (editSuffix.indexOf(suffix) !== -1) {\r\n        return \"edit\";\r\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"pdf\";\r\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\r\n        return \"code\";\r\n    }\r\n    return false;\r\n};\r\nexport const isTorrent = (name) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const isCompressFile = (name) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    return suffix === \"zip\";\r\n};\r\n\r\nconst taskStatus = [\"排队中\", \"处理中\", \"失败\", \"取消\", \"已完成\"];\r\nconst taskType = [\"压缩\", \"解压缩\", \"文件中转\", \"导入外部目录\", \"存储策略转移\"];\r\nconst taskProgress = [\r\n    \"等待中\",\r\n    \"压缩中\",\r\n    \"解压缩中\",\r\n    \"下载中\",\r\n    \"转存中\",\r\n    \"索引中\",\r\n    \"插入中\",\r\n];\r\n\r\nexport const getTaskStatus = (status) => {\r\n    return taskStatus[status];\r\n};\r\n\r\nexport const getTaskType = (status) => {\r\n    return taskType[status];\r\n};\r\n\r\nexport const getTaskProgress = (type, status) => {\r\n    if (type === 2) {\r\n        return \"已完成 \" + (status + 1) + \" 个文件\";\r\n    }\r\n    return taskProgress[status];\r\n};\r\n\r\nexport const reportReasons = [\r\n    \"色情信息\",\r\n    \"包含病毒\",\r\n    \"侵权\",\r\n    \"不恰当的言论\",\r\n    \"其他\",\r\n];\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport { showImgPreivew } from \"../../actions/index\";\r\nimport { imgPreviewSuffix } from \"../../config\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\nimport { PhotoSlider } from \"react-photo-view\";\r\nimport \"react-photo-view/dist/index.css\";\r\nimport * as explorer from \"../../redux/explorer/reducer\";\r\n\r\nconst styles = () => ({});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        first: state.explorer.imgPreview.first,\r\n        other: state.explorer.imgPreview.other,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n    };\r\n};\r\n\r\nclass ImagPreviewComponent extends Component {\r\n    state = {\r\n        items: [],\r\n        photoIndex: 0,\r\n        isOpen: false,\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        const items = [];\r\n        let firstOne = 0;\r\n        if (nextProps.first.id !== \"\") {\r\n            if (\r\n                pathHelper.isSharePage(this.props.location.pathname) &&\r\n                !nextProps.first.path\r\n            ) {\r\n                const newImg = {\r\n                    intro: nextProps.first.name,\r\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\r\n                };\r\n                firstOne = 0;\r\n                items.push(newImg);\r\n                this.setState({\r\n                    photoIndex: firstOne,\r\n                    items: items,\r\n                    isOpen: true,\r\n                });\r\n                return;\r\n            }\r\n            // eslint-disable-next-line\r\n            nextProps.other.map((value) => {\r\n                const fileType = value.name.split(\".\").pop().toLowerCase();\r\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\r\n                    let src = \"\";\r\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n                        src = baseURL + \"/share/preview/\" + value.key;\r\n                        src =\r\n                            src +\r\n                            \"?path=\" +\r\n                            encodeURIComponent(\r\n                                value.path === \"/\"\r\n                                    ? value.path + value.name\r\n                                    : value.path + \"/\" + value.name\r\n                            );\r\n                    } else {\r\n                        src = baseURL + \"/file/preview/\" + value.id;\r\n                    }\r\n                    const newImg = {\r\n                        intro: value.name,\r\n                        src: src,\r\n                    };\r\n                    if (\r\n                        value.path === nextProps.first.path &&\r\n                        value.name === nextProps.first.name\r\n                    ) {\r\n                        firstOne = items.length;\r\n                    }\r\n                    items.push(newImg);\r\n                }\r\n            });\r\n            this.setState({\r\n                photoIndex: firstOne,\r\n                items: items,\r\n                isOpen: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { photoIndex, isOpen, items } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {isOpen && (\r\n                    <PhotoSlider\r\n                        images={items}\r\n                        visible={isOpen}\r\n                        onClose={() => this.handleClose()}\r\n                        index={photoIndex}\r\n                        onIndexChange={(n) =>\r\n                            this.setState({\r\n                                photoIndex: n,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImagPreviewComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ImgPreivew = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\r\n\r\nexport default ImgPreivew;\r\n","import dayjs from \"dayjs\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport Auth from \"../middleware/Auth\";\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nconst defaultTimeZone = \"Asia/Shanghai\";\r\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\r\nexport let timeZone = preferTimeZone ? preferTimeZone : defaultTimeZone;\r\n\r\nexport function refreshTimeZone() {\r\n    timeZone = Auth.GetPreference(\"timeZone\");\r\n    timeZone = timeZone ? timeZone : defaultTimeZone;\r\n}\r\n\r\nexport function formatLocalTime(time, format) {\r\n    return dayjs(time).tz(timeZone).format(format);\r\n}\r\n\r\nexport function validateTimeZone(name) {\r\n    try {\r\n        dayjs().tz(name).format();\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","export const isDefined = (val) => val != null;\r\nexport const isFunction = (val) => typeof val === \"function\";\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport const noop = () => {};\r\n\r\nexport const newScript = (src) => (cb) => {\r\n    const scriptElem = document.createElement(\"script\");\r\n    if (typeof src === \"object\") {\r\n        // copy every property to the element\r\n        for (const key in src) {\r\n            if (Object.prototype.hasOwnProperty.call(src, key)) {\r\n                scriptElem[key] = src[key];\r\n            }\r\n        }\r\n        src = src.src;\r\n    } else {\r\n        scriptElem.src = src;\r\n    }\r\n    scriptElem.addEventListener(\"load\", () => cb(null, src));\r\n    scriptElem.addEventListener(\"error\", () => cb(true, src));\r\n    document.body.appendChild(scriptElem);\r\n    return scriptElem;\r\n};\r\n\r\nconst keyIterator = (cols) => {\r\n    const keys = Object.keys(cols);\r\n    let i = -1;\r\n    return {\r\n        next() {\r\n            i++; // inc\r\n            if (i >= keys.length) return null;\r\n            else return keys[i];\r\n        },\r\n    };\r\n};\r\n\r\n// tasks should be a collection of thunk\r\nexport const parallel = (...tasks) => (each) => (cb) => {\r\n    let hasError = false;\r\n    let successed = 0;\r\n    const ret = [];\r\n    tasks = tasks.filter(isFunction);\r\n\r\n    if (tasks.length <= 0) cb(null);\r\n    else {\r\n        tasks.forEach((task, i) => {\r\n            const thunk = task;\r\n            thunk((err, ...args) => {\r\n                if (err) hasError = true;\r\n                else {\r\n                    // collect result\r\n                    if (args.length <= 1) args = args[0];\r\n\r\n                    ret[i] = args;\r\n                    successed++;\r\n                }\r\n\r\n                if (isFunction(each)) each.call(null, err, args, i);\r\n\r\n                if (hasError) cb(true);\r\n                else if (tasks.length === successed) {\r\n                    cb(null, ret);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// tasks should be a collection of thunk\r\nexport const series = (...tasks) => (each) => (cb) => {\r\n    tasks = tasks.filter((val) => val != null);\r\n    const nextKey = keyIterator(tasks);\r\n    const nextThunk = () => {\r\n        const key = nextKey.next();\r\n        let thunk = tasks[key];\r\n        // eslint-disable-next-line prefer-spread\r\n        if (Array.isArray(thunk))\r\n            // eslint-disable-next-line prefer-spread\r\n            thunk = parallel.apply(null, thunk).call(null, each);\r\n        return [+key, thunk]; // convert `key` to number\r\n    };\r\n    let key, thunk;\r\n    let next = nextThunk();\r\n    key = next[0];\r\n    thunk = next[1];\r\n    if (thunk == null) return cb(null);\r\n\r\n    const ret = [];\r\n    const iterator = () => {\r\n        thunk((err, ...args) => {\r\n            if (args.length <= 1) args = args[0];\r\n            if (isFunction(each)) each.call(null, err, args, key);\r\n\r\n            if (err) cb(err);\r\n            else {\r\n                // collect result\r\n                ret.push(args);\r\n\r\n                next = nextThunk();\r\n                key = next[0];\r\n                thunk = next[1];\r\n                if (thunk == null) return cb(null, ret);\r\n                // finished\r\n                else iterator();\r\n            }\r\n        });\r\n    };\r\n    iterator();\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport hoistStatics from \"hoist-non-react-statics\";\r\nimport { newScript, series, noop } from \"./utils\";\r\n\r\nconst loadedScript = [];\r\nconst pendingScripts = {};\r\nlet failedScript = [];\r\n\r\nconst addCache = (entry) => {\r\n    if (loadedScript.indexOf(entry) < 0) {\r\n        loadedScript.push(entry);\r\n    }\r\n};\r\n\r\nconst removeFailedScript = () => {\r\n    if (failedScript.length > 0) {\r\n        failedScript.forEach((script) => {\r\n            const node = document.querySelector(`script[src='${script}']`);\r\n            if (node != null) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        });\r\n\r\n        failedScript = [];\r\n    }\r\n};\r\n\r\nexport function startLoadingScripts(scripts, onComplete = noop) {\r\n    // sequence load\r\n    const loadNewScript = (script) => {\r\n        const src = typeof script === \"object\" ? script.src : script;\r\n        if (loadedScript.indexOf(src) < 0) {\r\n            return (taskComplete) => {\r\n                const callbacks = pendingScripts[src] || [];\r\n                callbacks.push(taskComplete);\r\n                pendingScripts[src] = callbacks;\r\n                if (callbacks.length === 1) {\r\n                    return newScript(script)((err) => {\r\n                        pendingScripts[src].forEach((cb) => cb(err, src));\r\n                        delete pendingScripts[src];\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    const tasks = scripts.map((src) => {\r\n        if (Array.isArray(src)) {\r\n            return src.map(loadNewScript);\r\n        } else return loadNewScript(src);\r\n    });\r\n\r\n    series(...tasks)((err, src) => {\r\n        if (err) {\r\n            failedScript.push(src);\r\n        } else {\r\n            if (Array.isArray(src)) {\r\n                src.forEach(addCache);\r\n            } else addCache(src);\r\n        }\r\n    })((err) => {\r\n        removeFailedScript();\r\n        onComplete(err);\r\n    });\r\n}\r\n\r\nconst uploaderLoader = () => (WrappedComponent) => {\r\n    class ScriptLoader extends Component {\r\n        static propTypes = {\r\n            onScriptLoaded: PropTypes.func,\r\n        };\r\n\r\n        static defaultProps = {\r\n            onScriptLoaded: noop,\r\n        };\r\n\r\n        constructor(props, context) {\r\n            super(props, context);\r\n\r\n            this.state = {\r\n                isScriptLoaded: false,\r\n                isScriptLoadSucceed: false,\r\n            };\r\n\r\n            this._isMounted = false;\r\n        }\r\n\r\n        componentDidMount() {\r\n            this._isMounted = true;\r\n            const scripts = [\r\n                [\"/static/js/uploader/moxie.js\"],\r\n                [\"/static/js/uploader/plupload.dev.js\"],\r\n                [\"/static/js/uploader/i18n/zh_CN.js\"],\r\n                [\"/static/js/uploader/ui.js\"],\r\n                [\"/static/js/uploader/uploader_\" + window.policyType + \".js\"],\r\n            ];\r\n            startLoadingScripts(scripts, (err) => {\r\n                if (this._isMounted) {\r\n                    this.setState(\r\n                        {\r\n                            isScriptLoaded: true,\r\n                            isScriptLoadSucceed: !err,\r\n                        },\r\n                        () => {\r\n                            if (!err) {\r\n                                this.props.onScriptLoaded();\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this._isMounted = false;\r\n        }\r\n\r\n        getWrappedInstance() {\r\n            // eslint-disable-next-line react/no-string-refs\r\n            return this.refs.wrappedInstance;\r\n        }\r\n\r\n        render() {\r\n            const props = {\r\n                ...this.props,\r\n                ...this.state,\r\n                ref: \"wrappedInstance\",\r\n            };\r\n\r\n            return <WrappedComponent {...props} />;\r\n        }\r\n    }\r\n\r\n    return hoistStatics(ScriptLoader, WrappedComponent);\r\n};\r\n\r\nexport default uploaderLoader;\r\n","import React, { Component } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { isWidthDown } from \"@material-ui/core/withWidth\";\r\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\r\nimport {\r\n    withStyles,\r\n    Dialog,\r\n    ListItemText,\r\n    ListItem,\r\n    List,\r\n    Divider,\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    Slide,\r\n    ListItemSecondaryAction,\r\n    withWidth,\r\n    DialogContent,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport { withTheme } from \"@material-ui/core/styles\";\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    progressBar: {\r\n        marginTop: 5,\r\n    },\r\n    minHight: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            minWidth: 500,\r\n        },\r\n        padding: 0,\r\n    },\r\n    dialogContent: {\r\n        padding: 0,\r\n    },\r\n    successStatus: {\r\n        color: \"#4caf50\",\r\n    },\r\n    errorStatus: {\r\n        color: \"#ff5722\",\r\n        wordBreak: \"break-all\",\r\n    },\r\n    listAction: {\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n    },\r\n    delete: {\r\n        zIndex: 9,\r\n    },\r\n    progressContainer: {\r\n        position: \"relative\",\r\n    },\r\n    progressContent: {\r\n        position: \"relative\",\r\n        zIndex: 9,\r\n    },\r\n    progress: {\r\n        transition: \"width .4s linear\",\r\n        zIndex: 1,\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n    },\r\n    fileName: {\r\n        wordBreak: \"break-all\",\r\n    },\r\n});\r\nclass FileList extends Component {\r\n    state = {\r\n        open: false,\r\n        files: [],\r\n    };\r\n\r\n    //入队\r\n    enQueue(files) {\r\n        this.setState({\r\n            files: [...this.state.files, ...files],\r\n        });\r\n    }\r\n\r\n    deQueue(file) {\r\n        const filesNow = [...this.state.files];\r\n        const fileID = filesNow.findIndex((f) => {\r\n            return f.id === file.id;\r\n        });\r\n        if (fileID !== -1) {\r\n            filesNow.splice(fileID, 1);\r\n            this.setState({\r\n                files: filesNow,\r\n                open: filesNow.length !== 0,\r\n            });\r\n        }\r\n    }\r\n\r\n    updateStatus(file) {\r\n        const filesNow = [...this.state.files];\r\n        const fileID = filesNow.findIndex((f) => {\r\n            return f.id === file.id;\r\n        });\r\n        if (!file.errMsg || file.ignoreMsg) {\r\n            if (filesNow[fileID] && !filesNow[fileID].errMsg) {\r\n                filesNow[fileID] = file;\r\n                this.setState({\r\n                    files: filesNow,\r\n                });\r\n            }\r\n        } else {\r\n            file.ignoreMsg = true;\r\n        }\r\n    }\r\n\r\n    setComplete(file) {\r\n        const filesNow = [...this.state.files];\r\n        const fileID = filesNow.findIndex((f) => {\r\n            return f.id === file.id;\r\n        });\r\n        if (fileID !== -1) {\r\n            if (filesNow[fileID].status !== 4) {\r\n                filesNow[fileID].status = 5;\r\n                this.setState({\r\n                    files: filesNow,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setError(file, errMsg) {\r\n        const filesNow = [...this.state.files];\r\n        const fileID = filesNow.findIndex((f) => {\r\n            return f.id === file.id;\r\n        });\r\n        if (fileID !== -1) {\r\n            filesNow[fileID].status = 4;\r\n            filesNow[fileID].errMsg = errMsg;\r\n        } else {\r\n            file.status = 4;\r\n            file.errMsg = errMsg;\r\n            filesNow.push(file);\r\n        }\r\n        this.setState({\r\n            files: filesNow,\r\n        });\r\n    }\r\n\r\n    Transition(props) {\r\n        return <Slide direction=\"up\" {...props} />;\r\n    }\r\n    openFileList = () => {\r\n        if (!this.state.open) {\r\n            this.setState({ open: true });\r\n        }\r\n    };\r\n\r\n    cancelUpload = (file) => {\r\n        this.props.cancelUpload(file);\r\n        this.deQueue(file);\r\n    };\r\n\r\n    reQueue = (file) => {\r\n        this.props.reQueue(file);\r\n        this.deQueue(file);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    addNewFile = () => {\r\n        document.getElementsByClassName(\"uploadFileForm\")[0].click();\r\n    };\r\n\r\n    getProgressBackground = () => {\r\n        return this.props.theme.palette.type === \"light\"\r\n            ? lighten(this.props.theme.palette.primary.main, 0.8)\r\n            : darken(this.props.theme.palette.background.paper, 0.2);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { width } = this.props;\r\n\r\n        this.props.inRef({\r\n            openFileList: this.openFileList.bind(this),\r\n            enQueue: this.enQueue.bind(this),\r\n            updateStatus: this.updateStatus.bind(this),\r\n            setComplete: this.setComplete.bind(this),\r\n            setError: this.setError.bind(this),\r\n        });\r\n\r\n        return (\r\n            <Dialog\r\n                fullScreen={isWidthDown(\"sm\", width)}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                TransitionComponent={this.Transition}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={this.handleClose}\r\n                            aria-label=\"Close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            color=\"inherit\"\r\n                            className={classes.flex}\r\n                        >\r\n                            上传队列\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\" onClick={this.addNewFile}>\r\n                            <AddIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <DialogContent className={classes.dialogContent}>\r\n                    <List className={classes.minHight}>\r\n                        {this.state.files.map((item, i) => (\r\n                            <div key={i} className={classes.progressContainer}>\r\n                                {item.status === 2 && (\r\n                                    <div\r\n                                        style={{\r\n                                            backgroundColor: this.getProgressBackground(),\r\n                                            width: item.percent + \"%\",\r\n                                        }}\r\n                                        className={classes.progress}\r\n                                    />\r\n                                )}\r\n                                <ListItem\r\n                                    className={classes.progressContent}\r\n                                    button\r\n                                >\r\n                                    <TypeIcon fileName={item.name} isUpload />\r\n                                    {item.status === 1 && (\r\n                                        <ListItemText\r\n                                            className={classes.listAction}\r\n                                            primary={\r\n                                                <span\r\n                                                    className={classes.fileName}\r\n                                                >\r\n                                                    {item.name}\r\n                                                </span>\r\n                                            }\r\n                                            secondary={<div>排队中...</div>}\r\n                                        />\r\n                                    )}\r\n                                    {item.status === 2 && (\r\n                                        <ListItemText\r\n                                            className={classes.listAction}\r\n                                            primary={\r\n                                                <span\r\n                                                    className={classes.fileName}\r\n                                                >\r\n                                                    {item.name}\r\n                                                </span>\r\n                                            }\r\n                                            secondary={\r\n                                                <div>\r\n                                                    {item.percent <= 99 && (\r\n                                                        <>\r\n                                                            {window.plupload\r\n                                                                .formatSize(\r\n                                                                    item.speed\r\n                                                                )\r\n                                                                .toUpperCase()}\r\n                                                            /s 已上传{\" \"}\r\n                                                            {window.plupload\r\n                                                                .formatSize(\r\n                                                                    item.loaded\r\n                                                                )\r\n                                                                .toUpperCase()}{\" \"}\r\n                                                            , 共{\" \"}\r\n                                                            {window.plupload\r\n                                                                .formatSize(\r\n                                                                    item.size\r\n                                                                )\r\n                                                                .toUpperCase()}{\" \"}\r\n                                                            - {item.percent}%{\" \"}\r\n                                                        </>\r\n                                                    )}\r\n                                                    {item.percent > 99 && (\r\n                                                        <div>处理中...</div>\r\n                                                    )}\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                    )}\r\n                                    {item.status === 3 && (\r\n                                        <ListItemText\r\n                                            className={classes.listAction}\r\n                                            primary={\r\n                                                <span\r\n                                                    className={classes.fileName}\r\n                                                >\r\n                                                    {item.name}\r\n                                                </span>\r\n                                            }\r\n                                            secondary={item.status}\r\n                                        />\r\n                                    )}\r\n                                    {item.status === 4 && (\r\n                                        <ListItemText\r\n                                            className={classes.listAction}\r\n                                            primary={\r\n                                                <span\r\n                                                    className={classes.fileName}\r\n                                                >\r\n                                                    {item.name}\r\n                                                </span>\r\n                                            }\r\n                                            secondary={\r\n                                                <div\r\n                                                    className={\r\n                                                        classes.errorStatus\r\n                                                    }\r\n                                                >\r\n                                                    {item.errMsg}\r\n                                                    <br />\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                    )}\r\n                                    {item.status === 5 && (\r\n                                        <ListItemText\r\n                                            className={classes.listAction}\r\n                                            primary={\r\n                                                <span\r\n                                                    className={classes.fileName}\r\n                                                >\r\n                                                    {item.name}\r\n                                                </span>\r\n                                            }\r\n                                            secondary={\r\n                                                <div\r\n                                                    className={\r\n                                                        classes.successStatus\r\n                                                    }\r\n                                                >\r\n                                                    已完成\r\n                                                    <br />\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                    )}\r\n                                    <ListItemSecondaryAction\r\n                                        className={classes.delete}\r\n                                    >\r\n                                        {item.status !== 4 && (\r\n                                            <IconButton\r\n                                                aria-label=\"Delete\"\r\n                                                onClick={() =>\r\n                                                    this.cancelUpload(item)\r\n                                                }\r\n                                            >\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        )}\r\n                                        {item.status === 4 && (\r\n                                            <Tooltip title={\"重试\"}>\r\n                                                <IconButton\r\n                                                    aria-label=\"Delete\"\r\n                                                    onClick={() =>\r\n                                                        this.reQueue(item)\r\n                                                    }\r\n                                                >\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        )}\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                    </List>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\nFileList.propTypes = {};\r\n\r\nexport default withStyles(styles)(withWidth()(withTheme(FileList)));\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { makeStyles, Badge } from \"@material-ui/core\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport {\r\n    openCreateFileDialog,\r\n    openCreateFolderDialog,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { FolderUpload, FilePlus } from \"mdi-material-ui\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n    badge: {\r\n        position: \"absolute\",\r\n        bottom: 26,\r\n        top: \"auto\",\r\n        zIndex: 9999,\r\n        right: 7,\r\n    },\r\n    \"@global\": {\r\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\r\n            width: 100,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UploadButton(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [queued, setQueued] = useState(5);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const OpenNewFolderDialog = useCallback(\r\n        () => dispatch(openCreateFolderDialog()),\r\n        [dispatch]\r\n    );\r\n    const OpenNewFileDialog = useCallback(\r\n        () => dispatch(openCreateFileDialog()),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setQueued(props.Queued);\r\n    }, [props.Queued]);\r\n\r\n    const openUpload = (id) => {\r\n        const uploadButton = document.getElementsByClassName(id)[0];\r\n        if (document.body.contains(uploadButton)) {\r\n            uploadButton.click();\r\n        } else {\r\n            ToggleSnackbar(\"top\", \"right\", \"上传组件还未加载完成\", \"warning\");\r\n        }\r\n    };\r\n    const uploadClicked = () => {\r\n        if (open) {\r\n            if (queued !== 0) {\r\n                props.openFileList();\r\n            } else {\r\n                openUpload(\"uploadFileForm\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <AutoHidden enable>\r\n            <Badge\r\n                badgeContent={queued}\r\n                classes={{\r\n                    badge: classes.badge, // class name, e.g. `root-x`\r\n                }}\r\n                className={classes.fab}\r\n                invisible={queued === 0}\r\n                color=\"primary\"\r\n            >\r\n                <Backdrop open={open && statusHelper.isMobile()} />\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial openIcon example\"\r\n                    hidden={false}\r\n                    tooltipTitle=\"上传文件\"\r\n                    icon={\r\n                        <SpeedDialIcon\r\n                            openIcon={\r\n                                !statusHelper.isMobile() && <PublishIcon />\r\n                            }\r\n                        />\r\n                    }\r\n                    onClose={handleClose}\r\n                    FabProps={{\r\n                        onClick: () =>\r\n                            !statusHelper.isMobile() && uploadClicked(),\r\n                        color: \"secondary\",\r\n                    }}\r\n                    onOpen={handleOpen}\r\n                    open={open}\r\n                >\r\n                    {statusHelper.isMobile() && (\r\n                        <SpeedDialAction\r\n                            key=\"UploadFile\"\r\n                            icon={<PublishIcon />}\r\n                            tooltipOpen\r\n                            tooltipTitle=\"上传文件\"\r\n                            onClick={() => uploadClicked()}\r\n                            title={\"上传文件\"}\r\n                        />\r\n                    )}\r\n                    {!statusHelper.isMobile() && (\r\n                        <SpeedDialAction\r\n                            key=\"UploadFolder\"\r\n                            icon={<FolderUpload />}\r\n                            tooltipOpen\r\n                            tooltipTitle=\"上传目录\"\r\n                            onClick={() => openUpload(\"uploadFolderForm\")}\r\n                            title={\"上传目录\"}\r\n                        />\r\n                    )}\r\n                    <SpeedDialAction\r\n                        key=\"NewFolder\"\r\n                        icon={<CreateNewFolderIcon />}\r\n                        tooltipOpen\r\n                        tooltipTitle=\"新建目录\"\r\n                        onClick={() => OpenNewFolderDialog()}\r\n                        title={\"新建目录\"}\r\n                    />\r\n                    <SpeedDialAction\r\n                        key=\"NewFile\"\r\n                        icon={<FilePlus />}\r\n                        tooltipOpen\r\n                        tooltipTitle=\"新建文件\"\r\n                        onClick={() => OpenNewFileDialog()}\r\n                        title={\"新建文件\"}\r\n                    />\r\n                </SpeedDial>\r\n            </Badge>\r\n        </AutoHidden>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport uploaderLoader from \"../../loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { refreshFileList, refreshStorage, toggleSnackbar } from \"../../actions\";\r\nimport FileList from \"./FileList.js\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport UploadButton from \"../Dial/Create.js\";\r\nimport { basename, pathJoin } from \"../../utils\";\r\n\r\nlet loaded = false;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        keywords: state.explorer.keywords,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        refreshStorage: () => {\r\n            dispatch(refreshStorage());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass UploaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            queued: 0,\r\n        };\r\n    }\r\n\r\n    setRef(val) {\r\n        window.fileList = val;\r\n    }\r\n\r\n    cancelUpload(file) {\r\n        this.uploader.removeFile(file);\r\n    }\r\n\r\n    reQueue = (file) => {\r\n        this.uploader.addFile(file.getSource());\r\n        this.props.toggleSnackbar(\r\n            \"top\",\r\n            \"right\",\r\n            \"文件已经重新加入上传队列\",\r\n            \"info\"\r\n        );\r\n    };\r\n\r\n    getChunkSize(policyType) {\r\n        if (policyType === \"qiniu\") {\r\n            return 4 * 1024 * 1024;\r\n        }\r\n        if (policyType === \"onedrive\") {\r\n            return 100 * 1024 * 1024;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    fileAdd = (up, files) => {\r\n        const path = window.currntPath ? window.currntPath : this.props.path;\r\n        if (\r\n            this.props.keywords === \"\" &&\r\n            window.location.pathname.toLowerCase().startsWith(\"/home\")\r\n        ) {\r\n            window.fileList[\"openFileList\"]();\r\n            const enqueFiles = files\r\n                // 不上传Mac下的布局文件 .DS_Store\r\n                .filter((file) => {\r\n                    const isDsStore = file.name.toLowerCase() === \".ds_store\";\r\n                    if (isDsStore) {\r\n                        up.removeFile(file);\r\n                    }\r\n                    return !isDsStore;\r\n                })\r\n                .map((file) => {\r\n                    const source = file.getSource();\r\n                    if (source.relativePath && source.relativePath !== \"\") {\r\n                        file.path = basename(\r\n                            pathJoin([path, source.relativePath])\r\n                        );\r\n                        window.pathCache[file.id] = basename(\r\n                            pathJoin([path, source.relativePath])\r\n                        );\r\n                    } else {\r\n                        window.pathCache[file.id] = path;\r\n                        file.path = path;\r\n                    }\r\n                    return file;\r\n                });\r\n            window.fileList[\"enQueue\"](enqueFiles);\r\n        } else {\r\n            window.plupload.each(files, (files) => {\r\n                up.removeFile(files);\r\n            });\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\r\n        if (isScriptLoaded && !this.props.isScriptLoaded) {\r\n            // load finished\r\n            if (isScriptLoadSucceed) {\r\n                if (loaded) {\r\n                    return;\r\n                }\r\n                loaded = true;\r\n                const user = Auth.GetUser();\r\n                this.uploader = window.Qiniu.uploader({\r\n                    runtimes: \"html5\",\r\n                    browse_button: [\"pickfiles\", \"pickfolder\"],\r\n                    container: \"container\",\r\n                    drop_element: \"container\",\r\n                    max_file_size:\r\n                        user.policy.maxSize === \"0.00mb\"\r\n                            ? 0\r\n                            : user.policy.maxSize,\r\n                    dragdrop: true,\r\n                    chunk_size: this.getChunkSize(user.policy.saveType),\r\n                    filters: {\r\n                        mime_types:\r\n                            user.policy.allowedType === null ||\r\n                            user.policy.allowedType.length === 0\r\n                                ? []\r\n                                : [\r\n                                      {\r\n                                          title: \"files\",\r\n                                          extensions: user.policy.allowedType.join(\r\n                                              \",\"\r\n                                          ),\r\n                                      },\r\n                                  ],\r\n                    },\r\n                    // iOS不能多选？\r\n                    multi_selection: true,\r\n                    uptoken_url: \"/api/v3/file/upload/credential\",\r\n                    uptoken: user.policy.saveType === \"local\" ? \"token\" : null,\r\n                    domain: \"s\",\r\n                    max_retries: 0,\r\n                    get_new_uptoken: true,\r\n                    auto_start: true,\r\n                    log_level: 5,\r\n                    init: {\r\n                        FilesAdded: this.fileAdd,\r\n\r\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                        BeforeUpload: function () {},\r\n                        QueueChanged: (up) => {\r\n                            this.setState({ queued: up.total.queued });\r\n                        },\r\n                        UploadProgress: (up, file) => {\r\n                            window.fileList[\"updateStatus\"](file);\r\n                        },\r\n                        UploadComplete: (up, file) => {\r\n                            if (file.length === 0) {\r\n                                return;\r\n                            }\r\n                            console.log(\r\n                                \"UploadComplete\",\r\n                                file[0].status,\r\n                                file[0]\r\n                            );\r\n                            for (let i = 0; i < file.length; i++) {\r\n                                if (file[i].status === 5) {\r\n                                    window.fileList[\"setComplete\"](file[i]);\r\n                                }\r\n                            }\r\n                            // 无异步操作的策略，直接刷新\r\n                            if (\r\n                                user.policy.saveType !== \"onedrive\" &&\r\n                                user.policy.saveType !== \"cos\"\r\n                            ) {\r\n                                this.props.refreshFileList();\r\n                                this.props.refreshStorage();\r\n                            }\r\n                        },\r\n                        Fresh: () => {\r\n                            this.props.refreshFileList();\r\n                            this.props.refreshStorage();\r\n                        },\r\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                        FileUploaded: function () {},\r\n                        Error: (up, err, errTip) => {\r\n                            window.fileList[\"openFileList\"]();\r\n                            window.fileList[\"setError\"](err.file, errTip);\r\n                        },\r\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                        FilesRemoved: () => {},\r\n                    },\r\n                });\r\n                // this.fileList[\"openFileList\"]();\r\n            } else this.onError();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    onError() {}\r\n\r\n    openFileList = () => {\r\n        window.fileList[\"openFileList\"]();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FileList\r\n                    inRef={this.setRef.bind(this)}\r\n                    cancelUpload={this.cancelUpload.bind(this)}\r\n                    reQueue={this.reQueue.bind(this)}\r\n                />\r\n                {this.props.keywords === \"\" && (\r\n                    <UploadButton\r\n                        Queued={this.state.queued}\r\n                        openFileList={this.openFileList}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Uploader = connect(mapStateToProps, mapDispatchToProps, null, {\r\n    forwardRef: true,\r\n})(uploaderLoader()(UploaderComponent));\r\n\r\nexport default Uploader;\r\n","import React from \"react\";\r\nimport { mediaType } from \"../../config\";\r\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\r\nimport VideoIcon from \"@material-ui/icons/Videocam\";\r\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\r\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport {\r\n    Android,\r\n    FileExcelBox,\r\n    FilePowerpointBox,\r\n    FileWordBox,\r\n    LanguageC,\r\n    LanguageCpp,\r\n    LanguageGo,\r\n    LanguageJavascript,\r\n    LanguagePhp,\r\n    LanguagePython,\r\n    MagnetOn,\r\n    ScriptText,\r\n    WindowRestore,\r\n    ZipBox,\r\n} from \"mdi-material-ui\";\r\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst icons = {\r\n    audio: {\r\n        color: \"#651fff\",\r\n        icon: AudioIcon,\r\n    },\r\n    video: {\r\n        color: \"#d50000\",\r\n        icon: VideoIcon,\r\n    },\r\n    image: {\r\n        color: \"#d32f2f\",\r\n        icon: ImageIcon,\r\n    },\r\n    pdf: {\r\n        color: \"#f44336\",\r\n        icon: PdfIcon,\r\n    },\r\n    word: {\r\n        color: \"#538ce5\",\r\n        icon: FileWordBox,\r\n    },\r\n    ppt: {\r\n        color: \"rgb(239, 99, 63)\",\r\n        icon: FilePowerpointBox,\r\n    },\r\n    excel: {\r\n        color: \"#4caf50\",\r\n        icon: FileExcelBox,\r\n    },\r\n    text: {\r\n        color: \"#607d8b\",\r\n        icon: ScriptText,\r\n    },\r\n    torrent: {\r\n        color: \"#5c6bc0\",\r\n        icon: MagnetOn,\r\n    },\r\n    zip: {\r\n        color: \"#f9a825\",\r\n        icon: ZipBox,\r\n    },\r\n    excute: {\r\n        color: \"#1a237e\",\r\n        icon: WindowRestore,\r\n    },\r\n    android: {\r\n        color: \"#8bc34a\",\r\n        icon: Android,\r\n    },\r\n    file: {\r\n        color: \"#607d8b\",\r\n        icon: FileShowIcon,\r\n    },\r\n    php: {\r\n        color: \"#777bb3\",\r\n        icon: LanguagePhp,\r\n    },\r\n    go: {\r\n        color: \"#16b3da\",\r\n        icon: LanguageGo,\r\n    },\r\n    python: {\r\n        color: \"#3776ab\",\r\n        icon: LanguagePython,\r\n    },\r\n    c: {\r\n        color: \"#a8b9cc\",\r\n        icon: LanguageC,\r\n    },\r\n    cpp: {\r\n        color: \"#004482\",\r\n        icon: LanguageCpp,\r\n    },\r\n    js: {\r\n        color: \"#f4d003\",\r\n        icon: LanguageJavascript,\r\n    },\r\n};\r\n\r\nconst getColor = (theme, color) =>\r\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\r\n\r\nlet color;\r\n\r\nconst TypeIcon = (props) => {\r\n    const theme = useTheme();\r\n\r\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\r\n    let fileType = \"file\";\r\n    Object.keys(mediaType).forEach((k) => {\r\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\r\n            fileType = k;\r\n        }\r\n    });\r\n    const IconComponent = icons[fileType].icon;\r\n    color = getColor(theme, icons[fileType].color);\r\n    if (props.getColorValue) {\r\n        props.getColorValue(color);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.isUpload && (\r\n                <Avatar\r\n                    className={props.className}\r\n                    style={{\r\n                        backgroundColor: color,\r\n                    }}\r\n                >\r\n                    <IconComponent\r\n                        className={props.iconClassName}\r\n                        style={{\r\n                            color: theme.palette.background.paper,\r\n                        }}\r\n                    />\r\n                </Avatar>\r\n            )}\r\n            {!props.isUpload && (\r\n                <IconComponent\r\n                    className={props.className}\r\n                    style={{\r\n                        color: color,\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypeIcon;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\n\r\nimport {\r\n    MenuList,\r\n    MenuItem,\r\n    IconButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    withStyles,\r\n    ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        keywords: state.explorer.keywords,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    iconWhite: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    selected: {\r\n        backgroundColor: theme.palette.primary.main + \"!important\",\r\n        \"& $primary, & $icon\": {\r\n            color: theme.palette.common.white,\r\n        },\r\n    },\r\n    primary: {},\r\n    icon: {},\r\n    buttonIcon: {},\r\n    selector: {\r\n        minWidth: \"300px\",\r\n    },\r\n    container: {\r\n        maxHeight: \"330px\",\r\n        overflowY: \" auto\",\r\n    },\r\n});\r\n\r\nclass PathSelectorCompoment extends Component {\r\n    state = {\r\n        presentPath: \"/\",\r\n        dirList: [],\r\n        selectedTarget: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const toBeLoad = this.props.presentPath;\r\n        this.enterFolder(this.props.keywords === \"\" ? toBeLoad : \"/\");\r\n    };\r\n\r\n    back = () => {\r\n        const paths = this.state.presentPath.split(\"/\");\r\n        paths.pop();\r\n        const toBeLoad = paths.join(\"/\");\r\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\r\n    };\r\n\r\n    enterFolder = (toBeLoad) => {\r\n        const thisurl = window.location.href;\r\n        const va = thisurl.split('/');\r\n        if (va[3]==\"s\") toBeLoad = \"/\";\r\n        API.get(\r\n            (this.props.api ? this.props.api : \"/directory\") +\r\n                encodeURIComponent(toBeLoad)\r\n        )\r\n            .then((response) => {\r\n                const dirList = response.data.objects.filter((x) => {\r\n                    return (\r\n                        x.type === \"dir\" &&\r\n                        this.props.selected.findIndex((value) => {\r\n                            return (\r\n                                value.name === x.name && value.path === x.path\r\n                            );\r\n                        }) === -1\r\n                    );\r\n                });\r\n                if (toBeLoad === \"/\") {\r\n                    dirList.unshift({ name: \"/\", path: \"\" });\r\n                }\r\n                this.setState({\r\n                    presentPath: toBeLoad,\r\n                    dirList: dirList,\r\n                    selectedTarget: null,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            });\r\n    };\r\n\r\n    handleSelect = (index) => {\r\n        this.setState({ selectedTarget: index });\r\n        this.props.onSelect(this.state.dirList[index]);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <MenuList className={classes.selector}>\r\n                    {this.state.presentPath !== \"/\" && (\r\n                        <MenuItem onClick={this.back}>\r\n                            <ListItemIcon>\r\n                                <UpIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"返回上一层\" />\r\n                        </MenuItem>\r\n                    )}\r\n                    {this.state.dirList.map((value, index) => (\r\n                        <MenuItem\r\n                            classes={{\r\n                                selected: classes.selected,\r\n                            }}\r\n                            key={index}\r\n                            selected={this.state.selectedTarget === index}\r\n                            onClick={() => this.handleSelect(index)}\r\n                        >\r\n                            <ListItemIcon className={classes.icon}>\r\n                                <FolderIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                classes={{ primary: classes.primary }}\r\n                                primary={value.name}\r\n                                primaryTypographyProps={{\r\n                                    style: { whiteSpace: \"normal\" },\r\n                                }}\r\n                            />\r\n                            {value.name !== \"/\" && (\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.buttonIcon}\r\n                                >\r\n                                    <IconButton\r\n                                        className={classNames({\r\n                                            [classes.iconWhite]:\r\n                                                this.state.selectedTarget ===\r\n                                                index,\r\n                                        })}\r\n                                        onClick={() =>\r\n                                            this.enterFolder(\r\n                                                value.path === \"/\"\r\n                                                    ? value.path + value.name\r\n                                                    : value.path +\r\n                                                          \"/\" +\r\n                                                          value.name\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <RightIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            )}\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPathSelectorCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    presentPath: PropTypes.string.isRequired,\r\n    selected: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(PathSelectorCompoment));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction AuthRoute({ children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                Auth.Check(rest.isLogin) ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\";\r\nimport { Facebook } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"80%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \" 50%\",\r\n        },\r\n\r\n        marginTop: 30,\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => {\r\n    return (\r\n        <Facebook\r\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n            className={props.className}\r\n        />\r\n    );\r\n};\r\n\r\nfunction PageLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageLoading;\r\n","import React from \"react\";\r\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        fontSize: \"160px\",\r\n    },\r\n    emptyContainer: {\r\n        bottom: \"0\",\r\n        height: \"300px\",\r\n        margin: \"50px auto\",\r\n        width: \"300px\",\r\n        color: lighten(theme.palette.text.disabled, 0.4),\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    emptyInfoBig: {\r\n        fontSize: \"25px\",\r\n        color: lighten(theme.palette.text.disabled, 0.4),\r\n    },\r\n    ads:{\r\n        width: '100%',\r\n        height: 90,\r\n        maxHeight: 90,\r\n        textAlign: \"center\",\r\n        marginTop: \"1.5rem\"\r\n    }\r\n}));\r\n\r\nexport default function Notice(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.emptyContainer}>\r\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\r\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\r\n            <div className={classes.ads}>\r\n                <a href={\"https://ask.bilnn.com/\"} target=\"_blank\" rel=\"noopener noreferrer\"><img src={\"https://img30.360buyimg.com/ddfilesass/jfs/t1/200482/12/2151/21063/6110957aEdce92772/60486672694033de.jpg\"} /></a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    setSiteConfig,\r\n    toggleSnackbar,\r\n    enableLoadUploader,\r\n    changeViewMethod,\r\n} from \"../actions/index\";\r\nimport { fixUrlHash } from \"../utils/index\";\r\nimport API from \"./Api\";\r\nimport Auth from \"./Auth\";\r\nimport pathHelper from \"../utils/page\";\r\n\r\nconst initUserConfig = (siteConfig) => {\r\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\r\n        const themes = JSON.parse(siteConfig.themes);\r\n        const user = siteConfig.user;\r\n        delete siteConfig.user;\r\n\r\n        //更换用户自定配色\r\n        if (\r\n            user[\"preferred_theme\"] !== \"\" &&\r\n            themes[user[\"preferred_theme\"]] !== undefined\r\n        ) {\r\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\r\n        }\r\n\r\n        // 更新登录态\r\n        Auth.authenticate(user);\r\n    }\r\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\r\n        Auth.SetUser(siteConfig.user);\r\n    }\r\n    return siteConfig;\r\n};\r\n\r\nexport const InitSiteConfig = (rawStore) => {\r\n    // 从缓存获取默认配置\r\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\r\n    if (configCache != null) {\r\n        rawStore.siteConfig = configCache;\r\n    }\r\n    // 检查是否有path参数\r\n    const url = new URL(window.location.href);\r\n    const c = url.searchParams.get(\"path\");\r\n    rawStore.navigator.path = c === null ? \"/\" : c;\r\n    // 初始化用户个性配置\r\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\r\n\r\n    // 更改站点标题\r\n    document.title = rawStore.siteConfig.title;\r\n    return rawStore;\r\n};\r\n\r\nexport function enableUploaderLoad() {\r\n    // 开启上传组件加载\r\n    const user = Auth.GetUser();\r\n    window.policyType = user !== null ? user.policy.saveType : \"local\";\r\n    window.uploadConfig = user !== null ? user.policy : {};\r\n    window.pathCache = [];\r\n}\r\n\r\nexport async function UpdateSiteConfig(store) {\r\n    API.get(\"/site/config\")\r\n        .then(function (response) {\r\n            const themes = JSON.parse(response.data.themes);\r\n            response.data.theme = themes[response.data.defaultTheme];\r\n            response.data = initUserConfig(response.data);\r\n            store.dispatch(setSiteConfig(response.data));\r\n            localStorage.setItem(\r\n                \"siteConfigCache\",\r\n                JSON.stringify(response.data)\r\n            );\r\n\r\n            // 偏爱的列表样式\r\n            const preferListMethod = Auth.GetPreference(\"view_method\");\r\n            if (preferListMethod) {\r\n                store.dispatch(changeViewMethod(preferListMethod));\r\n            } else {\r\n                if (pathHelper.isSharePage(window.location.pathname)) {\r\n                    store.dispatch(\r\n                        changeViewMethod(response.data.share_view_method)\r\n                    );\r\n                } else {\r\n                    store.dispatch(\r\n                        changeViewMethod(response.data.home_view_method)\r\n                    );\r\n                }\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            store.dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法加载站点配置：\" + error.message,\r\n                    \"error\"\r\n                )\r\n            );\r\n        })\r\n        .then(function () {\r\n            enableUploaderLoad(store);\r\n            store.dispatch(enableLoadUploader());\r\n        });\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { makeStyles, Link } from \"@material-ui/core\";\r\nimport pageHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    icp: {\r\n        padding: \"8px 24px\",\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n    },\r\n}));\r\n\r\nexport const ICPFooter = () => {\r\n    const siteICPId = useSelector((state) => state.siteConfig.siteICPId);\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [show, setShow] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // 只在分享和登录界面显示\r\n        const isSharePage = pageHelper.isSharePage(location.pathname);\r\n        const isLoginPage = pageHelper.isLoginPage(location.pathname);\r\n        setShow(siteICPId && (isSharePage || isLoginPage));\r\n    }, [siteICPId, location]);\r\n\r\n    if (!show) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <div className={classes.icp}>\r\n            {`备案号: `}\r\n            <Link\r\n                href=\"https://beian.miit.gov.cn/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                {siteICPId}\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst MyLoader = () => (\r\n    <ContentLoader\r\n        height={80}\r\n        width={200}\r\n        speed={2}\r\n        primaryColor=\"#f3f3f3\"\r\n        secondaryColor=\"#e4e4e4\"\r\n    >\r\n        <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\r\n    </ContentLoader>\r\n);\r\n\r\nfunction captchaPlacholder() {\r\n    return <MyLoader />;\r\n}\r\n\r\nexport default captchaPlacholder;\r\n","import React, {\r\n    forwardRef,\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../actions\";\r\nimport API from \"../middleware/Api\";\r\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\r\nimport Placeholder from \"../component/Placeholder/Captcha\";\r\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\r\n\r\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\r\n    { captchaRef, setLoading },\r\n    ref\r\n) {\r\n    const classes = useStyle();\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n    const [captchaData, setCaptchaData] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const refreshCaptcha = () => {\r\n        API.get(\"/site/captcha\")\r\n            .then((response) => {\r\n                setCaptchaData(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法加载验证码：\" + error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        ref.current = refreshCaptcha;\r\n        refreshCaptcha();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        captchaRef.current.captchaCode = captcha;\r\n    }, [captcha]);\r\n\r\n    return (\r\n        <div className={classes.captchaContainer}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel htmlFor=\"captcha\">验证码</InputLabel>\r\n                <Input\r\n                    name=\"captcha\"\r\n                    onChange={(e) => setCaptcha(e.target.value)}\r\n                    type=\"text\"\r\n                    id=\"captcha\"\r\n                    value={captcha}\r\n                    autoComplete\r\n                />\r\n            </FormControl>{\" \"}\r\n            <div>\r\n                {captchaData === null && (\r\n                    <div className={classes.captchaPlaceholder}>\r\n                        <Placeholder />\r\n                    </div>\r\n                )}\r\n                {captchaData !== null && (\r\n                    <img\r\n                        src={captchaData}\r\n                        alt=\"captcha\"\r\n                        onClick={refreshCaptcha}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: true,\r\n    });\r\n\r\n    const captchaParamsRef = useRef({\r\n        captchaCode: \"\",\r\n    });\r\n\r\n    const CaptchaRender = useCallback(\r\n        function Normal() {\r\n            return (\r\n                <NormalCaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    ref={captchaRefreshRef}\r\n                    setLoading={setLoading}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, captchaRefreshRef, setLoading]\r\n    );\r\n\r\n    return {\r\n        isValidate,\r\n        validate: defaultValidate,\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ReCAPTCHA extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleExpired = this.handleExpired.bind(this);\r\n        this.handleErrored = this.handleErrored.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\r\n    }\r\n\r\n    getValue() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            return this.props.grecaptcha.getResponse(this._widgetId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getWidgetId() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            return this._widgetId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    execute() {\r\n        const { grecaptcha } = this.props;\r\n\r\n        if (grecaptcha && this._widgetId !== undefined) {\r\n            return grecaptcha.execute(this._widgetId);\r\n        } else {\r\n            this._executeRequested = true;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            this.props.grecaptcha.reset(this._widgetId);\r\n        }\r\n    }\r\n\r\n    handleExpired() {\r\n        if (this.props.onExpired) {\r\n            this.props.onExpired();\r\n        } else {\r\n            this.handleChange(null);\r\n        }\r\n    }\r\n\r\n    handleErrored() {\r\n        if (this.props.onErrored) this.props.onErrored();\r\n    }\r\n\r\n    handleChange(token) {\r\n        if (this.props.onChange) this.props.onChange(token);\r\n    }\r\n\r\n    explicitRender() {\r\n        if (\r\n            this.props.grecaptcha &&\r\n            this.props.grecaptcha.render &&\r\n            this._widgetId === undefined\r\n        ) {\r\n            const wrapper = document.createElement(\"div\");\r\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\r\n                sitekey: this.props.sitekey,\r\n                callback: this.handleChange,\r\n                theme: this.props.theme,\r\n                type: this.props.type,\r\n                tabindex: this.props.tabindex,\r\n                \"expired-callback\": this.handleExpired,\r\n                \"error-callback\": this.handleErrored,\r\n                size: this.props.size,\r\n                stoken: this.props.stoken,\r\n                hl: this.props.hl,\r\n                badge: this.props.badge,\r\n            });\r\n            this.captcha.appendChild(wrapper);\r\n        }\r\n        if (\r\n            this._executeRequested &&\r\n            this.props.grecaptcha &&\r\n            this._widgetId !== undefined\r\n        ) {\r\n            this._executeRequested = false;\r\n            this.execute();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.explicitRender();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.explicitRender();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this._widgetId !== undefined) {\r\n            this.delayOfCaptchaIframeRemoving();\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    delayOfCaptchaIframeRemoving() {\r\n        const temporaryNode = document.createElement(\"div\");\r\n        document.body.appendChild(temporaryNode);\r\n        temporaryNode.style.display = \"none\";\r\n\r\n        // move of the recaptcha to a temporary node\r\n        while (this.captcha.firstChild) {\r\n            temporaryNode.appendChild(this.captcha.firstChild);\r\n        }\r\n\r\n        // delete the temporary node after reset will be done\r\n        setTimeout(() => {\r\n            document.body.removeChild(temporaryNode);\r\n        }, 5000);\r\n    }\r\n\r\n    handleRecaptchaRef(elem) {\r\n        this.captcha = elem;\r\n    }\r\n\r\n    render() {\r\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\r\n        /* eslint-disable no-unused-vars */\r\n        /* eslint-disable @typescript-eslint/no-unused-vars */\r\n        const {\r\n            sitekey,\r\n            onChange,\r\n            theme,\r\n            type,\r\n            tabindex,\r\n            onExpired,\r\n            onErrored,\r\n            size,\r\n            stoken,\r\n            grecaptcha,\r\n            badge,\r\n            hl,\r\n            ...childProps\r\n        } = this.props;\r\n        /* eslint-enable no-unused-vars */\r\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\r\n    }\r\n}\r\n\r\nReCAPTCHA.displayName = \"ReCAPTCHA\";\r\nReCAPTCHA.propTypes = {\r\n    sitekey: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    grecaptcha: PropTypes.object,\r\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\r\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\r\n    tabindex: PropTypes.number,\r\n    onExpired: PropTypes.func,\r\n    onErrored: PropTypes.func,\r\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\r\n    stoken: PropTypes.string,\r\n    hl: PropTypes.string,\r\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\r\n};\r\nReCAPTCHA.defaultProps = {\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    onChange: () => {},\r\n    theme: \"light\",\r\n    type: \"image\",\r\n    tabindex: 0,\r\n    size: \"normal\",\r\n    badge: \"bottomright\",\r\n};\r\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\r\nimport makeAsyncScriptLoader from \"react-async-script\";\r\n\r\nconst callbackName = \"onloadcallback\";\r\nconst globalName = \"grecaptcha\";\r\n\r\nfunction getURL() {\r\n    const hostname = \"recaptcha.net\";\r\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\r\n}\r\n\r\nexport default makeAsyncScriptLoader(getURL, {\r\n    callbackName,\r\n    globalName,\r\n})(ReCAPTCHA);\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\r\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\r\n\r\nconst Recaptcha = ({ captchaRef, setLoading }) => {\r\n    const classes = useStyle();\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n\r\n    const reCaptchaKey = useSelector(\r\n        (state) => state.siteConfig.captcha_ReCaptchaKey\r\n    );\r\n\r\n    useEffect(() => {\r\n        captchaRef.current.captchaCode = captcha;\r\n    }, [captcha]);\r\n\r\n    useEffect(() => setLoading(false), []);\r\n\r\n    return (\r\n        <div className={classes.captchaContainer}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <div>\r\n                    <ReCaptcha\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        sitekey={reCaptchaKey}\r\n                        onChange={(value) => setCaptcha(value)}\r\n                        id=\"captcha\"\r\n                        name=\"captcha\"\r\n                    />\r\n                </div>\r\n            </FormControl>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function useRecaptcha(setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: true,\r\n    });\r\n\r\n    const captchaParamsRef = useRef({\r\n        captchaCode: \"\",\r\n    });\r\n\r\n    const CaptchaRender = useCallback(\r\n        function RecaptchaRender() {\r\n            return (\r\n                <Recaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    setLoading={setLoading}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, setLoading]\r\n    );\r\n\r\n    return {\r\n        isValidate,\r\n        validate: defaultValidate,\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import React, { forwardRef, useCallback, useRef } from \"react\";\r\nimport Script from \"react-load-script\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TCaptcha = forwardRef(function TCaptcha(\r\n    { captchaRef, setLoading, isValidateRef, submitRef },\r\n    ref\r\n) {\r\n    const appid = useSelector(\r\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\r\n    );\r\n    const onLoad = () => {\r\n        try {\r\n            ref.current = new window.TencentCaptcha(appid, function (res) {\r\n                if (res.ret === 0) {\r\n                    captchaRef.current.ticket = res.ticket;\r\n                    captchaRef.current.randstr = res.randstr;\r\n\r\n                    isValidateRef.current.isValidate = true;\r\n                    submitRef.current.submit();\r\n                    console.log(submitRef);\r\n                } else {\r\n                    submitRef.current.setLoading(false);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Script\r\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\r\n            onLoad={onLoad}\r\n        />\r\n    );\r\n});\r\n\r\nexport default function useTCaptcha(setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: false,\r\n    });\r\n    const captchaParamsRef = useRef({\r\n        ticket: \"\",\r\n        randstr: \"\",\r\n    });\r\n    const submitRef = useRef({\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        submit: () => {},\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        setLoading: () => {},\r\n    });\r\n\r\n    const captchaRef = useRef();\r\n\r\n    const CaptchaRender = useCallback(\r\n        function TCaptchaRender() {\r\n            return (\r\n                <TCaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    setLoading={setLoading}\r\n                    isValidateRef={isValidate}\r\n                    submitRef={submitRef}\r\n                    ref={captchaRef}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\r\n    );\r\n\r\n    return {\r\n        isValidate: isValidate,\r\n        validate: (submit, setLoading) => {\r\n            submitRef.current.submit = submit;\r\n            submitRef.current.setLoading = setLoading;\r\n            captchaRef.current.show();\r\n        },\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport useNormalCaptcha from \"./normal\";\r\nimport useRecaptcha from \"./recaptcha\";\r\nimport useTCaptcha from \"./tcaptcha\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n}));\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\r\nexport const defaultValidate = (submit, setLoading) => {};\r\n\r\nexport const useCaptcha = () => {\r\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\r\n\r\n    const [captchaLoading, setCaptchaLoading] = useState(true);\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const captchaRefreshRef = useRef(() => {});\r\n\r\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\r\n    const recaptcha = useRecaptcha(setCaptchaLoading);\r\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\r\n\r\n    switch (captchaType) {\r\n        case \"normal\":\r\n            return { ...normal, captchaRefreshRef, captchaLoading };\r\n        case \"recaptcha\":\r\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\r\n        case \"tcaptcha\":\r\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\r\n        default:\r\n            return { ...normal, captchaRefreshRef, captchaLoading };\r\n    }\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    applyThemes,\r\n    setSessionStatus,\r\n    toggleSnackbar,\r\n} from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\r\nimport { enableUploaderLoad } from \"../../middleware/Init\";\r\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\r\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { useLocation } from \"react-router\";\r\nimport { ICPFooter } from \"../Common/ICPFooter\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n    captchaPlaceholder: {\r\n        width: 200,\r\n    },\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    authnLink: {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction LoginForm() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [useAuthn, setUseAuthn] = useState(false);\r\n    const [twoFA, setTwoFA] = useState(false);\r\n    const [faCode, setFACode] = useState(\"\");\r\n\r\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\r\n    const title = useSelector((state) => state.siteConfig.title);\r\n    const QQLogin = useSelector((state) => state.siteConfig.QQLogin);\r\n    const authn = useSelector((state) => state.siteConfig.authn);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\r\n        dispatch,\r\n    ]);\r\n    const SetSessionStatus = useCallback(\r\n        (status) => dispatch(setSessionStatus(status)),\r\n        [dispatch]\r\n    );\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n    const query = useQuery();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        setEmail(query.get(\"username\"));\r\n    }, [location]);\r\n\r\n    const getCookie =(name)=> {\r\n        const strcookie = document.cookie;//获取cookie字符串\r\n            const arrcookie = strcookie.split(\"; \");//分割\r\n            //遍历匹配\r\n            for ( let i = 0; i < arrcookie.length; i++) {\r\n                const arr = arrcookie[i].split(\"=\");\r\n                if (arr[0] == name){\r\n                    return unescape(arr[1]);\r\n                }\r\n            }\r\n        return null;\r\n    }\r\n\r\n    const GetQueryString =(name)=> {\r\n        const reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\",\"i\"); \r\n        const r = window.location.search.substr(1).match(reg); \r\n        if (r!=null) return (r[2]); return \"\"; \r\n    }\r\n\r\n    const afterLogin = (data) => {\r\n        Auth.authenticate(data);\r\n\r\n        // 设置用户主题色\r\n        if (data[\"preferred_theme\"] !== \"\") {\r\n            ApplyThemes(data[\"preferred_theme\"]);\r\n        }\r\n        enableUploaderLoad();\r\n\r\n        // 设置登录状态\r\n        SetSessionStatus(true);\r\n        const backurl = GetQueryString(\"backurl\");\r\n        if (backurl==\"\"){\r\n            history.push(\"/home\");\r\n        }else{\r\n            const backurl_path = backurl.split(\".\");\r\n            if (backurl_path[1]!=\"bilnn\"){\r\n                history.push(\"/home\");\r\n            }else{\r\n                window.location.href = decodeURIComponent(backurl)+\"?token=\"+getCookie(\"token\");\r\n            } \r\n        }\r\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\r\n\r\n        localStorage.removeItem(\"siteConfigCache\");\r\n    };\r\n\r\n    const authnLogin = (e) => {\r\n        e.preventDefault();\r\n        if (!navigator.credentials) {\r\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\r\n\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        API.get(\"/user/authn/\" + email)\r\n            .then((response) => {\r\n                const credentialRequestOptions = response.data;\r\n                console.log(credentialRequestOptions);\r\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\r\n                    credentialRequestOptions.publicKey.challenge\r\n                );\r\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\r\n                    function (listItem) {\r\n                        listItem.id = bufferDecode(listItem.id);\r\n                    }\r\n                );\r\n\r\n                return navigator.credentials.get({\r\n                    publicKey: credentialRequestOptions.publicKey,\r\n                });\r\n            })\r\n            .then((assertion) => {\r\n                const authData = assertion.response.authenticatorData;\r\n                const clientDataJSON = assertion.response.clientDataJSON;\r\n                const rawId = assertion.rawId;\r\n                const sig = assertion.response.signature;\r\n                const userHandle = assertion.response.userHandle;\r\n\r\n                return API.post(\r\n                    \"/user/authn/finish/\" + email,\r\n                    JSON.stringify({\r\n                        id: assertion.id,\r\n                        rawId: bufferEncode(rawId),\r\n                        type: assertion.type,\r\n                        response: {\r\n                            authenticatorData: bufferEncode(authData),\r\n                            clientDataJSON: bufferEncode(clientDataJSON),\r\n                            signature: bufferEncode(sig),\r\n                            userHandle: bufferEncode(userHandle),\r\n                        },\r\n                    })\r\n                );\r\n            })\r\n            .then((response) => {\r\n                afterLogin(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && loginCaptcha) {\r\n            validate(() => login(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user/session\", {\r\n            userName: email,\r\n            Password: pwd,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                if (response.rawData.code === 203) {\r\n                    setTwoFA(true);\r\n                } else {\r\n                    afterLogin(response.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    const initQQLogin = () => {\r\n        setLoading(true);\r\n        const backurl = GetQueryString(\"backurl\");\r\n        API.post(\"/user/qq?backurl=\"+backurl)\r\n            .then((response) => {\r\n                window.location.href = response.data;\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    const twoFALogin = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        API.post(\"/user/2fa\", {\r\n            code: faCode,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                afterLogin(response.data);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    let _QQLogin = QQLogin;\r\n    if(getCookie(\"thisapp\")==\"ok\"){\r\n        _QQLogin = false;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            {!twoFA && (\r\n                <>\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            登录 {title}\r\n                        </Typography>\r\n                        {!useAuthn && (\r\n                            <form className={classes.form} onSubmit={login}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"email\">\r\n                                        电子邮箱\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                        autoComplete\r\n                                        value={email}\r\n                                        autoFocus\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"password\">\r\n                                        密码\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        name=\"password\"\r\n                                        onChange={(e) => setPwd(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        value={pwd}\r\n                                        autoComplete\r\n                                    />\r\n                                </FormControl>\r\n                                {loginCaptcha && <CaptchaRender />}\r\n                                {_QQLogin && (\r\n                                    <div className={classes.buttonContainer}>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            disabled={loading}\r\n                                            className={classes.submit}\r\n                                        >\r\n                                            登录\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            disabled={loading}\r\n                                            className={classes.submit}\r\n                                            onClick={initQQLogin}\r\n                                        >\r\n                                            使用QQ登录\r\n                                        </Button>\r\n                                    </div>\r\n                                )}\r\n                                {!_QQLogin && (\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={loading}\r\n                                        className={classes.submit}\r\n                                    >\r\n                                        登录\r\n                                    </Button>\r\n                                )}\r\n                            </form>\r\n                        )}\r\n                        {useAuthn && (\r\n                            <form className={classes.form}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"email\">\r\n                                        电子邮箱\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                        autoComplete\r\n                                        value={email}\r\n                                        autoFocus\r\n                                    />\r\n                                </FormControl>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        loading ||\r\n                                        (loginCaptcha ? captchaLoading : false)\r\n                                    }\r\n                                    onClick={authnLogin}\r\n                                    className={classes.submit}\r\n                                >\r\n                                    下一步\r\n                                </Button>\r\n                            </form>\r\n                        )}\r\n                        <Divider />\r\n                        <div className={classes.link}>\r\n                            <div>\r\n                                <Link href={\"/forget\"}>忘记密码</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link href={\"/signup\"}>注册账号</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ICPFooter />\r\n                    </Paper>\r\n\r\n                    {authn && (\r\n                        <div className={classes.authnLink}>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => setUseAuthn(!useAuthn)}\r\n                            >\r\n                                {!useAuthn && (\r\n                                    <>\r\n                                        <Fingerprint\r\n                                            style={{\r\n                                                marginRight: 8,\r\n                                            }}\r\n                                        />\r\n                                        使用外部验证器登录\r\n                                    </>\r\n                                )}\r\n                                {useAuthn && (\r\n                                    <>\r\n                                        <VpnKey\r\n                                            style={{\r\n                                                marginRight: 8,\r\n                                            }}\r\n                                        />\r\n                                        使用密码登录\r\n                                    </>\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n            {twoFA && (\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <VpnIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        二步验证\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={twoFALogin}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"code\">\r\n                                请输入六位二步验证代码\r\n                            </InputLabel>\r\n                            <Input\r\n                                id=\"code\"\r\n                                type=\"number\"\r\n                                name=\"code\"\r\n                                onChange={(event) =>\r\n                                    setFACode(event.target.value)\r\n                                }\r\n                                autoComplete\r\n                                value={faCode}\r\n                                autoFocus\r\n                            />\r\n                        </FormControl>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            继续登录\r\n                        </Button>{\" \"}\r\n                    </form>{\" \"}\r\n                    <Divider />\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import * as actions from \"./action\";\r\nimport * as reducers from \"./reducer\";\r\n\r\nexport default {\r\n    actions,\r\n    reducers,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expandMore: {\r\n        color: \"#8d8d8d\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\r\n    },\r\n    button: {\r\n        textTransform: \"none\",\r\n    },\r\n}));\r\n\r\nexport default function PathButton(props) {\r\n    const inputRef = React.useRef(null);\r\n\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => {\r\n            if (props.more) {\r\n                inputRef.current.click();\r\n            } else {\r\n                return {\r\n                    folder: {\r\n                        id: -1,\r\n                        path: props.path,\r\n                        name: props.folder === \"/\" ? \"\" : props.folder,\r\n                    },\r\n                };\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        if (props.more && isActive) {\r\n            inputRef.current.click();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isActive]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <span onClick={props.onClick} ref={inputRef}>\r\n            <Button\r\n                ref={drop}\r\n                className={classNames(\r\n                    {\r\n                        [classes.active]: isActive,\r\n                    },\r\n                    classes.button\r\n                )}\r\n                component=\"span\"\r\n                title={props.title}\r\n            >\r\n                {props.more && <MoreIcon />}\r\n                {!props.more && (\r\n                    <>\r\n                        {props.folder}\r\n                        {props.last && (\r\n                            <ExpandMore className={classes.expandMore} />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Button>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    active: {\r\n        border: \"2px solid \" + theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\nexport default function DropDownItem(props) {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => {\r\n            console.log({\r\n                folder: {\r\n                    id: -1,\r\n                    path: props.path,\r\n                    name: props.folder === \"/\" ? \"\" : props.folder,\r\n                },\r\n            });\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        props.setActiveStatus(props.id, isActive);\r\n        // eslint-disable-next-line\r\n    }, [isActive]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MenuItem\r\n            ref={drop}\r\n            className={classNames({\r\n                [classes.active]: isActive,\r\n            })}\r\n            onClick={(e) => props.navigateTo(e, props.id)}\r\n        >\r\n            <ListItemIcon>\r\n                <FolderIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={props.folder} />\r\n        </MenuItem>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DropDownItem from \"./DropDownItem\";\r\n\r\nexport default function DropDown(props) {\r\n    let timer;\r\n    let first = props.folders.length;\r\n    const status = [];\r\n    for (let index = 0; index < props.folders.length; index++) {\r\n        status[index] = false;\r\n    }\r\n\r\n    const setActiveStatus = (id, value) => {\r\n        status[id] = value;\r\n        if (value) {\r\n            clearTimeout(timer);\r\n        } else {\r\n            let shouldClose = true;\r\n            status.forEach((element) => {\r\n                if (element) {\r\n                    shouldClose = false;\r\n                }\r\n            });\r\n            if (shouldClose) {\r\n                if (first <= 0) {\r\n                    timer = setTimeout(() => {\r\n                        props.onClose();\r\n                    }, 100);\r\n                } else {\r\n                    first--;\r\n                }\r\n            }\r\n        }\r\n        console.log(status);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.folders.map((folder, id) => (\r\n                // eslint-disable-next-line react/jsx-key\r\n                <DropDownItem\r\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\r\n                    navigateTo={props.navigateTo}\r\n                    id={id}\r\n                    setActiveStatus={setActiveStatus}\r\n                    folder={folder}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport {\r\n    navigateTo,\r\n    navigateUp,\r\n    setNavigatorError,\r\n    setNavigatorLoadingStatus,\r\n    refreshFileList,\r\n    setSelectedTarget,\r\n    openCreateFolderDialog,\r\n    openShareDialog,\r\n    drawerToggleAction,\r\n    openCompressDialog,\r\n} from \"../../../actions/index\";\r\nimport explorer from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { setCookie, setGetParameter, fixUrlHash } from \"../../../utils/index\";\r\nimport {\r\n    withStyles,\r\n    Divider,\r\n    Menu,\r\n    MenuItem,\r\n    ListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport PathButton from \"./PathButton\";\r\nimport DropDown from \"./DropDown\";\r\nimport pathHelper from \"../../../utils/page\";\r\nimport classNames from \"classnames\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport { Archive } from \"@material-ui/icons\";\r\nimport { FilePlus } from \"mdi-material-ui\";\r\nimport { openCreateFileDialog } from \"../../../actions\";\r\nimport SubActions from \"./SubActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        refresh: state.navigator.refresh,\r\n        drawerDesktopOpen: state.viewUpdate.open,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n        keywords: state.explorer.keywords,\r\n        sortMethod: state.viewUpdate.sortMethod,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigateToPath: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        navigateUp: () => {\r\n            dispatch(navigateUp());\r\n        },\r\n        setNavigatorError: (status, msg) => {\r\n            dispatch(setNavigatorError(status, msg));\r\n        },\r\n        updateFileList: (list) => {\r\n            dispatch(explorer.actions.updateFileList(list));\r\n        },\r\n        setNavigatorLoadingStatus: (status) => {\r\n            dispatch(setNavigatorLoadingStatus(status));\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        setSelectedTarget: (target) => {\r\n            dispatch(setSelectedTarget(target));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openCreateFileDialog: () => {\r\n            dispatch(openCreateFileDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        handleDesktopToggle: (open) => {\r\n            dispatch(drawerToggleAction(open));\r\n        },\r\n        openCompressDialog: () => {\r\n            dispatch(openCompressDialog());\r\n        },\r\n    };\r\n};\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n       /* [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },*/\r\n        height: \"49px\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navigatorContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    nav: {\r\n        height: \"48px\",\r\n        padding: \"5px 15px\",\r\n        display: \"flex\",\r\n    },\r\n    optionContainer: {\r\n        paddingTop: \"6px\",\r\n        marginRight: \"10px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"6px\",\r\n        verticalAlign: \"top\",\r\n        color: \"#868686\",\r\n    },\r\n    expandMore: {\r\n        color: \"#8d8d8d\",\r\n    },\r\n    roundBorder: {\r\n        borderRadius: \"4px 4px 0 0\",\r\n    },\r\n});\r\n\r\nclass NavigatorComponent extends Component {\r\n    keywords = \"\";\r\n    currentID = 0;\r\n\r\n    state = {\r\n        hidden: false,\r\n        hiddenFolders: [],\r\n        folders: [],\r\n        anchorEl: null,\r\n        hiddenMode: false,\r\n        anchorHidden: null,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.element = React.createRef();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const url = new URL(fixUrlHash(window.location.href));\r\n        const c = url.searchParams.get(\"path\");\r\n        this.renderPath(c === null ? \"/\" : c);\r\n\r\n        if (!this.props.isShare) {\r\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\r\n            this.props.handleDesktopToggle(true);\r\n        }\r\n\r\n        // 后退操作时重新导航\r\n        window.onpopstate = () => {\r\n            const url = new URL(fixUrlHash(window.location.href));\r\n            const c = url.searchParams.get(\"path\");\r\n            if (c !== null) {\r\n                this.props.navigateToPath(c);\r\n            }\r\n        };\r\n    };\r\n\r\n    renderPath = (path = null) => {\r\n        this.props.setNavigatorError(false, null);\r\n        this.setState({\r\n            folders:\r\n                path !== null\r\n                    ? path.substr(1).split(\"/\")\r\n                    : this.props.path.substr(1).split(\"/\"),\r\n        });\r\n        let newPath = path !== null ? path : this.props.path;\r\n        const apiURL = this.props.share\r\n            ? \"/share/list/\" + this.props.share.key\r\n            : this.keywords === \"\"\r\n            ? \"/directory\"\r\n            : \"/file/search/\";\r\n        newPath = this.keywords === \"\" ? newPath : this.keywords;\r\n\r\n        API.get(apiURL + encodeURIComponent(newPath))\r\n            .then((response) => {\r\n                this.currentID = response.data.parent;\r\n                this.props.updateFileList(response.data.objects);\r\n                this.props.setNavigatorLoadingStatus(false);\r\n                const pathTemp = (path !== null\r\n                    ? path.substr(1).split(\"/\")\r\n                    : this.props.path.substr(1).split(\"/\")\r\n                ).join(\",\");\r\n                setCookie(\"path_tmp\", encodeURIComponent(pathTemp), 1);\r\n                if (this.keywords === \"\") {\r\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.setNavigatorError(true, error);\r\n            });\r\n\r\n        this.checkOverFlow(true);\r\n    };\r\n\r\n    redresh = (path) => {\r\n        this.props.setNavigatorLoadingStatus(true);\r\n        this.props.setNavigatorError(false, \"error\");\r\n        this.renderPath(path);\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.keywords !== nextProps.keywords) {\r\n            this.keywords = nextProps.keywords;\r\n        }\r\n        if (this.props.path !== nextProps.path) {\r\n            this.renderPath(nextProps.path);\r\n        }\r\n        if (this.props.refresh !== nextProps.refresh) {\r\n            this.redresh(nextProps.path);\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.updateFileList([]);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevStates) => {\r\n        if (this.state.folders !== prevStates.folders) {\r\n            this.checkOverFlow(true);\r\n        }\r\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\r\n            delay(500).then(() => this.checkOverFlow());\r\n        }\r\n    };\r\n\r\n    checkOverFlow = (force) => {\r\n        if (this.overflowInitLock && !force) {\r\n            return;\r\n        }\r\n        if (this.element.current !== null) {\r\n            const hasOverflowingChildren =\r\n                this.element.current.offsetHeight <\r\n                    this.element.current.scrollHeight ||\r\n                this.element.current.offsetWidth <\r\n                    this.element.current.scrollWidth;\r\n            if (hasOverflowingChildren) {\r\n                this.overflowInitLock = true;\r\n                this.setState({ hiddenMode: true });\r\n            }\r\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\r\n                this.setState({ hiddenMode: false });\r\n            }\r\n        }\r\n    };\r\n\r\n    navigateTo = (event, id) => {\r\n        if (id === this.state.folders.length - 1) {\r\n            //最后一个路径\r\n            this.setState({ anchorEl: event.currentTarget });\r\n        } else if (\r\n            id === -1 &&\r\n            this.state.folders.length === 1 &&\r\n            this.state.folders[0] === \"\"\r\n        ) {\r\n            this.props.refreshFileList();\r\n            this.handleClose();\r\n        } else if (id === -1) {\r\n            this.props.navigateToPath(\"/\");\r\n            this.handleClose();\r\n        } else {\r\n            this.props.navigateToPath(\r\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\r\n            );\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\r\n    };\r\n\r\n    showHiddenPath = (e) => {\r\n        this.setState({ anchorHidden: e.currentTarget });\r\n    };\r\n\r\n    performAction = (e) => {\r\n        this.handleClose();\r\n        if (e === \"refresh\") {\r\n            this.redresh();\r\n            return;\r\n        }\r\n        const presentPath = this.props.path.split(\"/\");\r\n        const newTarget = [\r\n            {\r\n                id: this.currentID,\r\n                type: \"dir\",\r\n                name: presentPath.pop(),\r\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\r\n            },\r\n        ];\r\n        //this.props.navitateUp();\r\n        switch (e) {\r\n            case \"share\":\r\n                this.props.setSelectedTarget(newTarget);\r\n                this.props.openShareDialog();\r\n                break;\r\n            case \"newfolder\":\r\n                this.props.openCreateFolderDialog();\r\n                break;\r\n            case \"compress\":\r\n                this.props.setSelectedTarget(newTarget);\r\n                this.props.openCompressDialog();\r\n                break;\r\n            case \"newFile\":\r\n                this.props.openCreateFileDialog();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const user = Auth.GetUser();\r\n\r\n        const presentFolderMenu = (\r\n            <Menu\r\n                id=\"presentFolderMenu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={Boolean(this.state.anchorEl)}\r\n                onClose={this.handleClose}\r\n                disableAutoFocusItem={true}\r\n            >\r\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\r\n                    <ListItemIcon>\r\n                        <RefreshIcon />\r\n                    </ListItemIcon>\r\n                    刷新\r\n                </MenuItem>\r\n                {this.props.keywords === \"\" && isHomePage && (\r\n                    <div>\r\n                        <Divider />\r\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            分享\r\n                        </MenuItem>\r\n                        {user.group.compress && (\r\n                            <MenuItem\r\n                                onClick={() => this.performAction(\"compress\")}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Archive />\r\n                                </ListItemIcon>\r\n                                压缩\r\n                            </MenuItem>\r\n                        )}\r\n                        <Divider />\r\n                        <MenuItem\r\n                            onClick={() => this.performAction(\"newfolder\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <NewFolderIcon />\r\n                            </ListItemIcon>\r\n                            创建文件夹\r\n                        </MenuItem>\r\n\r\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\r\n                            <ListItemIcon>\r\n                                <FilePlus />\r\n                            </ListItemIcon>\r\n                            创建文件\r\n                        </MenuItem>\r\n                    </div>\r\n                )}\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    {\r\n                        [classes.roundBorder]: this.props.isShare,\r\n                    },\r\n                    classes.container\r\n                )}\r\n            >\r\n                <div className={classes.navigatorContainer}>\r\n                    <div className={classes.nav} ref={this.element}>\r\n                        <span>\r\n                            <PathButton\r\n                                folder=\"/\"\r\n                                path=\"/\"\r\n                                onClick={(e) => this.navigateTo(e, -1)}\r\n                            />\r\n                            <RightIcon className={classes.rightIcon} />\r\n                        </span>\r\n                        {this.state.hiddenMode && (\r\n                            <span>\r\n                                <PathButton\r\n                                    more\r\n                                    title=\"显示路径\"\r\n                                    onClick={this.showHiddenPath}\r\n                                />\r\n                                <Menu\r\n                                    id=\"hiddenPathMenu\"\r\n                                    anchorEl={this.state.anchorHidden}\r\n                                    open={Boolean(this.state.anchorHidden)}\r\n                                    onClose={this.handleClose}\r\n                                    disableAutoFocusItem={true}\r\n                                >\r\n                                    <DropDown\r\n                                        onClose={this.handleClose}\r\n                                        folders={this.state.folders.slice(\r\n                                            0,\r\n                                            -1\r\n                                        )}\r\n                                        navigateTo={this.navigateTo}\r\n                                    />\r\n                                </Menu>\r\n                                <RightIcon className={classes.rightIcon} />\r\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\r\n                                    {this.state.folders.slice(-1)}  \r\n                                    <ExpandMore className={classes.expandMore}/>\r\n                                </Button> */}\r\n                                <PathButton\r\n                                    folder={this.state.folders.slice(-1)}\r\n                                    path={\r\n                                        \"/\" +\r\n                                        this.state.folders\r\n                                            .slice(0, -1)\r\n                                            .join(\"/\")\r\n                                    }\r\n                                    last={true}\r\n                                    onClick={(e) =>\r\n                                        this.navigateTo(\r\n                                            e,\r\n                                            this.state.folders.length - 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                                {presentFolderMenu}\r\n                            </span>\r\n                        )}\r\n                        {!this.state.hiddenMode &&\r\n                            this.state.folders.map((folder, id, folders) => (\r\n                                <span key={id}>\r\n                                    {folder !== \"\" && (\r\n                                        <span>\r\n                                            <PathButton\r\n                                                folder={folder}\r\n                                                path={\r\n                                                    \"/\" +\r\n                                                    folders\r\n                                                        .slice(0, id)\r\n                                                        .join(\"/\")\r\n                                                }\r\n                                                last={id === folders.length - 1}\r\n                                                onClick={(e) =>\r\n                                                    this.navigateTo(e, id)\r\n                                                }\r\n                                            />\r\n                                            {id === folders.length - 1 &&\r\n                                                presentFolderMenu}\r\n                                            {id !== folders.length - 1 && (\r\n                                                <RightIcon\r\n                                                    className={\r\n                                                        classes.rightIcon\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </span>\r\n                                    )}\r\n                                </span>\r\n                            ))}\r\n                    </div>\r\n                    <div className={classes.optionContainer}>\r\n                        <SubActions isSmall share={this.props.share} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavigatorComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Navigator = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(NavigatorComponent)));\r\n\r\nexport default Navigator;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    withStyles,\r\n    ButtonBase,\r\n    Typography,\r\n    Tooltip,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { Folder } from \"@material-ui/icons\";\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        height: \"50px\",\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"initial\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass SmallIconCompoment extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <ButtonBase\r\n                focusRipple\r\n                className={classNames(\r\n                    {\r\n                        [classes.selected]: isSelected,\r\n                        [classes.notSelected]: !isSelected,\r\n                    },\r\n                    classes.button\r\n                )}\r\n            >\r\n                <div\r\n                    onClick={this.props.onIconClick}\r\n                    className={classNames(classes.icon, {\r\n                        [classes.iconSelected]: isSelected,\r\n                        [classes.iconNotSelected]: !isSelected,\r\n                    })}\r\n                >\r\n                    {(!isSelected || !isMobile) && (\r\n                        <>\r\n                            {this.props.isFolder && <Folder />}\r\n                            {!this.props.isFolder && (\r\n                                <TypeIcon fileName={this.props.file.name} />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    {isSelected && isMobile && (\r\n                        <Grow in={isSelected && isMobile}>\r\n                            <CheckCircleRoundedIcon\r\n                                className={classes.checkIcon}\r\n                            />\r\n                        </Grow>\r\n                    )}\r\n                </div>\r\n                <Tooltip\r\n                    title={this.props.file.name}\r\n                    aria-label={this.props.file.name}\r\n                >\r\n                    <Typography\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                        variant=\"body2\"\r\n                    >\r\n                        {this.props.file.name}\r\n                    </Typography>\r\n                </Tooltip>\r\n            </ButtonBase>\r\n        );\r\n    }\r\n}\r\n\r\nSmallIconCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SmallIcon = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(SmallIconCompoment));\r\n\r\nexport default SmallIcon;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport {\r\n    withStyles,\r\n    ButtonBase,\r\n    Typography,\r\n    Divider,\r\n    Tooltip,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        alignItems: \"initial\",\r\n        display: \"initial\",\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    preview: {\r\n        overflow: \"hidden\",\r\n        height: \"150px\",\r\n        width: \"100%\",\r\n        borderRadius: \"6px 6px 0 0\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    previewIcon: {\r\n        overflow: \"hidden\",\r\n        height: \"149px\",\r\n        width: \"100%\",\r\n        borderRadius: \"5px 5px 0 0\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        paddingTop: \"50px\",\r\n    },\r\n    iconBig: {\r\n        fontSize: 50,\r\n    },\r\n    picPreview: {\r\n        objectFit: \"cover\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    fileInfo: {\r\n        height: \"50px\",\r\n        display: \"flex\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    loadingAnimation: {\r\n        borderRadius: \"6px 6px 0 0\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    shareFix: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass FileIconCompoment extends Component {\r\n    static defaultProps = {\r\n        share: false,\r\n    };\r\n\r\n    state = {\r\n        loading: false,\r\n        showPicIcon: false,\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isSharePage = pathHelper.isSharePage(\r\n            this.props.location.pathname\r\n        );\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <ButtonBase\r\n                    focusRipple\r\n                    className={classNames(\r\n                        {\r\n                            [classes.selected]: isSelected,\r\n                            [classes.notSelected]: !isSelected,\r\n                        },\r\n                        classes.button\r\n                    )}\r\n                >\r\n                    {this.props.file.pic !== \"\" &&\r\n                        !this.state.showPicIcon &&\r\n                        this.props.file.pic !== \" \" &&\r\n                        this.props.file.pic !== \"null,null\" && (\r\n                            <div className={classes.preview}>\r\n                                <LazyLoadImage\r\n                                    className={classNames({\r\n                                        [classes.hide]: this.state.loading,\r\n                                        [classes.picPreview]: !this.state\r\n                                            .loading,\r\n                                    })}\r\n                                    src={\r\n                                        baseURL +\r\n                                        (isSharePage\r\n                                            ? \"/share/thumb/\" +\r\n                                              window.shareInfo.key +\r\n                                              \"/\" +\r\n                                              this.props.file.id +\r\n                                              \"?path=\" +\r\n                                              encodeURIComponent(\r\n                                                  this.props.file.path\r\n                                              )\r\n                                            : \"/file/thumb/\" +\r\n                                              this.props.file.id)\r\n                                    }\r\n                                    afterLoad={() =>\r\n                                        this.setState({ loading: false })\r\n                                    }\r\n                                    beforeLoad={() =>\r\n                                        this.setState({ loading: true })\r\n                                    }\r\n                                    onError={() =>\r\n                                        this.setState({ showPicIcon: true })\r\n                                    }\r\n                                />\r\n                                <ContentLoader\r\n                                    height={150}\r\n                                    width={170}\r\n                                    className={classNames(\r\n                                        {\r\n                                            [classes.hide]: !this.state.loading,\r\n                                        },\r\n                                        classes.loadingAnimation\r\n                                    )}\r\n                                >\r\n                                    <rect\r\n                                        x=\"0\"\r\n                                        y=\"0\"\r\n                                        width=\"100%\"\r\n                                        height=\"150\"\r\n                                    />\r\n                                </ContentLoader>\r\n                            </div>\r\n                        )}\r\n                    {(this.props.file.pic === \"\" ||\r\n                        this.state.showPicIcon ||\r\n                        this.props.file.pic === \" \" ||\r\n                        this.props.file.pic === \"null,null\") && (\r\n                        <div className={classes.previewIcon}>\r\n                            <TypeIcon\r\n                                className={classes.iconBig}\r\n                                fileName={this.props.file.name}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {(this.props.file.pic === \"\" ||\r\n                        this.state.showPicIcon ||\r\n                        this.props.file.pic === \" \" ||\r\n                        this.props.file.pic === \"null,null\") && <Divider />}\r\n                    <div className={classes.fileInfo}>\r\n                        {!this.props.share && (\r\n                            <div\r\n                                onClick={this.props.onIconClick}\r\n                                className={classNames(classes.icon, {\r\n                                    [classes.iconSelected]: isSelected,\r\n                                    [classes.iconNotSelected]: !isSelected,\r\n                                })}\r\n                            >\r\n                                {(!isSelected || !isMobile) && (\r\n                                    <TypeIcon fileName={this.props.file.name} />\r\n                                )}\r\n                                {isSelected && isMobile && (\r\n                                    <Grow in={isSelected && isMobile}>\r\n                                        <CheckCircleRoundedIcon\r\n                                            className={classes.checkIcon}\r\n                                        />\r\n                                    </Grow>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        <Tooltip\r\n                            title={this.props.file.name}\r\n                            aria-label={this.props.file.name}\r\n                        >\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                className={classNames(classes.folderName, {\r\n                                    [classes.folderNameSelected]: isSelected,\r\n                                    [classes.folderNameNotSelected]: !isSelected,\r\n                                    [classes.shareFix]: this.props.share,\r\n                                })}\r\n                            >\r\n                                {this.props.file.name}\r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileIconCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst FileIcon = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(FileIconCompoment)));\r\n\r\nexport default FileIcon;\r\n","import React from \"react\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    ButtonBase,\r\n    Typography,\r\n    Tooltip,\r\n    makeStyles,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        height: \"50px\",\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"initial\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default function Folder({ folder, isActive, onIconClick }) {\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const classes = useStyles();\r\n    const isMobile = statusHelper.isMobile();\r\n    const isSelected =\r\n        selected.findIndex((value) => {\r\n            return value === folder;\r\n        }) !== -1;\r\n\r\n    return (\r\n        <ButtonBase\r\n            focusRipple\r\n            className={classNames(\r\n                {\r\n                    [classes.selected]: isSelected,\r\n                    [classes.notSelected]: !isSelected,\r\n                    [classes.active]: isActive,\r\n                },\r\n                classes.button\r\n            )}\r\n        >\r\n            <div\r\n                onClick={onIconClick}\r\n                className={classNames(classes.icon, {\r\n                    [classes.iconSelected]: isSelected,\r\n                    [classes.iconNotSelected]: !isSelected,\r\n                })}\r\n            >\r\n                {(!isSelected || !isMobile) && <FolderIcon />}\r\n                {isSelected && isMobile && (\r\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\r\n                )}\r\n            </div>\r\n            <Tooltip title={folder.name} aria-label={folder.name}>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    className={classNames(classes.folderName, {\r\n                        [classes.folderNameSelected]: isSelected,\r\n                        [classes.folderNameNotSelected]: !isSelected,\r\n                    })}\r\n                >\r\n                    {folder.name}\r\n                </Typography>\r\n            </Tooltip>\r\n        </ButtonBase>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SmallIcon from \"../SmallIcon\";\r\nimport FileIcon from \"../FileIcon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Folder from \"../Folder\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dragging: {\r\n        width: \"200px\",\r\n    },\r\n    cardDragged: {\r\n        position: \"absolute\",\r\n        \"transform-origin\": \"bottom left\",\r\n    },\r\n}));\r\n\r\nconst diliverIcon = (object, viewMethod, classes) => {\r\n    if (object.type === \"dir\") {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <SmallIcon file={object} isFolder />\r\n            </div>\r\n        );\r\n    }\r\n    if (object.type === \"file\" && viewMethod === \"icon\") {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <FileIcon file={object} />\r\n            </div>\r\n        );\r\n    }\r\n    if (\r\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\r\n        viewMethod === \"list\"\r\n    ) {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <SmallIcon file={object} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Preview = (props) => {\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {selected.length === 0 &&\r\n                diliverIcon(props.object, viewMethod, classes)}\r\n            {selected.length > 0 && (\r\n                <>\r\n                    {selected.slice(0, 3).map((card, i) => (\r\n                        <div\r\n                            key={card.id}\r\n                            className={classes.cardDragged}\r\n                            style={{\r\n                                zIndex: selected.length - i,\r\n                                transform: `rotateZ(${-i * 2.5}deg)`,\r\n                            }}\r\n                        >\r\n                            {diliverIcon(card, viewMethod, classes)}\r\n                        </div>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Preview;\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\nimport Preview from \"./Preview\";\r\nimport { useSelector } from \"react-redux\";\r\nconst layerStyles = {\r\n    position: \"fixed\",\r\n    pointerEvents: \"none\",\r\n    zIndex: 100,\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\nfunction getItemStyles(\r\n    initialOffset,\r\n    currentOffset,\r\n    pointerOffset,\r\n    viewMethod\r\n) {\r\n    if (!initialOffset || !currentOffset) {\r\n        return {\r\n            display: \"none\",\r\n        };\r\n    }\r\n    let { x, y } = currentOffset;\r\n    if (viewMethod === \"list\") {\r\n        x += pointerOffset.x - initialOffset.x;\r\n        y += pointerOffset.y - initialOffset.y;\r\n    }\r\n\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    return {\r\n        opacity: 0.5,\r\n        transform,\r\n        WebkitTransform: transform,\r\n    };\r\n}\r\nconst CustomDragLayer = (props) => {\r\n    const {\r\n        itemType,\r\n        isDragging,\r\n        item,\r\n        initialOffset,\r\n        currentOffset,\r\n        pointerOffset,\r\n    } = useDragLayer((monitor) => ({\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        initialOffset: monitor.getInitialSourceClientOffset(),\r\n        currentOffset: monitor.getSourceClientOffset(),\r\n        pointerOffset: monitor.getInitialClientOffset(),\r\n        isDragging: monitor.isDragging(),\r\n    }));\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    function renderItem() {\r\n        switch (itemType) {\r\n            case \"object\":\r\n                return <Preview object={item.object} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    if (!isDragging) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={layerStyles}>\r\n            <div\r\n                style={getItemStyles(\r\n                    initialOffset,\r\n                    currentOffset,\r\n                    pointerOffset,\r\n                    viewMethod\r\n                )}\r\n            >\r\n                {renderItem()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default CustomDragLayer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport classNames from \"classnames\";\r\nimport { sizeToString } from \"../../utils/index\";\r\nimport {\r\n    withStyles,\r\n    TableCell,\r\n    TableRow,\r\n    Typography,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport dayjs from \"dayjs\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    selected: {\r\n        \"&:hover\": {},\r\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\r\n    },\r\n\r\n    selectedShared: {\r\n        \"&:hover\": {},\r\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    icon: {\r\n        verticalAlign: \"middle\",\r\n        marginRight: \"20px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tableIcon: {\r\n        marginRight: \"20px\",\r\n        verticalAlign: \"middle\",\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n        userSelect: \"none\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n        userSelect: \"none\",\r\n    },\r\n    folderName: {\r\n        marginRight: \"20px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    hideAuto: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    tableRow: {\r\n        padding: \"10px 16px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    active: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass TableRowCompoment extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\r\n\r\n        let icon;\r\n        if (this.props.file.type === \"dir\") {\r\n            icon = <FolderIcon className={classes.icon} />;\r\n        } else if (this.props.file.type === \"up\") {\r\n            icon = <KeyboardReturnIcon className={classes.icon} />;\r\n        } else {\r\n            icon = (\r\n                <TypeIcon\r\n                    className={classes.tableIcon}\r\n                    fileName={this.props.file.name}\r\n                />\r\n            );\r\n        }\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <TableRow\r\n                ref={this.props.pref}\r\n                onContextMenu={this.props.contextMenu}\r\n                onClick={this.props.handleClick}\r\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\r\n                className={classNames({\r\n                    [classes.selected]: isSelected && !isShare,\r\n                    [classes.selectedShared]: isSelected && isShare,\r\n                    [classes.notSelected]: !isSelected,\r\n                    [classes.active]: this.props.isActive,\r\n                })}\r\n            >\r\n                <TableCell\r\n                    ref={this.props.dref}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.tableRow}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        <div\r\n                            onClick={\r\n                                this.props.file.type !== \"up\"\r\n                                    ? this.props.onIconClick\r\n                                    : null\r\n                            }\r\n                        >\r\n                            {(!isSelected || !isMobile) && icon}\r\n                            {isSelected && isMobile && (\r\n                                <Grow in={isSelected && isMobile}>\r\n                                    <CheckCircleRoundedIcon\r\n                                        className={classNames(\r\n                                            classes.checkIcon,\r\n                                            classes.icon\r\n                                        )}\r\n                                    />\r\n                                </Grow>\r\n                            )}\r\n                        </div>\r\n                        {this.props.file.name}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={classNames(classes.hideAuto, classes.tableRow)}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        {\" \"}\r\n                        {this.props.file.type !== \"dir\" &&\r\n                            this.props.file.type !== \"up\" &&\r\n                            sizeToString(this.props.file.size)}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={classNames(classes.hideAuto, classes.tableRow)}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        {\" \"}\r\n                        {formatLocalTime(\r\n                            this.props.file.date,\r\n                            \"YYYY-MM-DD H:mm:ss\"\r\n                        )}\r\n                    </Typography>\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nTableRowCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst TableItem = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(TableRowCompoment)));\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Folder from \"../Folder\";\r\nimport classNames from \"classnames\";\r\nimport TableItem from \"../TableRow\";\r\nexport default function FolderDropWarpper({\r\n    isListView,\r\n    folder,\r\n    onIconClick,\r\n    contextMenu,\r\n    handleClick,\r\n    handleDoubleClick,\r\n    className,\r\n    pref,\r\n}) {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => ({ folder }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = canDrop && isOver;\r\n    if (!isListView) {\r\n        return (\r\n            <div ref={drop}>\r\n                <Folder\r\n                    folder={folder}\r\n                    onIconClick={onIconClick}\r\n                    isActive={isActive}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <TableItem\r\n            pref={pref}\r\n            dref={drop}\r\n            className={className}\r\n            onIconClick={onIconClick}\r\n            contextMenu={contextMenu}\r\n            handleClick={handleClick}\r\n            handleDoubleClick={handleDoubleClick}\r\n            file={folder}\r\n            isActive={isActive}\r\n        />\r\n    );\r\n}\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    changeContextMenu,\r\n    setSelectedTarget,\r\n    selectFile as selectFileAction,\r\n    navigateTo,\r\n    showImgPreivew,\r\n    openMusicDialog,\r\n    toggleSnackbar,\r\n    dragAndDrop,\r\n    openLoadingDialog,\r\n} from \"../../actions/index\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport FileIcon from \"./FileIcon\";\r\nimport SmallIcon from \"./SmallIcon\";\r\nimport TableItem from \"./TableRow\";\r\nimport classNames from \"classnames\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport DropWarpper from \"./DnD/DropWarpper\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { pathBack } from \"../../utils\";\r\nimport { openPreview } from \"../../actions\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n    fixFlex: {\r\n        minWidth: 0,\r\n    },\r\n    dragging: {\r\n        opacity: 0.4,\r\n    },\r\n}));\r\n\r\nexport default function ObjectIcon(props) {\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const navigatorPath = useSelector((state) => state.navigator.path);\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n    const ContextMenu = useCallback(\r\n        (type, open) => dispatch(changeContextMenu(type, open)),\r\n        [dispatch]\r\n    );\r\n    const SetSelectedTarget = useCallback(\r\n        (targets) => dispatch(setSelectedTarget(targets)),\r\n        [dispatch]\r\n    );\r\n\r\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\r\n        dispatch,\r\n    ]);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const DragAndDrop = useCallback(\r\n        (source, target) => dispatch(dragAndDrop(source, target)),\r\n        [dispatch]\r\n    );\r\n    const OpenLoadingDialog = useCallback(\r\n        (text) => dispatch(openLoadingDialog(text)),\r\n        [dispatch]\r\n    );\r\n    const OpenPreview = useCallback(() => dispatch(openPreview()), [dispatch]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const contextMenu = (e) => {\r\n        if (props.file.type === \"up\") {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        if (\r\n            selected.findIndex((value) => {\r\n                return value === props.file;\r\n            }) === -1\r\n        ) {\r\n            SetSelectedTarget([props.file]);\r\n        }\r\n        ContextMenu(\"file\", true);\r\n    };\r\n\r\n    const selectFile = (e) => {\r\n        dispatch(selectFileAction(props.file, e, props.index));\r\n    };\r\n    const enterFolder = () => {\r\n        NavitateTo(\r\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\r\n        );\r\n    };\r\n    const handleClick = (e) => {\r\n        if (props.file.type === \"up\") {\r\n            NavitateTo(pathBack(navigatorPath));\r\n        }\r\n        if (\r\n            statusHelper.isMobile() ||\r\n            statusHelper.isSharePage(location.pathname)\r\n        ) {\r\n            selectFile(e);\r\n            if (props.file.type === \"dir\" && !e.ctrlKey) {\r\n                enterFolder();\r\n                return;\r\n            }\r\n        } else {\r\n            selectFile(e);\r\n        }\r\n    };\r\n\r\n    const handleDoubleClick = () => {\r\n        if (props.file.type === \"up\") {\r\n            return;\r\n        }\r\n        if (props.file.type === \"dir\") {\r\n            enterFolder();\r\n            return;\r\n        }\r\n        const isShare = statusHelper.isSharePage(location.pathname);\r\n        if (isShare) {\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\r\n                return;\r\n            }\r\n        }\r\n        if (window.shareInfo && !window.shareInfo.preview) {\r\n            OpenLoadingDialog(\"获取下载地址...\");\r\n            return;\r\n        }\r\n\r\n        OpenPreview();\r\n    };\r\n\r\n    const handleIconClick = (e) => {\r\n        if (statusHelper.isMobile()) {\r\n            e.stopPropagation();\r\n            e.ctrlKey = true;\r\n            selectFile(e);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: {\r\n            object: props.file,\r\n            type: \"object\",\r\n            selected: [...selected],\r\n            viewMethod: viewMethod,\r\n        },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                if (dropResult.folder) {\r\n                    if (\r\n                        item.object.id !== dropResult.folder.id ||\r\n                        item.object.type !== dropResult.folder.type\r\n                    ) {\r\n                        DragAndDrop(item.object, dropResult.folder);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        canDrag: () => {\r\n            return (\r\n                !statusHelper.isMobile() &&\r\n                statusHelper.isHomePage(location.pathname)\r\n            );\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), { captureDraggingState: true });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (viewMethod === \"list\") {\r\n        return (\r\n            <>\r\n                {props.file.type === \"dir\" && (\r\n                    <DropWarpper\r\n                        isListView={true}\r\n                        pref={drag}\r\n                        className={classNames(classes.container, {\r\n                            [classes.dragging]: isDragging,\r\n                        })}\r\n                        onIconClick={handleIconClick}\r\n                        contextMenu={contextMenu}\r\n                        handleClick={handleClick}\r\n                        handleDoubleClick={handleDoubleClick.bind(this)}\r\n                        folder={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type !== \"dir\" && (\r\n                    <TableItem\r\n                        pref={drag}\r\n                        className={classNames(classes.container, {\r\n                            [classes.dragging]: isDragging,\r\n                        })}\r\n                        onIconClick={handleIconClick}\r\n                        contextMenu={contextMenu}\r\n                        handleClick={handleClick}\r\n                        handleDoubleClick={handleDoubleClick.bind(this)}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className={classNames({\r\n                [classes.container]: viewMethod !== \"list\",\r\n                [classes.dragging]: isDragging,\r\n            })}\r\n        >\r\n            <div\r\n                className={classes.fixFlex}\r\n                onContextMenu={contextMenu}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick.bind(this)}\r\n            >\r\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\r\n                    <DropWarpper\r\n                        isListView={false}\r\n                        onIconClick={handleIconClick}\r\n                        folder={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\r\n                    <FileIcon\r\n                        onIconClick={handleIconClick}\r\n                        ref={drag}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\r\n                    <SmallIcon\r\n                        onIconClick={handleIconClick}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    changeContextMenu,\r\n    setNavigatorLoadingStatus,\r\n    navigateTo,\r\n    openCreateFolderDialog,\r\n    openRenameDialog,\r\n    openMoveDialog,\r\n    openRemoveDialog,\r\n    openShareDialog,\r\n    showImgPreivew,\r\n    openMusicDialog,\r\n    toggleSnackbar,\r\n    openRemoteDownloadDialog,\r\n    openTorrentDownloadDialog,\r\n    openGetSourceDialog,\r\n    openCopyDialog,\r\n    openLoadingDialog,\r\n    setSelectedTarget,\r\n    openDecompressDialog,\r\n    refreshFileList,\r\n    openCompressDialog,\r\n    openCreateFileDialog,\r\n    openRelocateDialog,\r\n} from \"../../actions/index\";\r\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\r\nimport { allowSharePreview } from \"../../utils/index\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\r\nimport MoveIcon from \"@material-ui/icons/Input\";\r\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport { FilePlus, MagnetOn, Transfer } from \"mdi-material-ui\";\r\nimport {\r\n    withStyles,\r\n    Typography,\r\n    MenuItem,\r\n    Divider,\r\n    ListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { FolderUpload } from \"mdi-material-ui\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { openPreview } from \"../../actions\";\r\nimport {\r\n    setSideBar,\r\n    toggleObjectInfoSidebar,\r\n} from \"../../redux/explorer/action\";\r\n\r\nconst styles = () => ({\r\n    propover: {},\r\n    divider: {\r\n        marginTop: 4,\r\n        marginBottom: 4,\r\n    },\r\n});\r\n\r\nconst StyledListItemIcon = withStyles({\r\n    root: {\r\n        minWidth: 38,\r\n    },\r\n})(ListItemIcon);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuType: state.viewUpdate.contextType,\r\n        menuOpen: state.viewUpdate.contextOpen,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        keywords: state.explorer.keywords,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        setNavigatorLoadingStatus: (status) => {\r\n            dispatch(setNavigatorLoadingStatus(status));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openCreateFileDialog: () => {\r\n            dispatch(openCreateFileDialog());\r\n        },\r\n        openRenameDialog: () => {\r\n            dispatch(openRenameDialog());\r\n        },\r\n        openMoveDialog: () => {\r\n            dispatch(openMoveDialog());\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openRemoteDownloadDialog: () => {\r\n            dispatch(openRemoteDownloadDialog());\r\n        },\r\n        openTorrentDownloadDialog: () => {\r\n            dispatch(openTorrentDownloadDialog());\r\n        },\r\n        openGetSourceDialog: () => {\r\n            dispatch(openGetSourceDialog());\r\n        },\r\n        openCopyDialog: () => {\r\n            dispatch(openCopyDialog());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n        openDecompressDialog: () => {\r\n            dispatch(openDecompressDialog());\r\n        },\r\n        openCompressDialog: () => {\r\n            dispatch(openCompressDialog());\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        openRelocateDialog: () => {\r\n            dispatch(openRelocateDialog());\r\n        },\r\n        openPreview: () => {\r\n            dispatch(openPreview());\r\n        },\r\n        toggleObjectInfoSidebar: (open) => {\r\n            dispatch(toggleObjectInfoSidebar(open));\r\n        },\r\n    };\r\n};\r\n\r\nclass ContextMenuCompoment extends Component {\r\n    X = 0;\r\n    Y = 0;\r\n\r\n    state = {};\r\n\r\n    componentDidMount = () => {\r\n        window.document.addEventListener(\"mousemove\", this.setPoint);\r\n    };\r\n\r\n    setPoint = (e) => {\r\n        this.Y = e.clientY;\r\n        this.X = e.clientX;\r\n    };\r\n\r\n    openArchiveDownload = () => {\r\n        this.props.changeContextMenu(\"file\", false);\r\n        this.props.openLoadingDialog(\"打包中...\");\r\n    };\r\n\r\n    openDownload = () => {\r\n        if (!allowSharePreview()) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"未登录用户无法预览\",\r\n                \"warning\"\r\n            );\r\n            this.props.changeContextMenu(\"file\", false);\r\n            return;\r\n        }\r\n        this.props.changeContextMenu(\"file\", false);\r\n        this.props.openLoadingDialog(\"获取下载地址...\");\r\n    };\r\n\r\n    enterFolder = () => {\r\n        this.props.navigateTo(\r\n            this.props.path === \"/\"\r\n                ? this.props.path + this.props.selected[0].name\r\n                : this.props.path + \"/\" + this.props.selected[0].name\r\n        );\r\n    };\r\n\r\n    clickUpload = (id) => {\r\n        this.props.changeContextMenu(\"empty\", false);\r\n        const uploadButton = document.getElementsByClassName(id)[0];\r\n        if (document.body.contains(uploadButton)) {\r\n            uploadButton.click();\r\n        } else {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"上传组件还未加载完成\",\r\n                \"warning\"\r\n            );\r\n        }\r\n    };\r\n\r\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\r\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\r\n    renderMenuItems = (items) => {\r\n        const res = [];\r\n        let key = 0;\r\n\r\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\r\n            let visibleCount = 0;\r\n            items[position].forEach((item) => {\r\n                if (item.condition) {\r\n                    res.push(\r\n                        <MenuItem dense key={key} onClick={item.onClick}>\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <Typography variant=\"inherit\">\r\n                                {item.text}\r\n                            </Typography>\r\n                        </MenuItem>\r\n                    );\r\n                    key++;\r\n                    visibleCount++;\r\n                }\r\n            });\r\n            if (visibleCount > 0 && position != \"bottom\") {\r\n                res.push(\r\n                    <Divider key={key} className={this.props.classes.divider} />\r\n                );\r\n                key++;\r\n            }\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const emptyMenuList = {\r\n            top: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => {\r\n                        this.props.refreshFileList();\r\n                        this.props.changeContextMenu(\r\n                            this.props.menuType,\r\n                            false\r\n                        );\r\n                    },\r\n                    icon: <RefreshIcon />,\r\n                    text: \"刷新\",\r\n                },\r\n            ],\r\n            center: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.clickUpload(\"uploadFileForm\"),\r\n                    icon: <UploadIcon />,\r\n                    text: \"上传文件\",\r\n                },\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.clickUpload(\"uploadFolderForm\"),\r\n                    icon: <FolderUpload />,\r\n                    text: \"上传目录\",\r\n                },\r\n                {\r\n                    condition: user.group.allowRemoteDownload,\r\n                    onClick: () => this.props.openRemoteDownloadDialog(),\r\n                    icon: <DownloadIcon />,\r\n                    text: \"离线下载\",\r\n                },\r\n            ],\r\n            bottom: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openCreateFolderDialog(),\r\n                    icon: <NewFolderIcon />,\r\n                    text: \"创建文件夹\",\r\n                },\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openCreateFileDialog(),\r\n                    icon: <FilePlus />,\r\n                    text: \"创建文件\",\r\n                },\r\n            ],\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    keepMounted\r\n                    open={this.props.menuOpen}\r\n                    onClose={() =>\r\n                        this.props.changeContextMenu(this.props.menuType, false)\r\n                    }\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: this.Y, left: this.X }}\r\n                    anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"left\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"left\",\r\n                    }}\r\n                >\r\n                    {this.props.menuType === \"empty\" && (\r\n                        <div>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() => {\r\n                                    this.props.refreshFileList();\r\n                                    this.props.changeContextMenu(\r\n                                        this.props.menuType,\r\n                                        false\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <RefreshIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">刷新</Typography>\r\n                            </MenuItem>\r\n                            <Divider className={classes.divider} />\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.clickUpload(\"uploadFileForm\")\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <UploadIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    上传文件\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.clickUpload(\"uploadFolderForm\")\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <FolderUpload />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    上传目录\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            {user.group.allowRemoteDownload && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openRemoteDownloadDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <DownloadIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        离线下载\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <Divider className={classes.divider} />\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.props.openCreateFolderDialog()\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <NewFolderIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    创建文件夹\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.props.openCreateFileDialog()\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <FilePlus />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    创建文件\r\n                                </Typography>\r\n                            </MenuItem>\r\n                        </div>\r\n                    )}\r\n                    {this.props.menuType !== \"empty\" && (\r\n                        <div>\r\n                            {!this.props.isMultiple && this.props.withFolder && (\r\n                                <div>\r\n                                    <MenuItem dense onClick={this.enterFolder}>\r\n                                        <StyledListItemIcon>\r\n                                            <OpenFolderIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            进入\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {isHomePage && (\r\n                                        <Divider className={classes.divider} />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {!this.props.isMultiple &&\r\n                                this.props.withFile &&\r\n                                (!this.props.share ||\r\n                                    this.props.share.preview) &&\r\n                                isPreviewable(this.props.selected[0].name) && (\r\n                                    <div>\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openPreview()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <OpenIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                打开\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    </div>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple && this.props.withFile && (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() => this.openDownload()}\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DownloadIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            下载\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {isHomePage && (\r\n                                        <Divider className={classes.divider} />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            {(this.props.isMultiple || this.props.withFolder) &&\r\n                                (user.group.allowArchiveDownload ||\r\n                                    !isHomePage) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.openArchiveDownload()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DownloadIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            打包下载\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple &&\r\n                                this.props.withFile &&\r\n                                isHomePage && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openGetSourceDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <LinkIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            获取外链\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple &&\r\n                                isHomePage &&\r\n                                user.group.allowRemoteDownload &&\r\n                                this.props.withFile &&\r\n                                isTorrent(this.props.selected[0].name) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openTorrentDownloadDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <MagnetOn />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            创建离线下载任务\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n                            {!this.props.isMultiple &&\r\n                                isHomePage &&\r\n                                user.group.compress &&\r\n                                this.props.withFile &&\r\n                                isCompressFile(this.props.selected[0].name) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openDecompressDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <Unarchive />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            解压缩\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {isHomePage && user.group.compress && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openCompressDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <Archive />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        创建压缩文件\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {isHomePage && user.group.relocate && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openRelocateDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <Transfer />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        转移存储策略\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() => this.props.openShareDialog()}\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <ShareIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        创建分享链接\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.toggleObjectInfoSidebar(true)\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <InfoOutlined />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        详细信息\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <Divider className={classes.divider} />\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openRenameDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <RenameIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            重命名\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {this.props.keywords === \"\" && (\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openCopyDialog()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <FileCopyIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                复制\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {isHomePage && (\r\n                                <div>\r\n                                    {this.props.keywords === \"\" && (\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openMoveDialog()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <MoveIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                移动\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                    <Divider className={classes.divider} />\r\n                                    <MenuItem\r\n                                        dense\r\n                                        className={classes.propover}\r\n                                        onClick={() =>\r\n                                            this.props.openRemoveDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DeleteIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            删除\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContextMenuCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    menuType: PropTypes.string.isRequired,\r\n};\r\n\r\nconst ContextMenu = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\r\n\r\nexport default ContextMenu;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    navigateTo,\r\n    changeContextMenu,\r\n    navigateUp,\r\n    setSelectedTarget,\r\n    openRemoveDialog,\r\n} from \"../../actions/index\";\r\nimport explorer from \"../../redux/explorer\";\r\nimport ObjectIcon from \"./ObjectIcon\";\r\nimport ContextMenu from \"./ContextMenu\";\r\nimport EmptyIcon from \"@material-ui/icons/Unarchive\";\r\nimport SadIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport classNames from \"classnames\";\r\nimport ImgPreivew from \"./ImgPreview\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { isMac } from \"../../utils\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    withStyles,\r\n    Typography,\r\n    Grid,\r\n    CircularProgress,\r\n    Paper,\r\n} from \"@material-ui/core\";\r\nimport { GlobalHotKeys, configure } from \"react-hotkeys\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n        margin: \"10px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: \"10px\",\r\n        overflowY: \"auto\",\r\n        height: \"calc(100vh - 113px)\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            overflowY: \"auto\",\r\n            height: \"calc(100vh - 113px)\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    rootTable: {\r\n        padding: \"0px\",\r\n        backgroundColor: theme.palette.background.paper.white,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            overflowY: \"auto\",\r\n            height: \"calc(100vh - 113px)\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    typeHeader: {\r\n        margin: \"10px 25px\",\r\n        color: \"#6b6b6b\",\r\n        fontWeight: \"500\",\r\n    },\r\n    loading: {\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        marginTop: \"40px\",\r\n    },\r\n    errorBox: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    errorMsg: {\r\n        marginTop: \"10px\",\r\n    },\r\n    emptyContainer: {\r\n        bottom: \"0\",\r\n        height: \"300px\",\r\n        margin: \"50px auto\",\r\n        width: \"300px\",\r\n        color: theme.palette.text.disabled,\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    emptyIcon: {\r\n        fontSize: \"160px\",\r\n    },\r\n    emptyInfoBig: {\r\n        fontSize: \"25px\",\r\n        color: theme.palette.text.disabled,\r\n    },\r\n    emptyInfoSmall: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    hideAuto: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    flexFix: {\r\n        minWidth: 0,\r\n    },\r\n    upButton: {\r\n        marginLeft: \"20px\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    clickAway: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    rootShare: {\r\n        height: \"100%\",\r\n        minHeight: 500,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        drawerDesktopOpen: state.viewUpdate.open,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n        sortMethod: state.viewUpdate.sortMethod,\r\n        fileList: state.explorer.fileList,\r\n        dirList: state.explorer.dirList,\r\n        loading: state.viewUpdate.navigatorLoading,\r\n        navigatorError: state.viewUpdate.navigatorError,\r\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\r\n        keywords: state.explorer.keywords,\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigateToPath: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        navigateUp: () => {\r\n            dispatch(navigateUp());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        changeSort: (method) => {\r\n            dispatch(explorer.actions.changeSortMethod(method));\r\n        },\r\n    };\r\n};\r\n\r\nclass ExplorerCompoment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.keyMap = {\r\n            DELETE_FILE: \"del\",\r\n            SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+a`,\r\n        };\r\n\r\n        this.handlers = {\r\n            DELETE_FILE: () => {\r\n                if (this.props.selected.length > 0 && !this.props.share) {\r\n                    this.props.openRemoveDialog();\r\n                }\r\n            },\r\n            SELECT_ALL: (e) => {\r\n                e.preventDefault();\r\n                if (\r\n                    this.props.selected.length >=\r\n                    this.props.dirList.length + this.props.fileList.length\r\n                ) {\r\n                    this.props.setSelectedTarget([]);\r\n                } else {\r\n                    this.props.setSelectedTarget([\r\n                        ...this.props.dirList,\r\n                        ...this.props.fileList,\r\n                    ]);\r\n                }\r\n            },\r\n        };\r\n\r\n        configure({\r\n            ignoreTags: [\"input\", \"select\", \"textarea\"],\r\n        });\r\n    }\r\n\r\n    contextMenu = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            this.props.keywords === \"\" &&\r\n            !pathHelper.isSharePage(this.props.location.pathname)\r\n        ) {\r\n            if (!this.props.loading) {\r\n                this.props.changeContextMenu(\"empty\", true);\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.away = 0;\r\n    }\r\n\r\n    ClickAway = (e) => {\r\n        const element = e.target;\r\n        if (element.dataset.clickaway) {\r\n            this.props.setSelectedTarget([]);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n\r\n        const showView =\r\n            !this.props.loading &&\r\n            (this.props.dirList.length !== 0 ||\r\n                this.props.fileList.length !== 0);\r\n        const listView = (\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    this.props.sortMethod === \"namePos\" ||\r\n                                    this.props.sortMethod === \"nameRev\"\r\n                                }\r\n                                direction={\r\n                                    this.props.sortMethod === \"namePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    this.props.changeSort(\r\n                                        this.props.sortMethod === \"namePos\"\r\n                                            ? \"nameRev\"\r\n                                            : \"namePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                名称\r\n                                {this.props.sortMethod === \"namePos\" ||\r\n                                this.props.sortMethod === \"nameRev\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {this.props.sortMethod === \"nameRev\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell className={classes.hideAuto}>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    this.props.sortMethod === \"sizePos\" ||\r\n                                    this.props.sortMethod === \"sizeRes\"\r\n                                }\r\n                                direction={\r\n                                    this.props.sortMethod === \"sizePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    this.props.changeSort(\r\n                                        this.props.sortMethod === \"sizePos\"\r\n                                            ? \"sizeRes\"\r\n                                            : \"sizePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                大小\r\n                                {this.props.sortMethod === \"sizePos\" ||\r\n                                this.props.sortMethod === \"sizeRes\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {this.props.sortMethod === \"sizeRes\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell className={classes.hideAuto}>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    this.props.sortMethod === \"timePos\" ||\r\n                                    this.props.sortMethod === \"timeRev\"\r\n                                }\r\n                                direction={\r\n                                    this.props.sortMethod === \"timePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    this.props.changeSort(\r\n                                        this.props.sortMethod === \"timePos\"\r\n                                            ? \"timeRev\"\r\n                                            : \"timePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                日期\r\n                                {this.props.sortMethod === \"timePos\" ||\r\n                                this.props.sortMethod === \"timeRev\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {this.props.sortMethod === \"sizeRes\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {pathHelper.isMobile() && this.props.path !== \"/\" && (\r\n                        <ObjectIcon\r\n                            file={{\r\n                                type: \"up\",\r\n                                name: \"上级目录\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    {this.props.dirList.map((value, index) => (\r\n                        <ObjectIcon key={value.id} file={value} index={index} />\r\n                    ))}\r\n                    {this.props.fileList.map((value, index) => (\r\n                        <ObjectIcon key={value.id} file={value} index={index} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        );\r\n\r\n        const normalView = (\r\n            <div className={classes.flexFix}>\r\n                {this.props.dirList.length !== 0 && (\r\n                    <>\r\n                        <Typography\r\n                            data-clickAway={\"true\"}\r\n                            variant=\"body2\"\r\n                            className={classes.typeHeader}\r\n                        >\r\n                            文件夹\r\n                        </Typography>\r\n                        <Grid\r\n                            data-clickAway={\"true\"}\r\n                            container\r\n                            spacing={0}\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            {this.props.dirList.map((value, index) => (\r\n                                <Grid\r\n                                    key={value.id}\r\n                                    item\r\n                                    xs={6}\r\n                                    md={3}\r\n                                    sm={4}\r\n                                    lg={2}\r\n                                >\r\n                                    <ObjectIcon\r\n                                        key={value.id}\r\n                                        file={value}\r\n                                        index={index}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n                {this.props.fileList.length !== 0 && (\r\n                    <>\r\n                        <Typography\r\n                            data-clickAway={\"true\"}\r\n                            variant=\"body2\"\r\n                            className={classes.typeHeader}\r\n                        >\r\n                            文件\r\n                        </Typography>\r\n                        <Grid\r\n                            data-clickAway={\"true\"}\r\n                            container\r\n                            spacing={0}\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            {this.props.fileList.map((value, index) => (\r\n                                <Grid\r\n                                    key={value.id}\r\n                                    item\r\n                                    xs={6}\r\n                                    md={3}\r\n                                    sm={4}\r\n                                    lg={2}\r\n                                >\r\n                                    <ObjectIcon\r\n                                        key={value.id}\r\n                                        index={index}\r\n                                        file={value}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n        const view = this.props.viewMethod === \"list\" ? listView : normalView;\r\n        return (\r\n            <div\r\n                onContextMenu={this.contextMenu}\r\n                onClick={this.ClickAway}\r\n                className={classNames(\r\n                    {\r\n                        [classes.root]: this.props.viewMethod !== \"list\",\r\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\r\n                        [classes.rootShare]: this.props.share,\r\n                    },\r\n                    classes.button\r\n                )}\r\n            >\r\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\r\n                <ContextMenu share={this.props.share} />\r\n                <ImgPreivew />\r\n                {this.props.navigatorError && (\r\n                    <Paper elevation={1} className={classes.errorBox}>\r\n                        <Typography variant=\"h5\" component=\"h3\">\r\n                            :( 请求时出现错误\r\n                        </Typography>\r\n                        <Typography\r\n                            color={\"textSecondary\"}\r\n                            className={classes.errorMsg}\r\n                        >\r\n                            {this.props.navigatorErrorMsg.message}\r\n                        </Typography>\r\n                    </Paper>\r\n                )}\r\n\r\n                {this.props.loading && !this.props.navigatorError && (\r\n                    <div className={classes.loading}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                )}\r\n\r\n                {this.props.keywords === \"\" &&\r\n                    isHomePage &&\r\n                    this.props.dirList.length === 0 &&\r\n                    this.props.fileList.length === 0 &&\r\n                    !this.props.loading &&\r\n                    !this.props.navigatorError && (\r\n                        <div className={classes.emptyContainer}>\r\n                            <EmptyIcon className={classes.emptyIcon} />\r\n                            <div className={classes.emptyInfoBig}>\r\n                                拖拽文件至此\r\n                            </div>\r\n                            <div className={classes.emptyInfoSmall}>\r\n                                或点击右下方“上传文件”按钮添加文件\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                {((this.props.keywords !== \"\" &&\r\n                    this.props.dirList.length === 0 &&\r\n                    this.props.fileList.length === 0 &&\r\n                    !this.props.loading &&\r\n                    !this.props.navigatorError) ||\r\n                    (this.props.dirList.length === 0 &&\r\n                        this.props.fileList.length === 0 &&\r\n                        !this.props.loading &&\r\n                        !this.props.navigatorError &&\r\n                        !isHomePage)) && (\r\n                    <div className={classes.emptyContainer}>\r\n                        <SadIcon className={classes.emptyIcon} />\r\n                        <div className={classes.emptyInfoBig}>\r\n                            什么都没有找到\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {showView && view}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nExplorerCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Explorer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\r\n\r\nexport default Explorer;\r\n","import React from \"react\";\r\nimport { BulletList } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"100%\",\r\n        // padding: 40,\r\n        // [theme.breakpoints.down(\"md\")]: {\r\n        //     width: \"100%\",\r\n        //     padding: 10\r\n        // }\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => (\r\n    <BulletList\r\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n        className={props.className}\r\n    />\r\n);\r\n\r\nfunction ListLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListLoading;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Clear, Folder } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { setSideBar } from \"../../../redux/explorer/action\";\r\nimport TypeIcon from \"../TypeIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { navigateTo, toggleSnackbar } from \"../../../actions\";\r\nimport { filename, sizeToString } from \"../../../utils\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport ListLoading from \"../../Placeholder/ListLoading\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        boxShadow:\r\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\r\n    },\r\n    drawerContainer: {\r\n        overflow: \"auto\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: theme.spacing(3),\r\n        placeContent: \"space-between\",\r\n    },\r\n    fileIcon: { width: 33, height: 33 },\r\n    fileIconSVG: { fontSize: 20 },\r\n    folderIcon: {\r\n        color: theme.palette.text.secondary,\r\n        width: 33,\r\n        height: 33,\r\n    },\r\n    fileName: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        wordBreak: \"break-all\",\r\n        flexGrow: 2,\r\n    },\r\n    closeIcon: {\r\n        placeSelf: \"flex-start\",\r\n        marginTop: 2,\r\n    },\r\n    propsContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    propsLabel: {\r\n        color: theme.palette.text.secondary,\r\n        padding: theme.spacing(1),\r\n    },\r\n    propsTime: {\r\n        color: theme.palette.text.disabled,\r\n        padding: theme.spacing(1),\r\n    },\r\n    propsValue: {\r\n        padding: theme.spacing(1),\r\n        wordBreak: \"break-all\",\r\n    },\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SideDrawer() {\r\n    const dispatch = useDispatch();\r\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\r\n        dispatch,\r\n    ]);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n    const keywords = useSelector((state) => state.explorer.keywords);\r\n    const [target, setTarget] = useState(null);\r\n    const [details, setDetails] = useState(null);\r\n    const loadProps = (object) => {\r\n        API.get(\r\n            \"/object/property/\" +\r\n                object.id +\r\n                \"?trace_root=\" +\r\n                (keywords !== \"\" ? \"true\" : \"false\") +\r\n                \"&is_folder=\" +\r\n                (object.type === \"dir\").toString()\r\n        )\r\n            .then((response) => {\r\n                setDetails(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setDetails(null);\r\n        if (sideBarOpen) {\r\n            if (selected.length !== 1) {\r\n                SetSideBar(false);\r\n            } else {\r\n                setTarget(selected[0]);\r\n                loadProps(selected[0]);\r\n            }\r\n        }\r\n    }, [selected, sideBarOpen]);\r\n\r\n    const classes = useStyles();\r\n    const propsItem = [\r\n        {\r\n            label: \"大小\",\r\n            value: (d, t) =>\r\n                sizeToString(d.size) +\r\n                \"  (\" +\r\n                d.size.toLocaleString() +\r\n                \" 字节)\",\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: \"存储策略\",\r\n            value: (d, t) => d.policy,\r\n            show: (d) => d.type === \"file\",\r\n        },\r\n        {\r\n            label: \"包含目录\",\r\n            value: (d, t) => d.child_folder_num.toLocaleString() + \" \" + \"个\",\r\n            show: (d) => d.type === \"dir\",\r\n        },\r\n        {\r\n            label: \"包含文件\",\r\n            value: (d, t) => d.child_file_num.toLocaleString() + \" \" + \"个\",\r\n            show: (d) => d.type === \"dir\",\r\n        },\r\n        {\r\n            label: \"所在目录\",\r\n            // eslint-disable-next-line react/display-name\r\n            value: (d, t) => {\r\n                const path = d.path === \"\" ? t.path : d.path;\r\n                const name = filename(path);\r\n                return (\r\n                    <Tooltip title={path}>\r\n                        <Link\r\n                            href={\"javascript:void\"}\r\n                            onClick={() => NavigateTo(path)}\r\n                        >\r\n                            {name === \"\" ? \"根目录\" : name}\r\n                        </Link>\r\n                    </Tooltip>\r\n                );\r\n            },\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: \"修改于\",\r\n            value: (d, t) =>\r\n                formatLocalTime(d.updated_at, \"YYYY/MM/DD  H:mm:ss\"),\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: \"创建于\",\r\n            value: (d) => formatLocalTime(d.created_at, \"YYYY/MM/DD  H:mm:ss\"),\r\n            show: (d) => true,\r\n        },\r\n    ];\r\n    const content = (\r\n        <Grid container className={classes.propsContainer}>\r\n            {!details && <ListLoading />}\r\n            {details && (\r\n                <>\r\n                    {propsItem.map((item) => {\r\n                        if (item.show(target)) {\r\n                            return (\r\n                                <>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={5}\r\n                                        className={classes.propsLabel}\r\n                                    >\r\n                                        {item.label}\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={7}\r\n                                        className={classes.propsValue}\r\n                                    >\r\n                                        {item.value(details, target)}\r\n                                    </Grid>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })}\r\n                    {target.type === \"dir\" && (\r\n                        <Grid item xs={12} className={classes.propsTime}>\r\n                            统计于{\" \"}\r\n                            <TimeAgo\r\n                                datetime={details.query_date}\r\n                                locale=\"zh_CN\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Grid>\r\n    );\r\n    return (\r\n        <>\r\n            <Hidden smUp>\r\n                <Dialog\r\n                    fullScreen\r\n                    open={sideBarOpen}\r\n                    TransitionComponent={Transition}\r\n                >\r\n                    {target && (\r\n                        <>\r\n                            <AppBar className={classes.appBar}>\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => SetSideBar(false)}\r\n                                        aria-label=\"close\"\r\n                                    >\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        className={classes.title}\r\n                                    >\r\n                                        {target.name}\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            {content}\r\n                        </>\r\n                    )}\r\n                </Dialog>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    open={sideBarOpen}\r\n                    anchor=\"right\"\r\n                >\r\n                    <Toolbar />\r\n                    <div className={classes.drawerContainer}>\r\n                        {target && (\r\n                            <>\r\n                                <div className={classes.header}>\r\n                                    {target.type === \"dir\" && (\r\n                                        <Folder\r\n                                            className={classes.folderIcon}\r\n                                        />\r\n                                    )}\r\n                                    {target.type !== \"dir\" && (\r\n                                        <TypeIcon\r\n                                            isUpload\r\n                                            className={classes.fileIcon}\r\n                                            iconClassName={classes.fileIconSVG}\r\n                                            fileName={target.name}\r\n                                        />\r\n                                    )}\r\n                                    <div className={classes.fileName}>\r\n                                        <Typography variant=\"h6\" gutterBottom>\r\n                                            {target.name}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <IconButton\r\n                                        onClick={() => SetSideBar(false)}\r\n                                        className={classes.closeIcon}\r\n                                        aria-label=\"close\"\r\n                                        size={\"small\"}\r\n                                    >\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <Divider />\r\n                        {content}\r\n                    </div>\r\n                </Drawer>\r\n            </Hidden>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Navigator from \"./Navigator/Navigator\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport DragLayer from \"./DnD/DragLayer\";\r\nimport Explorer from \"./Explorer\";\r\nimport Modals from \"./Modals\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    closeAllModals,\r\n    navigateTo,\r\n    setSelectedTarget,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SideDrawer from \"./Sidebar/SideDrawer\";\r\nimport { ImageLoader } from \"@abslant/cd-image-loader\";\r\n\r\nconst styles = () => ({});\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSubTitle: (text) => {\r\n            dispatch(changeSubTitle(text));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        closeAllModals: () => {\r\n            dispatch(closeAllModals());\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n    };\r\n};\r\n\r\nclass FileManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSelectedTarget([]);\r\n        this.props.closeAllModals();\r\n        this.props.navigateTo(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n            this.props.changeSubTitle(null);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DndProvider backend={HTML5Backend}>\r\n                    <Modals share={this.props.share} />\r\n                    <Navigator\r\n                        isShare={this.props.isShare}\r\n                        share={this.props.share}\r\n                    />\r\n                    <Explorer share={this.props.share} />\r\n                    <DragLayer />\r\n                    <ImageLoader />\r\n                </DndProvider>\r\n                <SideDrawer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileManager.propTypes = {};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(FileManager)));\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport AdSense from 'react-adsense';\r\nimport DPlayer from \"react-dplayer\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { getBaseURL } from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n        maxHeight: 600,\r\n    },\r\n    ads:{\r\n        width: '100%',\r\n        height: 90,\r\n        maxHeight: 90,\r\n        textAlign: \"center\",\r\n        marginTop: \"1.5rem\"\r\n    }\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function VideoViewer() {\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <DPlayer\r\n                    className={classes.player}\r\n                    options={{\r\n                        video: {\r\n                            url:\r\n                                getBaseURL() +\r\n                                (pathHelper.isSharePage(location.pathname)\r\n                                    ? \"/share/preview/\" +\r\n                                      id +\r\n                                      (query.get(\"share_path\") !== \"\"\r\n                                          ? \"?path=\" +\r\n                                            encodeURIComponent(\r\n                                                query.get(\"share_path\")\r\n                                            )\r\n                                          : \"\")\r\n                                    : \"/file/preview/\" + query.get(\"id\")),\r\n                        },\r\n                    }}\r\n                />\r\n            </Paper>\r\n            <div className={classes.ads}>\r\n                <AdSense.Google\r\n                    style={{ display:'inline-block',minWidth:320,maxWidth:970,width:'100%',height:90 }}\r\n                    client='ca-pub-7329474538416487'\r\n                    slot='8294203043'\r\n                    format=''\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\n\r\nimport {\r\n    Tooltip,\r\n    Card,\r\n    Avatar,\r\n    CardHeader,\r\n    Typography,\r\n    Grid,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router\";\r\nimport TimeAgo from \"timeago-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 17,\r\n    },\r\n    orderSelect: {\r\n        textAlign: \"right\",\r\n        marginTop: 5,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function SearchResult() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [total, setTotal] = useState(0);\r\n    const [shareList, setShareList] = useState([]);\r\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const search = (keywords, page, orderBy) => {\r\n        const order = orderBy.split(\" \");\r\n        API.get(\r\n            \"/share/search?page=\" +\r\n                page +\r\n                \"&order_by=\" +\r\n                order[0] +\r\n                \"&order=\" +\r\n                order[1] +\r\n                \"&keywords=\" +\r\n                encodeURIComponent(keywords)\r\n        )\r\n            .then((response) => {\r\n                if (response.data.items.length === 0) {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"找不到符合条件的分享\",\r\n                        \"info\"\r\n                    );\r\n                }\r\n                setTotal(response.data.total);\r\n                setShareList(response.data.items);\r\n            })\r\n            .catch(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const keywords = query.get(\"keywords\");\r\n        if (keywords) {\r\n            search(keywords, page, orderBy);\r\n        } else {\r\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\r\n        }\r\n    }, [location]);\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n        const keywords = query.get(\"keywords\");\r\n        search(keywords, value, orderBy);\r\n    };\r\n\r\n    const handleOrderChange = (event) => {\r\n        setOrderBy(event.target.value);\r\n        const keywords = query.get(\"keywords\");\r\n        search(keywords, page, event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Grid container>\r\n                <Grid sm={6} xs={6}>\r\n                    <Typography color=\"textSecondary\" variant=\"h4\">\r\n                        搜索结果\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\r\n                    <FormControl>\r\n                        <Select\r\n                            color={\"secondary\"}\r\n                            onChange={handleOrderChange}\r\n                            value={orderBy}\r\n                        >\r\n                            <MenuItem value={\"created_at DESC\"}>\r\n                                创建日期由晚到早\r\n                            </MenuItem>\r\n                            <MenuItem value={\"created_at ASC\"}>\r\n                                创建日期由早到晚\r\n                            </MenuItem>\r\n                            <MenuItem value={\"downloads DESC\"}>\r\n                                下载次数由大到小\r\n                            </MenuItem>\r\n                            <MenuItem value={\"downloads ASC\"}>\r\n                                下载次数由小到大\r\n                            </MenuItem>\r\n                            <MenuItem value={\"views DESC\"}>\r\n                                浏览次数由大到小\r\n                            </MenuItem>\r\n                            <MenuItem value={\"views ASC\"}>\r\n                                浏览次数由小到大\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={24} className={classes.gird}>\r\n                {shareList.map((value) => (\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={4}\r\n                        key={value.id}\r\n                        className={classes.cardContainer}\r\n                    >\r\n                        <Card className={classes.card}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <div>\r\n                                        {!value.is_dir && (\r\n                                            <TypeIcon\r\n                                                fileName={\r\n                                                    value.source\r\n                                                        ? value.source.name\r\n                                                        : \"\"\r\n                                                }\r\n                                                isUpload\r\n                                            />\r\n                                        )}{\" \"}\r\n                                        {value.is_dir && (\r\n                                            <Avatar\r\n                                                className={classes.avatarFolder}\r\n                                            >\r\n                                                <FolderIcon />\r\n                                            </Avatar>\r\n                                        )}\r\n                                    </div>\r\n                                }\r\n                                action={\r\n                                    <Tooltip placement=\"top\" title=\"打开\">\r\n                                        <IconButton\r\n                                            onClick={() =>\r\n                                                history.push(\"/s/\" + value.key)\r\n                                            }\r\n                                        >\r\n                                            <OpenIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                }\r\n                                title={\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={\r\n                                            value.source\r\n                                                ? value.source.name\r\n                                                : \"[原始对象不存在]\"\r\n                                        }\r\n                                    >\r\n                                        <Typography\r\n                                            noWrap\r\n                                            className={classes.shareTitle}\r\n                                        >\r\n                                            {value.source\r\n                                                ? value.source.name\r\n                                                : \"[原始对象不存在]\"}{\" \"}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n                                }\r\n                                subheader={\r\n                                    <span>\r\n                                        分享于{\" \"}\r\n                                        <TimeAgo\r\n                                            datetime={value.create_date}\r\n                                            locale=\"zh_CN\"\r\n                                        />\r\n                                    </span>\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <div className={classes.loadMore}>\r\n                <Pagination\r\n                    count={Math.ceil(total / 18)}\r\n                    onChange={handlePageChange}\r\n                    color=\"secondary\"\r\n                />\r\n            </div>{\" \"}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\r\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport {\r\n    withStyles,\r\n    Tooltip,\r\n    Card,\r\n    Avatar,\r\n    CardHeader,\r\n    CardActions,\r\n    Typography,\r\n    Grid,\r\n    IconButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Button,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ToggleIcon from \"material-ui-toggle-icon\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    cardContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 17,\r\n    },\r\n    orderSelect: {\r\n        textAlign: \"right\",\r\n        marginTop: 5,\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass MyShareCompoment extends Component {\r\n    state = {\r\n        page: 1,\r\n        total: 0,\r\n        shareList: [],\r\n        showPwd: null,\r\n        orderBy: \"created_at DESC\",\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadList(1, this.state.orderBy);\r\n    };\r\n\r\n    showPwd = (pwd) => {\r\n        this.setState({ showPwd: pwd });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ showPwd: null });\r\n    };\r\n\r\n    removeShare = (id) => {\r\n        API.delete(\"/share/\" + id)\r\n            .then(() => {\r\n                let oldList = this.state.shareList;\r\n                oldList = oldList.filter((value) => {\r\n                    return value.key !== id;\r\n                });\r\n                this.setState({\r\n                    shareList: oldList,\r\n                    total: this.state.total - 1,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"分享已取消\",\r\n                    \"success\"\r\n                );\r\n                if (oldList.length === 0) {\r\n                    this.loadList(1, this.state.orderBy);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changePermission = (id) => {\r\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\r\n        const oldList = this.state.shareList;\r\n        const shareIndex = oldList.findIndex((value) => {\r\n            return value.key === id;\r\n        });\r\n        API.patch(\"/share/\" + id, {\r\n            prop: \"password\",\r\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\r\n        })\r\n            .then((response) => {\r\n                oldList[shareIndex].password = response.data;\r\n                this.setState({\r\n                    shareList: oldList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changePreviewOption = (id) => {\r\n        const oldList = this.state.shareList;\r\n        const shareIndex = oldList.findIndex((value) => {\r\n            return value.key === id;\r\n        });\r\n        API.patch(\"/share/\" + id, {\r\n            prop: \"preview_enabled\",\r\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\r\n        })\r\n            .then((response) => {\r\n                oldList[shareIndex].preview = response.data;\r\n                this.setState({\r\n                    shareList: oldList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadList = (page, orderBy) => {\r\n        const order = orderBy.split(\" \");\r\n        API.get(\r\n            \"/share?page=\" +\r\n                page +\r\n                \"&order_by=\" +\r\n                order[0] +\r\n                \"&order=\" +\r\n                order[1]\r\n        )\r\n            .then((response) => {\r\n                if (response.data.items.length === 0) {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"没有更多了\",\r\n                        \"info\"\r\n                    );\r\n                }\r\n                this.setState({\r\n                    total: response.data.total,\r\n                    shareList: response.data.items,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\r\n            });\r\n    };\r\n\r\n    handlePageChange = (event, value) => {\r\n        this.setState({\r\n            page: value,\r\n        });\r\n        this.loadList(value, this.state.orderBy);\r\n    };\r\n\r\n    handleOrderChange = (event) => {\r\n        this.setState({\r\n            orderBy: event.target.value,\r\n        });\r\n        this.loadList(this.state.page, event.target.value);\r\n    };\r\n\r\n    isExpired = (share) => {\r\n        return share.expire < -1 || share.remain_downloads === 0;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Grid container>\r\n                    <Grid sm={6} xs={6}>\r\n                        <Typography color=\"textSecondary\" variant=\"h4\">\r\n                            我的分享\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\r\n                        <FormControl>\r\n                            <Select\r\n                                color={\"secondary\"}\r\n                                onChange={this.handleOrderChange}\r\n                                value={this.state.orderBy}\r\n                            >\r\n                                <MenuItem value={\"created_at DESC\"}>\r\n                                    创建日期由晚到早\r\n                                </MenuItem>\r\n                                <MenuItem value={\"created_at ASC\"}>\r\n                                    创建日期由早到晚\r\n                                </MenuItem>\r\n                                <MenuItem value={\"downloads DESC\"}>\r\n                                    下载次数由大到小\r\n                                </MenuItem>\r\n                                <MenuItem value={\"downloads ASC\"}>\r\n                                    下载次数由小到大\r\n                                </MenuItem>\r\n                                <MenuItem value={\"views DESC\"}>\r\n                                    浏览次数由大到小\r\n                                </MenuItem>\r\n                                <MenuItem value={\"views ASC\"}>\r\n                                    浏览次数由小到大\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={24} className={classes.gird}>\r\n                    {this.state.shareList.map((value) => (\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={4}\r\n                            key={value.id}\r\n                            className={classes.cardContainer}\r\n                        >\r\n                            <Card className={classes.card}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <div>\r\n                                            {!value.is_dir && (\r\n                                                <TypeIcon\r\n                                                    fileName={\r\n                                                        value.source\r\n                                                            ? value.source.name\r\n                                                            : \"\"\r\n                                                    }\r\n                                                    isUpload\r\n                                                />\r\n                                            )}{\" \"}\r\n                                            {value.is_dir && (\r\n                                                <Avatar\r\n                                                    className={\r\n                                                        classes.avatarFolder\r\n                                                    }\r\n                                                >\r\n                                                    <FolderIcon />\r\n                                                </Avatar>\r\n                                            )}\r\n                                        </div>\r\n                                    }\r\n                                    title={\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            title={\r\n                                                value.source\r\n                                                    ? value.source.name\r\n                                                    : \"[原始对象不存在]\"\r\n                                            }\r\n                                        >\r\n                                            <Typography\r\n                                                noWrap\r\n                                                className={classes.shareTitle}\r\n                                            >\r\n                                                {value.source\r\n                                                    ? value.source.name\r\n                                                    : \"[原始对象不存在]\"}{\" \"}\r\n                                            </Typography>\r\n                                        </Tooltip>\r\n                                    }\r\n                                    subheader={\r\n                                        <span>\r\n                                            {formatLocalTime(\r\n                                                value.create_date,\r\n                                                \"YYYY-MM-DD H:mm:ss\"\r\n                                            )}\r\n                                            {this.isExpired(value) && (\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    className={classes.badge}\r\n                                                    label=\"已失效\"\r\n                                                />\r\n                                            )}\r\n                                        </span>\r\n                                    }\r\n                                />\r\n                                <Divider />\r\n                                <CardActions\r\n                                    disableActionSpacing\r\n                                    style={{\r\n                                        display: \"block\",\r\n                                        textAlign: \"right\",\r\n                                    }}\r\n                                >\r\n                                    <Tooltip placement=\"top\" title=\"打开\">\r\n                                        <IconButton\r\n                                            onClick={() =>\r\n                                                this.props.history.push(\r\n                                                    \"/s/\" +\r\n                                                        value.key +\r\n                                                        (value.password === \"\"\r\n                                                            ? \"\"\r\n                                                            : \"?password=\" +\r\n                                                              value.password)\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <OpenIcon fontSize={\"small\"} />\r\n                                        </IconButton>\r\n                                    </Tooltip>{\" \"}\r\n                                    {value.password !== \"\" && (\r\n                                        <>\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                title=\"变更为公开分享\"\r\n                                                onClick={() =>\r\n                                                    this.changePermission(\r\n                                                        value.key\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <LockIcon\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                title=\"查看密码\"\r\n                                                onClick={() =>\r\n                                                    this.showPwd(value.password)\r\n                                                }\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <VpnKey\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </>\r\n                                    )}\r\n                                    {value.password === \"\" && (\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            title=\"变更为私密分享\"\r\n                                            onClick={() =>\r\n                                                this.changePermission(value.key)\r\n                                            }\r\n                                        >\r\n                                            <IconButton>\r\n                                                <UnlockIcon\r\n                                                    fontSize={\"small\"}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    )}\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={\r\n                                            value.preview\r\n                                                ? \"禁止预览\"\r\n                                                : \"允许预览\"\r\n                                        }\r\n                                        onClick={() =>\r\n                                            this.changePreviewOption(value.key)\r\n                                        }\r\n                                    >\r\n                                        <IconButton>\r\n                                            <ToggleIcon\r\n                                                on={value.preview}\r\n                                                onIcon={\r\n                                                    <EyeIcon\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                }\r\n                                                offIcon={\r\n                                                    <VisibilityOff\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title=\"取消分享\"\r\n                                        onClick={() =>\r\n                                            this.removeShare(value.key)\r\n                                        }\r\n                                    >\r\n                                        <IconButton>\r\n                                            <DeleteIcon fontSize={\"small\"} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <div className={classes.loadMore}>\r\n                    <Pagination\r\n                        count={Math.ceil(this.state.total / 18)}\r\n                        onChange={this.handlePageChange}\r\n                        color=\"secondary\"\r\n                    />\r\n                </div>{\" \"}\r\n                <Dialog\r\n                    open={this.state.showPwd !== null}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            value={this.state.showPwd}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>{\" \"}\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            关闭{\" \"}\r\n                        </Button>{\" \"}\r\n                    </DialogActions>{\" \"}\r\n                </Dialog>{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyShare = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(MyShareCompoment)));\r\n\r\nexport default MyShare;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    content: {\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nexport default function SelectFileDialog(props) {\r\n    const [files, setFiles] = useState(props.files);\r\n\r\n    useEffect(() => {\r\n        setFiles(props.files);\r\n    }, [props.files]);\r\n\r\n    const handleChange = (index) => (event) => {\r\n        const filesCopy = [...files];\r\n        // eslint-disable-next-line\r\n        filesCopy.map((v, k) => {\r\n            if (v.index === index) {\r\n                filesCopy[k] = {\r\n                    ...filesCopy[k],\r\n                    selected: event.target.checked ? \"true\" : \"false\",\r\n                };\r\n            }\r\n        });\r\n        setFiles(filesCopy);\r\n    };\r\n\r\n    const submit = () => {\r\n        const index = [];\r\n        // eslint-disable-next-line\r\n        files.map((v) => {\r\n            if (v.selected === \"true\") {\r\n                index.push(parseInt(v.index));\r\n            }\r\n        });\r\n        props.onSubmit(index);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\r\n            <DialogContent dividers={\"paper\"} className={classes.content}>\r\n                {files.map((v, k) => {\r\n                    return (\r\n                        <MenuItem key={k}>\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            onChange={handleChange(v.index)}\r\n                                            checked={v.selected === \"true\"}\r\n                                            value=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label={v.path}\r\n                                />\r\n                            </FormGroup>\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={submit}\r\n                        disabled={props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    darken,\r\n    IconButton,\r\n    lighten,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { hex2bin, sizeToString } from \"../../utils\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport API from \"../../middleware/Api\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport SelectFileDialog from \"../Modals/SelectFile\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {},\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: \"20px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    iconContainer: {\r\n        width: \"90px\",\r\n        height: \"96px\",\r\n        padding: \" 35px 29px 29px 29px\",\r\n        paddingLeft: \"35px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        minWidth: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\r\n        },\r\n    },\r\n    contentSide: {\r\n        minWidth: 0,\r\n        paddingTop: \"24px\",\r\n        paddingRight: \"28px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    iconBig: {\r\n        fontSize: \"30px\",\r\n    },\r\n    iconMultiple: {\r\n        fontSize: \"30px\",\r\n        color: \"#607D8B\",\r\n    },\r\n    progress: {\r\n        marginTop: 8,\r\n        marginBottom: 4,\r\n    },\r\n    expand: {\r\n        transition: \".15s transform ease-in-out\",\r\n    },\r\n    expanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    subFileName: {\r\n        display: \"flex\",\r\n    },\r\n    subFileIcon: {\r\n        marginRight: \"20px\",\r\n    },\r\n    scroll: {\r\n        overflowY: \"auto\",\r\n    },\r\n    action: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"right\",\r\n    },\r\n    actionButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    info: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    bitmap: {\r\n        width: \"100%\",\r\n        height: \"50px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nexport default function DownloadingCard(props) {\r\n    const canvasRef = React.createRef();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const [expanded, setExpanded] = React.useState(\"\");\r\n    const [task, setTask] = React.useState(props.task);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\r\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setTask(props.task);\r\n    }, [props.task]);\r\n\r\n    useEffect(() => {\r\n        if (task.info.bitfield === \"\") {\r\n            return;\r\n        }\r\n        let result = \"\";\r\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\r\n            result += hex2bin(str);\r\n        });\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.strokeStyle = theme.palette.primary.main;\r\n        for (let i = 0; i < canvas.width; i++) {\r\n            let bit =\r\n                result[\r\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\r\n                ];\r\n            bit = bit ? bit : result.slice(-1);\r\n            if (bit === \"1\") {\r\n                context.beginPath();\r\n                context.moveTo(i, 0);\r\n                context.lineTo(i, canvas.height);\r\n                context.stroke();\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [task.info.bitfield, task.info.numPieces, theme]);\r\n\r\n    const getPercent = (completed, total) => {\r\n        if (total === 0) {\r\n            return 0;\r\n        }\r\n        return (completed / total) * 100;\r\n    };\r\n\r\n    const activeFiles = useCallback(() => {\r\n        return task.info.files.filter((v) => v.selected === \"true\");\r\n    }, [task.info.files]);\r\n\r\n    const deleteFile = (index) => {\r\n        setLoading(true);\r\n        const current = activeFiles();\r\n        const newIndex = [];\r\n        const newFiles = [];\r\n        // eslint-disable-next-line\r\n        current.map((v) => {\r\n            if (v.index !== index && v.selected) {\r\n                newIndex.push(parseInt(v.index));\r\n                newFiles.push({\r\n                    ...v,\r\n                    selected: \"true\",\r\n                });\r\n            } else {\r\n                newFiles.push({\r\n                    ...v,\r\n                    selected: \"false\",\r\n                });\r\n            }\r\n        });\r\n        API.put(\"/aria2/select/\" + task.info.gid, {\r\n            indexes: newIndex,\r\n        })\r\n            .then(() => {\r\n                setTask({\r\n                    ...task,\r\n                    info: {\r\n                        ...task.info,\r\n                        files: newFiles,\r\n                    },\r\n                });\r\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const getDownloadName = useCallback(() => {\r\n        if (task.info.bittorrent.info.name !== \"\") {\r\n            return task.info.bittorrent.info.name;\r\n        }\r\n        return task.name === \".\" ? \"[未知]\" : task.name;\r\n    }, [task]);\r\n\r\n    const getIcon = useCallback(() => {\r\n        if (task.info.bittorrent.mode === \"multi\") {\r\n            return (\r\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\r\n                    <PermMediaIcon className={classes.iconMultiple} />\r\n                </Badge>\r\n            );\r\n        } else {\r\n            return (\r\n                <TypeIcon\r\n                    className={classes.iconBig}\r\n                    fileName={getDownloadName(task)}\r\n                />\r\n            );\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [task, classes]);\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        API.delete(\"/aria2/task/\" + task.info.gid)\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"任务已取消，状态会在稍后更新\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const changeSelectedFile = (fileIndex) => {\r\n        setLoading(true);\r\n        API.put(\"/aria2/select/\" + task.info.gid, {\r\n            indexes: fileIndex,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"操作成功，状态会在稍后更新\",\r\n                    \"success\"\r\n                );\r\n                setSelectDialogOpen(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <SelectFileDialog\r\n                open={selectDialogOpen}\r\n                onClose={() => setSelectDialogOpen(false)}\r\n                modalsLoading={loading}\r\n                files={selectFileOption}\r\n                onSubmit={changeSelectedFile}\r\n            />\r\n            <ExpansionPanel\r\n                square\r\n                expanded={expanded === task.info.gid}\r\n                onChange={handleChange(task.info.gid)}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div className={classes.iconContainer}>{getIcon()}</div>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography color=\"primary\" noWrap>\r\n                            <Tooltip title={getDownloadName()}>\r\n                                <span>{getDownloadName()}</span>\r\n                            </Tooltip>\r\n                        </Typography>\r\n                        <LinearProgress\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            className={classes.progress}\r\n                            value={getPercent(task.downloaded, task.total)}\r\n                        />\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            noWrap\r\n                        >\r\n                            {task.total > 0 && (\r\n                                <span>\r\n                                    {getPercent(\r\n                                        task.downloaded,\r\n                                        task.total\r\n                                    ).toFixed(2)}\r\n                                    % -{\" \"}\r\n                                    {task.downloaded === 0\r\n                                        ? \"0Bytes\"\r\n                                        : sizeToString(task.downloaded)}\r\n                                    /\r\n                                    {task.total === 0\r\n                                        ? \"0Bytes\"\r\n                                        : sizeToString(task.total)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {task.speed === \"0\"\r\n                                        ? \"0B/s\"\r\n                                        : sizeToString(task.speed) + \"/s\"}\r\n                                </span>\r\n                            )}\r\n                            {task.total === 0 && <span> - </span>}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent className={classes.contentSide}>\r\n                        <IconButton>\r\n                            <ExpandMore\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]:\r\n                                            expanded === task.info.gid,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {task.info.bittorrent.mode === \"multi\" && (\r\n                        <div className={classes.scroll}>\r\n                            <Table size=\"small\">\r\n                                <TableBody>\r\n                                    {activeFiles().map((value) => {\r\n                                        return (\r\n                                            <TableRow\r\n                                                key={value.index}\r\n                                                style={{\r\n                                                    background:\r\n                                                        \"linear-gradient(to right, \" +\r\n                                                        (theme.palette.type ===\r\n                                                        \"dark\"\r\n                                                            ? darken(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.4\r\n                                                              )\r\n                                                            : lighten(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.85\r\n                                                              )) +\r\n                                                        \" 0%,\" +\r\n                                                        (theme.palette.type ===\r\n                                                        \"dark\"\r\n                                                            ? darken(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.4\r\n                                                              )\r\n                                                            : lighten(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.85\r\n                                                              )) +\r\n                                                        \" \" +\r\n                                                        getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(0) +\r\n                                                        \"%,\" +\r\n                                                        theme.palette.background\r\n                                                            .paper +\r\n                                                        \" \" +\r\n                                                        getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(0) +\r\n                                                        \"%,\" +\r\n                                                        theme.palette.background\r\n                                                            .paper +\r\n                                                        \" 100%)\",\r\n                                                }}\r\n                                            >\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography\r\n                                                        className={\r\n                                                            classes.subFileName\r\n                                                        }\r\n                                                    >\r\n                                                        <TypeIcon\r\n                                                            className={\r\n                                                                classes.subFileIcon\r\n                                                            }\r\n                                                            fileName={\r\n                                                                value.path\r\n                                                            }\r\n                                                        />\r\n                                                        {value.path}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {\" \"}\r\n                                                        {sizeToString(\r\n                                                            value.length\r\n                                                        )}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(2)}\r\n                                                        %\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <Tooltip title=\"删除此文件\">\r\n                                                        <IconButton\r\n                                                            onClick={() =>\r\n                                                                deleteFile(\r\n                                                                    value.index\r\n                                                                )\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                            size={\"small\"}\r\n                                                        >\r\n                                                            <HighlightOff />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className={classes.action}>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() =>\r\n                                history.push(\r\n                                    \"/#/home?path=\" +\r\n                                        encodeURIComponent(task.dst)\r\n                                )\r\n                            }\r\n                        >\r\n                            打开存放目录\r\n                        </Button>\r\n                        {task.info.bittorrent.mode === \"multi\" && (\r\n                            <Button\r\n                                className={classes.actionButton}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                disabled={loading}\r\n                                onClick={() => {\r\n                                    setSelectDialogOpen(true);\r\n                                    setSelectFileOption([\r\n                                        ...props.task.info.files,\r\n                                    ]);\r\n                                }}\r\n                            >\r\n                                选择要下载的文件\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            onClick={cancel}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                        >\r\n                            取消任务\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.info}>\r\n                        {task.info.bitfield !== \"\" && (\r\n                            <canvas\r\n                                width={\"700\"}\r\n                                height={\"100\"}\r\n                                ref={canvasRef}\r\n                                className={classes.bitmap}\r\n                            />\r\n                        )}\r\n\r\n                        <Grid container>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    更新于：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    <TimeAgo\r\n                                        datetime={task.update}\r\n                                        locale=\"zh_CN\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    上传大小：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.uploadLength)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    上传速度：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.uploadSpeed)} / s\r\n                                </Grid>\r\n                            </Grid>\r\n                            {task.info.bittorrent.mode !== \"\" && (\r\n                                <>\r\n                                    <Grid container xs={12} sm={8}>\r\n                                        <Grid\r\n                                            item\r\n                                            sm={2}\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            InfoHash：\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            sm={10}\r\n                                            xs={8}\r\n                                            style={{\r\n                                                wordBreak: \"break-all\",\r\n                                            }}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.infoHash}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12} sm={4}>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            做种者：\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={8}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.numSeeders}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12} sm={4}>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            做种中：\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={8}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.seeder === \"true\"\r\n                                                ? \"是\"\r\n                                                : \"否\"}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </>\r\n                            )}\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    分片大小：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.pieceLength)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    分片数量：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {task.info.numPieces}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport { sizeToString } from \"../../utils\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { useHistory } from \"react-router\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {},\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: \"20px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    iconContainer: {\r\n        width: \"90px\",\r\n        height: \"96px\",\r\n        padding: \" 35px 29px 29px 29px\",\r\n        paddingLeft: \"35px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        minWidth: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\r\n        },\r\n        textAlign: \"left\",\r\n    },\r\n    contentSide: {\r\n        minWidth: 0,\r\n        paddingTop: \"24px\",\r\n        paddingRight: \"28px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    iconBig: {\r\n        fontSize: \"30px\",\r\n    },\r\n    iconMultiple: {\r\n        fontSize: \"30px\",\r\n        color: \"#607D8B\",\r\n    },\r\n    progress: {\r\n        marginTop: 8,\r\n        marginBottom: 4,\r\n    },\r\n    expand: {\r\n        transition: \".15s transform ease-in-out\",\r\n    },\r\n    expanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    subFileName: {\r\n        display: \"flex\",\r\n    },\r\n    subFileIcon: {\r\n        marginRight: \"20px\",\r\n    },\r\n    scroll: {\r\n        overflowY: \"auto\",\r\n    },\r\n    action: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"right\",\r\n    },\r\n    actionButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    info: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function FinishedCard(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = () => (event, newExpanded) => {\r\n        setExpanded(!!newExpanded);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        API.delete(\"/aria2/task/\" + props.task.gid)\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"删除成功\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            });\r\n    };\r\n\r\n    const getPercent = (completed, total) => {\r\n        if (total == 0) {\r\n            return 0;\r\n        }\r\n        return (completed / total) * 100;\r\n    };\r\n\r\n    const getDownloadName = useCallback(() => {\r\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\r\n    }, [props.task.name]);\r\n\r\n    const activeFiles = useCallback(() => {\r\n        return props.task.files.filter((v) => v.selected === \"true\");\r\n    }, [props.task.files]);\r\n\r\n    const getIcon = useCallback(() => {\r\n        if (props.task.files.length > 1) {\r\n            return (\r\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\r\n                    <PermMediaIcon className={classes.iconMultiple} />\r\n                </Badge>\r\n            );\r\n        } else {\r\n            return (\r\n                <TypeIcon\r\n                    className={classes.iconBig}\r\n                    fileName={getDownloadName(props.task)}\r\n                />\r\n            );\r\n        }\r\n    }, [props.task, classes]);\r\n\r\n    const getTaskError = (error) => {\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg + \"：\" + res.error;\r\n        } catch (e) {\r\n            return \"文件转存失败\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <ExpansionPanel\r\n                square\r\n                expanded={expanded}\r\n                onChange={handleChange(\"\")}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div className={classes.iconContainer}>{getIcon()}</div>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography color=\"primary\" noWrap>\r\n                            <Tooltip title={getDownloadName()}>\r\n                                <span>{getDownloadName()}</span>\r\n                            </Tooltip>\r\n                        </Typography>\r\n                        {props.task.status === 3 && (\r\n                            <Tooltip title={props.task.error}>\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"error\"\r\n                                    noWrap\r\n                                >\r\n                                    下载出错：{props.task.error}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                        )}\r\n                        {props.task.status === 5 && (\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                noWrap\r\n                            >\r\n                                已取消\r\n                                {props.task.error !== \"\" && (\r\n                                    <span>：{props.task.error}</span>\r\n                                )}\r\n                            </Typography>\r\n                        )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 4 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.main,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    已完成\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 0 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.light,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    已完成，转存排队中\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 1 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.light,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    已完成，转存处理中\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 2 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color={\"error\"}\r\n                                    noWrap\r\n                                >\r\n                                    {getTaskError(props.task.task_error)}\r\n                                </Typography>\r\n                            )}\r\n                    </CardContent>\r\n                    <CardContent className={classes.contentSide}>\r\n                        <IconButton>\r\n                            <ExpandMore\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]: expanded,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {props.task.files.length > 1 && (\r\n                        <div className={classes.scroll}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {activeFiles().map((value) => {\r\n                                        return (\r\n                                            <TableRow key={value.index}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography\r\n                                                        className={\r\n                                                            classes.subFileName\r\n                                                        }\r\n                                                    >\r\n                                                        <TypeIcon\r\n                                                            className={\r\n                                                                classes.subFileIcon\r\n                                                            }\r\n                                                            fileName={\r\n                                                                value.path\r\n                                                            }\r\n                                                        />\r\n                                                        {value.path}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {\" \"}\r\n                                                        {sizeToString(\r\n                                                            value.length\r\n                                                        )}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(2)}\r\n                                                        %\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className={classes.action}>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() =>\r\n                                history.push(\r\n                                    \"/home?path=\" +\r\n                                        encodeURIComponent(props.task.dst)\r\n                                )\r\n                            }\r\n                        >\r\n                            打开存放目录\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            onClick={cancel}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                        >\r\n                            删除记录\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.info}>\r\n                        <Grid container>\r\n                            <Grid container xs={12} sm={6}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    创建日期：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {formatLocalTime(\r\n                                        props.task.create,\r\n                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={6}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    最后更新：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {formatLocalTime(\r\n                                        props.task.update,\r\n                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { openRemoteDownloadDialog } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Modals from \"../FileManager/Modals\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function RemoteDownloadButton() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const OpenRemoteDownloadDialog = useCallback(\r\n        () => dispatch(openRemoteDownloadDialog()),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modals />\r\n            <AutoHidden enable>\r\n                <Fab\r\n                    className={classes.fab}\r\n                    color=\"secondary\"\r\n                    onClick={() => OpenRemoteDownloadDialog()}\r\n                >\r\n                    <Add />\r\n                </Fab>\r\n            </AutoHidden>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\nimport { withStyles, Typography, Button, IconButton } from \"@material-ui/core\";\r\nimport DownloadingCard from \"./DownloadingCard\";\r\nimport FinishedCard from \"./FinishedCard\";\r\nimport RemoteDownloadButton from \"../Dial/Aria2\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nconst styles = (theme) => ({\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        marginTop: \"20px\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    loadingAnimation: {\r\n        borderRadius: \"6px 6px 0 0\",\r\n    },\r\n    shareFix: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass DownloadComponent extends Component {\r\n    page = 0;\r\n    interval = 0;\r\n\r\n    state = {\r\n        downloading: [],\r\n        loading: false,\r\n        finishedList: [],\r\n        continue: true,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadDownloading();\r\n        this.loadMore();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    loadDownloading = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/aria2/downloading\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    downloading: response.data,\r\n                    loading: false,\r\n                });\r\n                // 设定自动更新\r\n                clearTimeout(this.interval);\r\n                if (response.data.length > 0) {\r\n                    this.interval = setTimeout(\r\n                        this.loadDownloading,\r\n                        1000 * response.data[0].interval\r\n                    );\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadMore = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/aria2/finished?page=\" + ++this.page)\r\n            .then((response) => {\r\n                this.setState({\r\n                    finishedList: [\r\n                        ...this.state.finishedList,\r\n                        ...response.data,\r\n                    ],\r\n                    loading: false,\r\n                    continue: response.data.length >= 10,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    进行中\r\n                    <IconButton\r\n                        disabled={this.state.loading}\r\n                        onClick={this.loadDownloading}\r\n                    >\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                </Typography>\r\n                {this.state.downloading.map((value, k) => (\r\n                    <DownloadingCard key={k} task={value} />\r\n                ))}\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    已完成\r\n                </Typography>\r\n                <div className={classes.loadMore}>\r\n                    {this.state.finishedList.map((value, k) => {\r\n                        if (value.files) {\r\n                            return <FinishedCard key={k} task={value} />;\r\n                        }\r\n                        return null;\r\n                    })}\r\n                    <Button\r\n                        size=\"large\"\r\n                        className={classes.margin}\r\n                        disabled={!this.state.continue}\r\n                        onClick={this.loadMore}\r\n                    >\r\n                        加载更多\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Download = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(DownloadComponent));\r\n\r\nexport default Download;\r\n","import React, { Component } from \"react\";\r\nimport AdSense from 'react-adsense';\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\n\r\nimport {\r\n    withStyles,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    TextField,\r\n    Avatar,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst styles = (theme) => ({\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    continue: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"10px\",\r\n        marginRottom: \"10px\",\r\n    },\r\n    ads:{\r\n        width: '100%',\r\n        height: 90,\r\n        maxHeight: 90,\r\n        textAlign: \"center\",\r\n        marginTop: \"1.5rem\"\r\n    }\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass LockedFileCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        this.state = {\r\n            pwd: query.get(\"password\"),\r\n        };\r\n    }\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.pwd === \"\") {\r\n            return;\r\n        }\r\n        this.props.setPassowrd(this.state.pwd);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Card className={classes.card}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"Recipe\"\r\n                                src={\r\n                                    \"/api/v3/user/avatar/\" +\r\n                                    this.props.share.creator.key +\r\n                                    \"/l\"\r\n                                }\r\n                            />\r\n                        }\r\n                        title={this.props.share.creator.nick + \" 的加密分享\"}\r\n                        subheader={this.props.share.create_date}\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <form onSubmit={this.submit}>\r\n                            <TextField\r\n                                id=\"pwd\"\r\n                                label=\"输入分享密码\"\r\n                                value={this.state.pwd}\r\n                                onChange={this.handleChange(\"pwd\")}\r\n                                margin=\"normal\"\r\n                                type=\"password\"\r\n                                autoFocus\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                            />\r\n                        </form>\r\n                    </CardContent>\r\n                    <CardActions\r\n                        className={classes.actions}\r\n                        disableActionSpacing\r\n                    >\r\n                        <Button\r\n                            onClick={this.submit}\r\n                            color=\"secondary\"\r\n                            className={classes.continue}\r\n                            variant=\"contained\"\r\n                            disabled={\r\n                                this.state.pwd === \"\" || this.props.loading\r\n                            }\r\n                        >\r\n                            继续\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n                <div className={classes.ads}>\r\n                    <AdSense.Google\r\n                        style={{ display:'inline-block',minWidth:320,maxWidth:970,width:'100%',height:90 }}\r\n                        client='ca-pub-7329474538416487'\r\n                        slot='8294203043'\r\n                        format=''\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LockedFile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(LockedFileCompoment)));\r\n\r\nexport default LockedFile;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxHeader: {\r\n        textAlign: \"center\",\r\n        padding: 24,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        margin: \"0 auto\",\r\n        width: 50,\r\n        height: 50,\r\n        cursor: \"pointer\",\r\n    },\r\n    shareDes: {\r\n        marginTop: 12,\r\n    },\r\n    shareInfo: {\r\n        color: theme.palette.text.disabled,\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nexport default function Creator(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const getSecondDes = () => {\r\n        if (props.share.expire > 0) {\r\n            if (props.share.expire >= 24 * 3600) {\r\n                return (\r\n                    Math.round(props.share.expire / (24 * 3600)) + \" 天后到期\"\r\n                );\r\n            }\r\n            return Math.round(props.share.expire / 3600) + \" 小时后到期\";\r\n        }\r\n        return formatLocalTime(props.share.create_date, \"YYYY-MM-DD H:mm:ss\");\r\n    };\r\n\r\n    const userProfile = () => {\r\n        history.push(\"/profile/\" + props.share.creator.key);\r\n        props.onClose && props.onClose();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.boxHeader}>\r\n            <Avatar\r\n                className={classes.avatar}\r\n                alt={props.share.creator.nick}\r\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\r\n                onClick={() => userProfile()}\r\n            />\r\n            <Typography variant=\"h6\" className={classes.shareDes}>\r\n                {props.isFolder && (\r\n                    <>\r\n                        此分享由{\" \"}\r\n                        <Link\r\n                            onClick={() => userProfile()}\r\n                            href={\"javascript:void(0)\"}\r\n                            color=\"inherit\"\r\n                        >\r\n                            {props.share.creator.nick}\r\n                        </Link>{\" \"}\r\n                        创建\r\n                    </>\r\n                )}\r\n                {!props.isFolder && (\r\n                    <>\r\n                        {\" \"}\r\n                        <Link\r\n                            onClick={() => userProfile()}\r\n                            href={\"javascript:void(0)\"}\r\n                            color=\"inherit\"\r\n                        >\r\n                            {props.share.creator.nick}\r\n                        </Link>{\" \"}\r\n                        向您分享了 1 个文件\r\n                    </>\r\n                )}\r\n            </Typography>\r\n            <Typography className={classes.shareInfo}>\r\n                {props.share.views} 次浏览 • {props.share.downloads} 次下载 •{\" \"}\r\n                {getSecondDes()}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AdSense from 'react-adsense';\r\nimport { connect } from \"react-redux\";\r\nimport { sizeToString, vhCheck } from \"../../utils\";\r\nimport {\r\n    openMusicDialog,\r\n    openResaveDialog,\r\n    setSelectedTarget,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport { withStyles, Button, Typography } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport PurchaseShareDialog from \"../Modals/PurchaseShare\";\r\nimport API from \"../../middleware/Api\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Creator from \"./Creator\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport Report from \"../Modals/Report\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\nvhCheck();\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"90px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginTop: \"90px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: 0,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    fileCotainer: {\r\n        width: \"200px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    buttonCotainer: {\r\n        width: \"400px\",\r\n        margin: \"0 auto\",\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    icon: {\r\n        borderRadius: \"10%\",\r\n        marginTop: 2,\r\n    },\r\n\r\n    box: {\r\n        width: \"100%\",\r\n        maxWidth: 440,\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: 12,\r\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            /*height: \"calc(var(--vh, 100vh) - 56px)\",*/\r\n            borderRadius: 0,\r\n            maxWidth: 1000,\r\n        },\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    boxContent: {\r\n        padding: 24,\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n    },\r\n    fileName: {\r\n        marginLeft: 20,\r\n    },\r\n    fileSize: {\r\n        color: theme.palette.text.disabled,\r\n        fontSize: 14,\r\n    },\r\n    boxFooter: {\r\n        display: \"flex\",\r\n        padding: \"20px 16px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    downloadButton: {\r\n        marginLeft: 8,\r\n    },\r\n    ads:{\r\n        width: '100%',\r\n        height: 90,\r\n        maxHeight: 90,\r\n        textAlign: \"center\",\r\n        marginTop: \"1.5rem\"\r\n    }\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openResave: (key) => {\r\n            dispatch(openResaveDialog(key));\r\n        },\r\n    };\r\n};\r\n\r\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\r\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\r\n\r\nclass SharedFileCompoment extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false,\r\n        purchaseCallback: null,\r\n        loading: false,\r\n        openReport: false,\r\n    };\r\n\r\n    downloaded = false;\r\n\r\n    // TODO merge into react thunk\r\n    preview = () => {\r\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n            if (!Auth.Check()) {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"请先登录\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"请先登录\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        switch (isPreviewable(this.props.share.source.name)) {\r\n            case \"img\":\r\n                this.props.showImgPreivew({\r\n                    key: this.props.share.key,\r\n                    name: this.props.share.source.name,\r\n                });\r\n                return;\r\n            case \"msDoc\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/doc?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"audio\":\r\n                this.props.setSelectedTarget([\r\n                    {\r\n                        key: this.props.share.key,\r\n                        type: \"share\",\r\n                    },\r\n                ]);\r\n                this.props.openMusicDialog();\r\n                return;\r\n            case \"video\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/video?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"edit\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/text?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"pdf\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/pdf?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"code\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/code?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            default:\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"此文件无法预览\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSelectedTarget([]);\r\n    }\r\n\r\n    scoreHandle = (callback) => (event) => {\r\n        if (this.props.share.score > 0) {\r\n            if (!Auth.Check()) {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"登录后才能继续操作\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n            if (!Auth.GetUser().group.shareFree && !this.downloaded) {\r\n                this.setState({\r\n                    purchaseCallback: () => {\r\n                        this.setState({\r\n                            purchaseCallback: null,\r\n                        });\r\n                        callback(event);\r\n                    },\r\n                });\r\n                return;\r\n            }\r\n        }\r\n        callback(event);\r\n    };\r\n\r\n    download = () => {\r\n        this.setState({ loading: true });\r\n        API.put(\"/share/download/\" + this.props.share.key)\r\n            .then((response) => {\r\n                this.downloaded = true;\r\n                window.location.assign(response.data);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n                this.props.history.push(\"/buy?tab=2\");\r\n            })\r\n            .then(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    };\r\n\r\n    rewards = () => {\r\n        if (!Auth.Check()) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"登录后才能继续操作\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        window.opensendgift(this.props.share.key);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isLogin = Auth.Check();\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Modals />\r\n                <ImgPreview />\r\n                <PurchaseShareDialog\r\n                    callback={this.state.purchaseCallback}\r\n                    score={this.props.share.score}\r\n                    onClose={() => this.setState({ purchaseCallback: null })}\r\n                />\r\n                <Report\r\n                    open={this.state.openReport}\r\n                    share={this.props.share}\r\n                    onClose={() => this.setState({ openReport: false })}\r\n                />\r\n                <div className={classes.box}>\r\n                    <Creator share={this.props.share} />\r\n                    <Divider />\r\n                    <div className={classes.boxContent}>\r\n                        <TypeIcon\r\n                            className={classes.icon}\r\n                            isUpload\r\n                            fileName={this.props.share.source.name}\r\n                        />\r\n                        <div className={classes.fileName}>\r\n                            <Typography style={{ wordBreak: \"break-all\" }}>\r\n                                {this.props.share.source.name}\r\n                            </Typography>\r\n                            <Typography className={classes.fileSize}>\r\n                                {sizeToString(this.props.share.source.size)}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.boxFooter}>\r\n                        <div className={classes.actionLeft}>\r\n                            <Button\r\n                                onClick={() =>\r\n                                    this.props.openResave(this.props.share.key)\r\n                                }\r\n                                color=\"secondary\"\r\n                            >\r\n                                保存文件\r\n                            </Button>\r\n                            <Button\r\n                                onClick={() =>\r\n                                    this.setState({ openReport: true })\r\n                                }\r\n                                color=\"secondary\"\r\n                            >\r\n                                举报\r\n                            </Button>\r\n                        </div>\r\n                        <div className={classes.actions}>\r\n                            <IconButton color=\"secondary\" style={{ padding:'unset',paddingRight:'12px'}} title=\"打赏\" aria-label=\"to reward\" onClick={() => this.rewards()}>\r\n                              <MonetizationOnIcon />\r\n                            </IconButton>\r\n                            {this.props.share.preview && (\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.scoreHandle(this.preview)}\r\n                                    disabled={this.state.loading}\r\n                                >\r\n                                    预览\r\n                                </Button>\r\n                            )}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.downloadButton}\r\n                                onClick={this.scoreHandle(this.download)}\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                下载\r\n                                {this.props.share.score > 0 &&\r\n                                    (!isLogin || !user.group.shareFree) &&\r\n                                    \" (\" + this.props.share.score + \"积分)\"}\r\n                                {this.props.share.score > 0 &&\r\n                                    isLogin &&\r\n                                    user.group.shareFree &&\r\n                                    \" (免积分)\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.ads}>\r\n                    <AdSense.Google\r\n                        style={{ display:'inline-block',minWidth:320,maxWidth:970,width:'100%',height:90 }}\r\n                        client='ca-pub-7329474538416487'\r\n                        slot='8294203043'\r\n                        format=''\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SharedFile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SharedFileCompoment)));\r\n\r\nexport default SharedFile;\r\n","import React, { Component } from \"react\";\r\nimport AdSense from 'react-adsense';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    openMusicDialog,\r\n    openResaveDialog,\r\n    setSelectedTarget,\r\n    setShareUserPopover,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { withStyles, Typography } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FileManager from \"../FileManager/FileManager\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Creator from \"./Creator\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport pathHelper from \"../../utils/page\";\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: theme.spacing(2),\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    managerContainer: {\r\n        overflowY: \"auto\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"28rem\"\r\n        },\r\n\r\n    },\r\n    ads:{\r\n        width: '100%',\r\n        height: 90,\r\n        maxHeight: 90,\r\n        textAlign: \"center\",\r\n        marginTop: \"1.5rem\"\r\n    }\r\n});\r\n\r\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\r\n        fileList: state.explorer.fileList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openResave: (key) => {\r\n            dispatch(openResaveDialog(key));\r\n        },\r\n        setShareUserPopover: (e) => {\r\n            dispatch(setShareUserPopover(e));\r\n        },\r\n    };\r\n};\r\n\r\nclass SharedFolderComponent extends Component {\r\n    state = {};\r\n\r\n    UNSAFE_componentWillMount() {\r\n        window.shareInfo = this.props.share;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.shareInfo = null;\r\n        this.props.setSelectedTarget([]);\r\n    }\r\n\r\n    handleClickAway = () => {\r\n        if (!pathHelper.isMobile()) {\r\n            this.props.setSelectedTarget([]);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        let readmeShowed = false;\r\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                    <Paper className={classes.managerContainer}>\r\n                        <FileManager isShare share={this.props.share} />\r\n                    </Paper>\r\n                </ClickAwayListener>\r\n                {/* eslint-disable-next-line */}\r\n                {this.props.fileList.map((value) => {\r\n                    if (\r\n                        (value.name.toLowerCase() === \"readme.md\" ||\r\n                            value.name.toLowerCase() === \"readme.txt\") &&\r\n                        !readmeShowed\r\n                    ) {\r\n                        readmeShowed = true;\r\n                        return <ReadMe share={this.props.share} file={value} />;\r\n                    }\r\n                })}\r\n                <Popover\r\n                    id={id}\r\n                    open={this.props.anchorEl !== null}\r\n                    anchorEl={this.props.anchorEl}\r\n                    onClose={() => this.props.setShareUserPopover(null)}\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                >\r\n                    <Typography>\r\n                        <Creator\r\n                            isFolder\r\n                            onClose={() => this.props.setShareUserPopover(null)}\r\n                            share={this.props.share}\r\n                        />\r\n                    </Typography>\r\n                </Popover>\r\n                <div className={classes.ads}>\r\n                    <AdSense.Google\r\n                        style={{ display:'inline-block',minWidth:320,maxWidth:970,width:'100%',height:90 }}\r\n                        client='ca-pub-7329474538416487'\r\n                        slot='8294203043'\r\n                        format=''\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SharedFolder = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\r\n\r\nexport default SharedFolder;\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport PageLoading from \"../Placeholder/PageLoading\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notice from \"./NotFound\";\r\nimport LockedFile from \"./LockedFile\";\r\nimport SharedFile from \"./SharedFile\";\r\nimport SharedFolder from \"./SharedFolder\";\r\n\r\nexport default function SharePreload() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const [share, setShare] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (share) {\r\n            if (share.locked) {\r\n                SetSubTitle(share.creator.nick + \"的加密分享\");\r\n                if (password !== \"\") {\r\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\r\n                }\r\n            } else {\r\n                SetSubTitle(share.source.name);\r\n            }\r\n        } else {\r\n            SetSubTitle();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [share, SetSubTitle, ToggleSnackbar]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            SetSubTitle();\r\n        };\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let withPassword = \"\";\r\n        if (password !== \"\") {\r\n            withPassword = \"?password=\" + password;\r\n        }\r\n        API.get(\"/share/info/\" + id + withPassword)\r\n            .then((response) => {\r\n                setShare(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                if (error.code === 404) {\r\n                    setShare(null);\r\n                } else {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                }\r\n            });\r\n    }, [id, password, ToggleSnackbar]);\r\n\r\n    return (\r\n        <Suspense fallback={<PageLoading />}>\r\n            {share === undefined && <PageLoading />}\r\n            {share === null && <Notice msg={\"分享不存在或已过期\"} />}\r\n            {share && share.locked && (\r\n                <LockedFile\r\n                    loading={loading}\r\n                    setPassowrd={setPassword}\r\n                    share={share}\r\n                />\r\n            )}\r\n            {share && !share.locked && !share.is_dir && (\r\n                <SharedFile share={share} />\r\n            )}\r\n            {share && !share.locked && share.is_dir && (\r\n                <SharedFolder share={share} />\r\n            )}\r\n        </Suspense>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"-48px\",\r\n    },\r\n\r\n    container: {\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 18px)\",\r\n        marginBottom: -3,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function DocViewer() {\r\n    const [url, setURL] = useState(\"\");\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/doc/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n        API.get(requestURL)\r\n            .then((response) => {\r\n                setURL(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            {url !== \"\" && (\r\n                <iframe title={\"ms\"} className={classes.container} src={url} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nimport {\r\n    withStyles,\r\n    Typography,\r\n    Paper,\r\n    Button,\r\n    Grid,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n} from \"@material-ui/core\";\r\nimport { sizeToString } from \"../../utils\";\r\nimport { withRouter } from \"react-router\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    data: {\r\n        fontSize: \"25px\",\r\n        color: theme.palette.primary.main,\r\n    },\r\n    proBar: {\r\n        height: \"10px\",\r\n    },\r\n    r1: {\r\n        backgroundColor: \"#f0ad4e\",\r\n        transition: \"width .6s ease\",\r\n        height: \"100%\",\r\n        fontSize: \"12px\",\r\n        lineHeight: \"20px\",\r\n        float: \"left\",\r\n    },\r\n    r2: {\r\n        backgroundColor: \"#4caf50\",\r\n        transition: \"width .6s ease\",\r\n        height: \"100%\",\r\n        fontSize: \"12px\",\r\n        lineHeight: \"20px\",\r\n        float: \"left\",\r\n    },\r\n    r3: {\r\n        backgroundColor: \"#5bc0de\",\r\n        transition: \"width .6s ease\",\r\n        height: \"100%\",\r\n        fontSize: \"12px\",\r\n        lineHeight: \"20px\",\r\n        float: \"left\",\r\n    },\r\n    note_block: {\r\n        width: \"10px\",\r\n        height: \"10px\",\r\n        display: \"inline-block\",\r\n        position: \"relative\",\r\n        marginLeft: \"10px\",\r\n        marginRight: \"3px\",\r\n    },\r\n    r1_block: {\r\n        backgroundColor: \"#f0ad4e\",\r\n    },\r\n    r2_block: {\r\n        backgroundColor: \"#4caf50\",\r\n    },\r\n    r3_block: {\r\n        backgroundColor: \"#5bc0de\",\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n        marginBottom: \"30px\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    table: {\r\n        overflowX: \"auto\",\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass QuotaCompoment extends Component {\r\n    state = {\r\n        data: {\r\n            basic: 0,\r\n            used: 0,\r\n            total: 0,\r\n            pack: 0,\r\n            r1: 0,\r\n            r2: 0,\r\n            r3: 0,\r\n        },\r\n        packs: [],\r\n    };\r\n\r\n    firstLoad = true;\r\n\r\n    componentDidMount() {\r\n        if (this.firstLoad) {\r\n            this.firstLoad = !this.firstLoad;\r\n            API.get(\"/vas/pack\")\r\n                .then((response) => {\r\n                    let usedR,\r\n                        baseR,\r\n                        packR = 0;\r\n                    if (response.data.used > response.data.base) {\r\n                        usedR = response.data.used / response.data.total;\r\n                        baseR = 0;\r\n                        packR = 1 - usedR;\r\n                    } else {\r\n                        usedR = response.data.used / response.data.total;\r\n                        baseR =\r\n                            (response.data.base - response.data.used) /\r\n                            response.data.total;\r\n                        packR = 1 - usedR - baseR;\r\n                    }\r\n\r\n                    this.setState({\r\n                        data: {\r\n                            used: response.data.used,\r\n                            pack: response.data.pack,\r\n                            total: response.data.total,\r\n                            basic: response.data.base,\r\n                            r1: usedR > 1 ? 100 : usedR * 100,\r\n                            r2: usedR > 1 ? 0 : baseR * 100,\r\n                            r3: usedR > 1 ? 0 : packR * 100,\r\n                        },\r\n                        packs: response.data.packs,\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        loading: false,\r\n                    });\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Typography color=\"textSecondary\" variant=\"h4\">\r\n                    容量配额\r\n                </Typography>\r\n                <Grid container className={classes.gird} spacing={2}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography className={classes.data}>\r\n                                {sizeToString(this.state.data.basic)}\r\n                            </Typography>\r\n                            <Typography>用户组基础容量</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography className={classes.data}>\r\n                                {sizeToString(this.state.data.pack)}\r\n                            </Typography>\r\n                            <Typography>有效容量包附加附加容量</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography className={classes.data}>\r\n                                {sizeToString(this.state.data.used)}\r\n                            </Typography>\r\n                            <Typography>已使用容量</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography className={classes.data}>\r\n                                {sizeToString(this.state.data.total)}\r\n                            </Typography>\r\n                            <Typography>总容量</Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <div className={classes.proBar}>\r\n                                <div\r\n                                    className={classes.r1}\r\n                                    style={{ width: this.state.data.r1 + \"%\" }}\r\n                                />\r\n                                <div\r\n                                    className={classes.r2}\r\n                                    style={{ width: this.state.data.r2 + \"%\" }}\r\n                                />\r\n                                <div\r\n                                    className={classes.r3}\r\n                                    style={{ width: this.state.data.r3 + \"%\" }}\r\n                                />\r\n                            </div>\r\n                            <div style={{ textAlign: \"right\" }}>\r\n                                <span\r\n                                    className={classNames(\r\n                                        classes.r1_block,\r\n                                        classes.note_block\r\n                                    )}\r\n                                />\r\n                                已用容量\r\n                                <span\r\n                                    className={classNames(\r\n                                        classes.r2_block,\r\n                                        classes.note_block\r\n                                    )}\r\n                                />\r\n                                用户组基础容量\r\n                                <span\r\n                                    className={classNames(\r\n                                        classes.r3_block,\r\n                                        classes.note_block\r\n                                    )}\r\n                                />\r\n                                有效容量包附加附加容量\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    可用容量包\r\n                </Typography>\r\n                <Paper className={classes.paper}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        onClick={() => this.props.history.push(\"/buy\")}\r\n                    >\r\n                        购买容量包\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={() => this.props.history.push(\"/buy?tab=3\")}\r\n                    >\r\n                        使用激活码兑换\r\n                    </Button>\r\n                    <div className={classes.table}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">\r\n                                        容量包名称\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">大小</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        激活日期\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">有效期</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        过期日期\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.packs.map((row, id) => (\r\n                                    <TableRow key={id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {sizeToString(row.size)}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {formatLocalTime(\r\n                                                row.activate_date,\r\n                                                \"YYYY-MM-DD H:mm:ss\"\r\n                                            )}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {Math.round(row.expiration / 86400)}\r\n                                            天\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {formatLocalTime(\r\n                                                row.expiration_date,\r\n                                                \"YYYY-MM-DD H:mm:ss\"\r\n                                            )}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Quota = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(QuotaCompoment)));\r\n\r\nexport default Quota;\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles, ButtonBase, Typography } from \"@material-ui/core\";\r\nconst styles = (theme) => ({\r\n    container: {\r\n        boxShadow: \"0 0 0 1px #e6e9eb\",\r\n        borderRadius: \"4px\",\r\n        transition: \"box-shadow .5s\",\r\n        width: \"100%\",\r\n        display: \"block\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 3px \" + theme.palette.primary.main,\r\n    },\r\n    boxHead: {\r\n        textAlign: \"center\",\r\n        padding: \"10px 10px 10px\",\r\n        borderBottom: \"1px solid #e6e9eb\",\r\n        color: theme.palette.text.main,\r\n        width: \"100%\",\r\n    },\r\n    price: {\r\n        fontSize: \"33px\",\r\n        fontWeight: \"500\",\r\n        lineHeight: \"40px\",\r\n        color: theme.palette.primary.main,\r\n    },\r\n    priceWithScore: {\r\n        fontSize: \"23px\",\r\n        fontWeight: \"500\",\r\n        lineHeight: \"40px\",\r\n        color: theme.palette.primary.main,\r\n    },\r\n    packName: {\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    boxBottom: {\r\n        color: theme.palette.text.main,\r\n        textAlign: \"center\",\r\n        padding: \"5px\",\r\n    },\r\n});\r\n\r\nclass PackSelect extends Component {\r\n    render() {\r\n        const { classes, pack } = this.props;\r\n        return (\r\n            <ButtonBase\r\n                className={classNames(classes.container, {\r\n                    [classes.active]: this.props.active,\r\n                })}\r\n                onClick={this.props.onSelect}\r\n            >\r\n                <div className={classes.boxHead}>\r\n                    <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.packName}\r\n                    >\r\n                        {pack.name}\r\n                    </Typography>\r\n                    {pack.score === 0 && (\r\n                        <Typography className={classes.price}>\r\n                            ￥{(pack.price / 100).toFixed(2)}\r\n                        </Typography>\r\n                    )}\r\n                    {pack.score !== 0 && (\r\n                        <Typography className={classes.priceWithScore}>\r\n                            ￥{(pack.price / 100).toFixed(2)} / {pack.score}{\" \"}\r\n                            积分\r\n                        </Typography>\r\n                    )}\r\n                </div>\r\n                <div className={classes.boxBottom}>\r\n                    <Typography>\r\n                        有效期：{Math.ceil(pack.time / 86400)}天\r\n                    </Typography>\r\n                </div>\r\n            </ButtonBase>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PackSelect);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport SdStorage from \"@material-ui/icons/SdStorage\";\r\nimport ShopIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PackSelect from \"./PackSelect\";\r\nimport SupervisedUserCircle from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport StarIcon from \"@material-ui/icons/StarBorder\";\r\nimport LocalPlay from \"@material-ui/icons/LocalPlay\";\r\nimport API from \"../../middleware/Api\";\r\nimport QRCode from \"qrcode-react\";\r\n\r\nimport {\r\n    withStyles,\r\n    AppBar,\r\n    Tabs,\r\n    Tab,\r\n    Typography,\r\n    Paper,\r\n    Button,\r\n    TextField,\r\n    Grid,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n} from \"@material-ui/core\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { AccountBalanceWallet } from \"@material-ui/icons\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n        marginBottom: \"30px\",\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    action: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 70,\r\n        textAlign: \"center!important\",\r\n    },\r\n    priceShow: {\r\n        color: theme.palette.secondary.main,\r\n        fontSize: \"30px\",\r\n    },\r\n    codeContainer: {\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n    },\r\n    cardHeader: {\r\n        backgroundColor:\r\n            theme.palette.type === \"dark\"\r\n                ? theme.palette.background.default\r\n                : theme.palette.grey[200],\r\n    },\r\n    cardPricing: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"baseline\",\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    cardActions: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            paddingBottom: theme.spacing(2),\r\n        },\r\n    },\r\n    redeemContainer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: \"50px\",\r\n            marginRight: \"50px\",\r\n            width: \"auto\",\r\n        },\r\n        marginTop: \"50px\",\r\n        marginBottom: \"50px\",\r\n    },\r\n    doRedeem: {\r\n        textAlign: \"right\",\r\n    },\r\n    payMethod: {\r\n        marginTop: theme.spacing(4),\r\n        padding: theme.spacing(2),\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass BuyQuotaCompoment extends Component {\r\n    IntervalId = null;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const tab = new URLSearchParams(this.props.location.search);\r\n        const index = tab.get(\"tab\");\r\n\r\n        this.state = {\r\n            value: index ? parseInt(index) : 0,\r\n            selectedPack: -1,\r\n            selectedGroup: -1,\r\n            times: 1,\r\n            scoreNum: 1,\r\n            loading: false,\r\n            redeemCode: \"\",\r\n            dialog: null,\r\n            payment: {\r\n                type: \"\",\r\n                img: \"\",\r\n            },\r\n            scorePrice: 0,\r\n            redeemInfo: null,\r\n            packs: [],\r\n            groups: [],\r\n            alipay: false,\r\n            payjs: false,\r\n            wechat: false,\r\n            packPayMethod: null,\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.IntervalId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.get(\"/vas/product\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    packs: response.data.packs,\r\n                    groups: response.data.groups,\r\n                    alipay: response.data.alipay,\r\n                    payjs: response.data.payjs,\r\n                    wechat: response.data.wechat,\r\n                    scorePrice: response.data.score_price,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    }\r\n\r\n    confirmRedeem = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.post(\"/vas/redeem/\" + this.state.redeemCode)\r\n            .then(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                    dialog: \"success\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"错误：\" + error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    doRedeem = () => {\r\n        if (this.state.redeemCode === \"\") {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"请输入激活码\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/vas/redeem/\" + this.state.redeemCode)\r\n            .then((response) => {\r\n                this.setState({\r\n                    loading: false,\r\n                    dialog: \"redeem\",\r\n                    redeemInfo: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    buyPack = (packType) => {\r\n        if (packType === \"pack\" && this.state.selectedPack === -1) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"请先选择一个容量包\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.post(\"/vas/order\", {\r\n            action: packType,\r\n            method: this.state.packPayMethod,\r\n            id:\r\n                packType === \"score\"\r\n                    ? 1\r\n                    : packType === \"pack\"\r\n                    ? this.state.packs[this.state.selectedPack].id\r\n                    : this.state.groups[this.state.selectedGroup].id,\r\n            num:\r\n                packType === \"score\"\r\n                    ? parseInt(this.state.scoreNum)\r\n                    : parseInt(this.state.times),\r\n        })\r\n            .then((response) => {\r\n                if (!response.data.payment) {\r\n                    this.setState({\r\n                        loading: false,\r\n                        dialog: \"success\",\r\n                    });\r\n                    return;\r\n                }\r\n                if (response.data.qr_code) {\r\n                    this.setState({\r\n                        loading: false,\r\n                        dialog: \"qr\",\r\n                        payment: {\r\n                            type: this.state.packPayMethod,\r\n                            img: response.data.qr_code,\r\n                        },\r\n                    });\r\n                    this.IntervalId = window.setInterval(() => {\r\n                        this.querryLoop(response.data.id);\r\n                    }, 3000);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"错误：\" + error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    querryLoop = (id) => {\r\n        API.get(\"/vas/order/\" + id)\r\n            .then((response) => {\r\n                if (response.data === 1) {\r\n                    this.setState({\r\n                        dialog: \"success\",\r\n                    });\r\n                    window.clearInterval(this.IntervalId);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"错误：\" + error.message,\r\n                    \"error\"\r\n                );\r\n                window.clearInterval(this.IntervalId);\r\n            });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({\r\n            packPayMethod:\r\n                this.state.packPayMethod === \"score\"\r\n                    ? null\r\n                    : this.state.packPayMethod,\r\n        });\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleChangeIndex = (index) => {\r\n        this.setState({ value: index });\r\n    };\r\n\r\n    handleClose = () => {\r\n        window.clearInterval(this.IntervalId);\r\n        this.setState({\r\n            dialog: null,\r\n        });\r\n    };\r\n\r\n    handleTexyChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    selectPack = (id) => {\r\n        this.setState({\r\n            selectedPack: id,\r\n            packPayMethod:\r\n                this.state.packPayMethod === \"score\"\r\n                    ? null\r\n                    : this.state.packPayMethod,\r\n        });\r\n    };\r\n\r\n    selectGroup = (id) => {\r\n        this.setState({\r\n            selectedGroup: id,\r\n            dialog: \"buyGroup\",\r\n            packPayMethod:\r\n                this.state.packPayMethod === \"score\"\r\n                    ? null\r\n                    : this.state.packPayMethod,\r\n        });\r\n    };\r\n\r\n    selectPackPayMethod = (event) => {\r\n        this.setState({\r\n            packPayMethod: event.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const methodSelect = (\r\n            <div>\r\n                <FormLabel>选择支付方式：</FormLabel>\r\n                <RadioGroup\r\n                    name=\"spacing\"\r\n                    aria-label=\"spacing\"\r\n                    value={this.state.packPayMethod}\r\n                    onChange={this.selectPackPayMethod}\r\n                    row\r\n                >\r\n                    {!this.state.alipay &&\r\n                        !this.state.payjs &&\r\n                        this.state.value === 0 &&\r\n                        (this.state.selectedPack === -1 ||\r\n                            this.state.packs[this.state.selectedPack].score ===\r\n                                0) &&\r\n                        this.state.value === 1 &&\r\n                        (this.state.selectedGroup === -1 ||\r\n                            this.state.groups[this.state.selectedGroup]\r\n                                .score === 0) && (\r\n                            <Typography>无可用支付方式</Typography>\r\n                        )}\r\n                    {this.state.alipay && (\r\n                        <FormControlLabel\r\n                            value={\"alipay\"}\r\n                            control={<Radio />}\r\n                            label={\"支付宝扫码\"}\r\n                        />\r\n                    )}\r\n                    {this.state.payjs && (\r\n                        <FormControlLabel\r\n                            value={\"payjs\"}\r\n                            control={<Radio />}\r\n                            label={\"微信扫码\"}\r\n                        />\r\n                    )}\r\n                    {this.state.wechat && (\r\n                        <FormControlLabel\r\n                            value={\"wechat\"}\r\n                            control={<Radio />}\r\n                            label={\"微信扫码\"}\r\n                        />\r\n                    )}\r\n                    {this.state.value === 0 &&\r\n                        this.state.selectedPack !== -1 &&\r\n                        this.state.packs[this.state.selectedPack].score !==\r\n                            0 && (\r\n                            <FormControlLabel\r\n                                value={\"score\"}\r\n                                control={<Radio />}\r\n                                label={\"积分支付\"}\r\n                            />\r\n                        )}\r\n                    {this.state.value === 1 &&\r\n                        this.state.selectedGroup !== -1 &&\r\n                        this.state.groups[this.state.selectedGroup].score !==\r\n                            0 && (\r\n                            <FormControlLabel\r\n                                value={\"score\"}\r\n                                control={<Radio />}\r\n                                label={\"积分支付\"}\r\n                            />\r\n                        )}\r\n                </RadioGroup>\r\n                <div>\r\n                    {this.state.value !== 2 && (\r\n                        <FormLabel>购买时长倍数：</FormLabel>\r\n                    )}\r\n                    {this.state.value === 2 && (\r\n                        <FormLabel>充值积分数量：</FormLabel>\r\n                    )}\r\n                </div>\r\n                {this.state.value !== 2 && (\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        type=\"number\"\r\n                        inputProps={{\r\n                            min: \"1\",\r\n                            max: \"99\",\r\n                            step: \"1\",\r\n                        }}\r\n                        value={this.state.times}\r\n                        onChange={this.handleTexyChange(\"times\")}\r\n                    />\r\n                )}\r\n                {this.state.value === 2 && (\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        type=\"number\"\r\n                        inputProps={{\r\n                            min: \"1\",\r\n                            step: \"1\",\r\n                            max: \"9999999\",\r\n                        }}\r\n                        value={this.state.scoreNum}\r\n                        onChange={this.handleTexyChange(\"scoreNum\")}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.title}\r\n                    variant=\"h3\"\r\n                >\r\n                    购买\r\n                </Typography>\r\n                <AppBar position=\"static\">\r\n                    <Tabs\r\n                        value={this.state.value}\r\n                        onChange={this.handleChange}\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <Tab label=\"容量包\" icon={<SdStorage />} />\r\n                        <Tab label=\"会员\" icon={<SupervisedUserCircle />} />\r\n                        {this.state.scorePrice > 0 && (\r\n                            <Tab\r\n                                label=\"积分充值\"\r\n                                icon={<AccountBalanceWallet />}\r\n                            />\r\n                        )}\r\n                        <Tab label=\"使用激活码\" icon={<LocalPlay />} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {this.state.value === 0 && (\r\n                    <Paper className={classes.paper} square={true}>\r\n                        <Grid container spacing={3}>\r\n                            {this.state.packs.map((value, id) => (\r\n                                <Grid item xs={12} md={3} key={id}>\r\n                                    <PackSelect\r\n                                        pack={value}\r\n                                        onSelect={() => this.selectPack(id)}\r\n                                        active={this.state.selectedPack === id}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            className={classes.payMethod}\r\n                            spacing={1}\r\n                        >\r\n                            <Grid sm={6} xs={12}>\r\n                                {methodSelect}\r\n                            </Grid>\r\n                            <Grid sm={6} xs={12}>\r\n                                <div className={classes.action}>\r\n                                    <div>\r\n                                        当前费用：\r\n                                        {this.state.packPayMethod !==\r\n                                            \"score\" && (\r\n                                            <span className={classes.priceShow}>\r\n                                                ￥\r\n                                                {this.state.selectedPack ===\r\n                                                    -1 && <span>--</span>}\r\n                                                {this.state.selectedPack !==\r\n                                                    -1 &&\r\n                                                    this.state.times <= 99 &&\r\n                                                    this.state.times >= 1 && (\r\n                                                        <span>\r\n                                                            {(\r\n                                                                (this.state\r\n                                                                    .packs[\r\n                                                                    this.state\r\n                                                                        .selectedPack\r\n                                                                ].price /\r\n                                                                    100) *\r\n                                                                this.state.times\r\n                                                            ).toFixed(2)}\r\n                                                        </span>\r\n                                                    )}\r\n                                            </span>\r\n                                        )}\r\n                                        {this.state.packPayMethod ===\r\n                                            \"score\" && (\r\n                                            <span className={classes.priceShow}>\r\n                                                {this.state.selectedPack ===\r\n                                                    -1 && <span>--</span>}\r\n                                                {this.state.selectedPack !==\r\n                                                    -1 &&\r\n                                                    this.state.times <= 99 &&\r\n                                                    this.state.times >= 1 && (\r\n                                                        <span>\r\n                                                            {this.state.packs[\r\n                                                                this.state\r\n                                                                    .selectedPack\r\n                                                            ].score *\r\n                                                                this.state\r\n                                                                    .times}{\" \"}\r\n                                                            积分\r\n                                                        </span>\r\n                                                    )}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button\r\n                                            size=\"large\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            disabled={\r\n                                                this.state.loading ||\r\n                                                this.state.packPayMethod ===\r\n                                                    null\r\n                                            }\r\n                                            onClick={() => this.buyPack(\"pack\")}\r\n                                        >\r\n                                            <ShopIcon /> 立即购买\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                )}\r\n                {this.state.value === 1 && (\r\n                    <Paper className={classes.paper} square={true}>\r\n                        <Grid container spacing={5} alignItems=\"flex-end\">\r\n                            {this.state.groups.map((tier, id) => (\r\n                                // Enterprise card is full width at sm breakpoint\r\n                                <Grid item key={id} xs={12} sm={6} md={4}>\r\n                                    <Card>\r\n                                        <CardHeader\r\n                                            title={tier.name}\r\n                                            subheader={\r\n                                                tier.highlight ? \"推荐\" : null\r\n                                            }\r\n                                            titleTypographyProps={{\r\n                                                align: \"center\",\r\n                                            }}\r\n                                            subheaderTypographyProps={{\r\n                                                align: \"center\",\r\n                                            }}\r\n                                            action={\r\n                                                tier.highlight ? (\r\n                                                    <StarIcon />\r\n                                                ) : null\r\n                                            }\r\n                                            className={classes.cardHeader}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <div\r\n                                                className={classes.cardPricing}\r\n                                            >\r\n                                                <Typography\r\n                                                    component=\"h2\"\r\n                                                    variant=\"h3\"\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    ￥{tier.price / 100}\r\n                                                </Typography>\r\n                                                <Typography\r\n                                                    variant=\"h6\"\r\n                                                    color=\"textSecondary\"\r\n                                                >\r\n                                                    /\r\n                                                    {Math.ceil(\r\n                                                        tier.time / 86400\r\n                                                    )}\r\n                                                    天\r\n                                                </Typography>\r\n                                            </div>\r\n                                            {tier.des.map((line) => (\r\n                                                <Typography\r\n                                                    variant=\"subtitle1\"\r\n                                                    align=\"center\"\r\n                                                    key={line}\r\n                                                >\r\n                                                    {line}\r\n                                                </Typography>\r\n                                            ))}\r\n                                        </CardContent>\r\n                                        <CardActions\r\n                                            className={classes.cardActions}\r\n                                        >\r\n                                            <Button\r\n                                                fullWidth\r\n                                                variant={\r\n                                                    tier.highlight\r\n                                                        ? \"contained\"\r\n                                                        : \"outlined\"\r\n                                                }\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.selectGroup(id)\r\n                                                }\r\n                                            >\r\n                                                立即购买\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Paper>\r\n                )}\r\n\r\n                {this.state.value === 2 && (\r\n                    <Paper className={classes.paper} square={true}>\r\n                        <Grid\r\n                            container\r\n                            className={classes.payMethod}\r\n                            spacing={1}\r\n                        >\r\n                            <Grid sm={6} xs={12}>\r\n                                {methodSelect}\r\n                            </Grid>\r\n                            <Grid sm={6} xs={12}>\r\n                                <div className={classes.action}>\r\n                                    <div>\r\n                                        当前费用：\r\n                                        {this.state.packPayMethod !==\r\n                                            \"score\" && (\r\n                                            <span className={classes.priceShow}>\r\n                                                ￥\r\n                                                <span>\r\n                                                    {(\r\n                                                        (this.state.scorePrice /\r\n                                                            100) *\r\n                                                        this.state.scoreNum\r\n                                                    ).toFixed(2)}\r\n                                                </span>\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button\r\n                                            size=\"large\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            disabled={\r\n                                                this.state.loading ||\r\n                                                this.state.packPayMethod ===\r\n                                                    null\r\n                                            }\r\n                                            onClick={() =>\r\n                                                this.buyPack(\"score\")\r\n                                            }\r\n                                        >\r\n                                            <ShopIcon /> 立即购买\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                )}\r\n\r\n                {this.state.value === 3 && (\r\n                    <Paper className={classes.paper} square={true}>\r\n                        <div className={classes.redeemContainer}>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"输入激活码\"\r\n                                value={this.state.redeemCode}\r\n                                onChange={this.handleTexyChange(\"redeemCode\")}\r\n                                margin=\"normal\"\r\n                                inputProps={{\r\n                                    style: { textTransform: \"uppercase\" },\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.doRedeem}>\r\n                                <Button\r\n                                    size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button}\r\n                                    disabled={this.state.loading}\r\n                                    onClick={this.doRedeem}\r\n                                >\r\n                                    下一步\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                )}\r\n                <Dialog\r\n                    open={this.state.dialog === \"qr\"}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">支付</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            请使用\r\n                            {this.state.payment.type === \"alipay\" && (\r\n                                <span>支付宝</span>\r\n                            )}\r\n                            {this.state.payment.type === \"payjs\" && (\r\n                                <span>微信</span>\r\n                            )}\r\n                            扫描下方二维码完成付款，付款完成后本页面会自动刷新。\r\n                        </DialogContentText>\r\n                        <div className={classes.codeContainer}>\r\n                            <QRCode value={this.state.payment.img} />,\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.dialog === \"success\"}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">支付完成</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            您所购买的商品已到账。\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.dialog === \"redeem\"}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">确认兑换</DialogTitle>\r\n                    <DialogContent>\r\n                        {this.state.redeemInfo !== null && (\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                <Typography variant=\"subtitle1\">\r\n                                    商品名称：\r\n                                </Typography>\r\n                                <Typography>\r\n                                    {this.state.redeemInfo.name}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    {this.state.redeemInfo.type === 2\r\n                                        ? \"数量：\"\r\n                                        : \"时长：\"}\r\n                                </Typography>\r\n                                <Typography>\r\n                                    {this.state.redeemInfo.type === 2 && (\r\n                                        <>{this.state.redeemInfo.num}</>\r\n                                    )}\r\n                                    {this.state.redeemInfo.type !== 2 && (\r\n                                        <>\r\n                                            {Math.ceil(\r\n                                                this.state.redeemInfo.time /\r\n                                                    86400\r\n                                            ) * this.state.redeemInfo.num}\r\n                                            天\r\n                                        </>\r\n                                    )}\r\n                                </Typography>\r\n                            </DialogContentText>\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose}>取消</Button>\r\n                        <Button\r\n                            onClick={this.confirmRedeem}\r\n                            color=\"primary\"\r\n                            disabled={this.state.loading}\r\n                        >\r\n                            确认兑换\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.dialog === \"buyGroup\"}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                        购买用户组\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            已选：\r\n                            {this.state.selectedGroup !== -1 &&\r\n                                this.state.groups[this.state.selectedGroup]\r\n                                    .name}\r\n                        </DialogContentText>\r\n                        {methodSelect}\r\n                        <div>\r\n                            当前费用：\r\n                            {this.state.packPayMethod !== \"score\" && (\r\n                                <span className={classes.priceShow}>\r\n                                    ￥\r\n                                    {this.state.selectedGroup === -1 && (\r\n                                        <span>--</span>\r\n                                    )}\r\n                                    {this.state.selectedGroup !== -1 &&\r\n                                        this.state.times <= 99 &&\r\n                                        this.state.times >= 1 && (\r\n                                            <span>\r\n                                                {(\r\n                                                    (this.state.groups[\r\n                                                        this.state.selectedGroup\r\n                                                    ].price /\r\n                                                        100) *\r\n                                                    this.state.times\r\n                                                ).toFixed(2)}\r\n                                            </span>\r\n                                        )}\r\n                                </span>\r\n                            )}\r\n                            {this.state.packPayMethod === \"score\" && (\r\n                                <span className={classes.priceShow}>\r\n                                    {this.state.selectedGroup === -1 && (\r\n                                        <span>--</span>\r\n                                    )}\r\n                                    {this.state.selectedGroup !== -1 &&\r\n                                        this.state.times <= 99 &&\r\n                                        this.state.times >= 1 && (\r\n                                            <span>\r\n                                                {this.state.groups[\r\n                                                    this.state.selectedGroup\r\n                                                ].score * this.state.times}{\" \"}\r\n                                                积分\r\n                                            </span>\r\n                                        )}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            onClick={this.handleClose}\r\n                            disabled={this.state.loading}\r\n                        >\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            disabled={\r\n                                this.state.loading ||\r\n                                this.state.packPayMethod === null\r\n                            }\r\n                            onClick={() => this.buyPack(\"group\")}\r\n                            color=\"primary\"\r\n                        >\r\n                            购买\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst BuyQuota = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(BuyQuotaCompoment)));\r\n\r\nexport default BuyQuota;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    formGroup: {\r\n        display: \"flex\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    formIcon: {\r\n        marginTop: 21,\r\n        marginRight: 19,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    input: {\r\n        width: 250,\r\n    },\r\n    dialogContent: {\r\n        paddingTop: 24,\r\n        paddingRight: 24,\r\n        paddingBottom: 8,\r\n        paddingLeft: 24,\r\n    },\r\n    button: {\r\n        marginTop: 8,\r\n    },\r\n}));\r\n\r\nexport default function CreateWebDAVAccount(props) {\r\n    const [value, setValue] = useState({\r\n        name: \"\",\r\n        path: \"/\",\r\n    });\r\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setValue({\r\n            ...value,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const selectPath = () => {\r\n        setValue({\r\n            ...value,\r\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        });\r\n        setPathSelectDialog(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <Dialog\r\n                open={pathSelectDialog}\r\n                onClose={() => setPathSelectDialog(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => setPathSelectDialog(false)}>\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={selectPath}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\"}\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div className={classes.dialogContent}>\r\n                <div className={classes.formContainer}>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <LabelOutlined />\r\n                        </div>\r\n\r\n                        <TextField\r\n                            className={classes.input}\r\n                            value={value.name}\r\n                            onChange={handleInputChange(\"name\")}\r\n                            label=\"备注名\"\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <FolderOpenOutlined />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                value={value.path}\r\n                                onChange={handleInputChange(\"path\")}\r\n                                className={classes.input}\r\n                                label=\"相对根目录\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                className={classes.button}\r\n                                color=\"primary\"\r\n                                onClick={() => setPathSelectDialog(true)}\r\n                            >\r\n                                选择目录\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <Button\r\n                    disabled={value.path === \"\" || value.name === \"\"}\r\n                    color=\"primary\"\r\n                    onClick={() => props.callback(value)}\r\n                >\r\n                    确定\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { FolderOpenOutlined, Storage } from \"@material-ui/icons\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    formGroup: {\r\n        display: \"flex\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    formIcon: {\r\n        marginTop: 21,\r\n        marginRight: 19,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    input: {\r\n        width: 250,\r\n    },\r\n    dialogContent: {\r\n        paddingTop: 24,\r\n        paddingRight: 24,\r\n        paddingBottom: 8,\r\n        paddingLeft: 24,\r\n    },\r\n    button: {\r\n        marginTop: 8,\r\n    },\r\n}));\r\n\r\nexport default function CreateWebDAVMount(props) {\r\n    const [value, setValue] = useState({\r\n        policy: \"\",\r\n        path: \"/\",\r\n    });\r\n    const [policies, setPolicies] = useState([]);\r\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setValue({\r\n            ...value,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const selectPath = () => {\r\n        setValue({\r\n            ...value,\r\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        });\r\n        setPathSelectDialog(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/user/setting/policies\")\r\n            .then((response) => {\r\n                setPolicies(response.data.options);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <Dialog\r\n                open={pathSelectDialog}\r\n                onClose={() => setPathSelectDialog(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => setPathSelectDialog(false)}>\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={selectPath}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\"}\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div className={classes.dialogContent}>\r\n                <div className={classes.formContainer}>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <Storage />\r\n                        </div>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">\r\n                                存储策略\r\n                            </InputLabel>\r\n                            <Select\r\n                                className={classes.input}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                value={value.policy}\r\n                                onChange={handleInputChange(\"policy\")}\r\n                            >\r\n                                {policies.map((v, k) => (\r\n                                    <MenuItem key={k} value={v.id}>\r\n                                        {v.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <FolderOpenOutlined />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                value={value.path}\r\n                                onChange={handleInputChange(\"path\")}\r\n                                className={classes.input}\r\n                                label=\"目录\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                className={classes.button}\r\n                                color=\"primary\"\r\n                                onClick={() => setPathSelectDialog(true)}\r\n                            >\r\n                                选择目录\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <Button\r\n                    disabled={value.path === \"\" || value.policy === \"\"}\r\n                    color=\"primary\"\r\n                    onClick={() => props.callback(value)}\r\n                >\r\n                    确定\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport CreateWebDAVMount from \"../Modals/CreateWebDAVMount\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardContent: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n    create: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    copy: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\n\r\nexport default function WebDAV() {\r\n    const [tab, setTab] = useState(0);\r\n    const [create, setCreate] = useState(false);\r\n    const [mount, setMount] = useState(false);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [folders, setFolders] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const copyToClipboard = (text) => {\r\n        navigator.clipboard.writeText(text);\r\n        ToggleSnackbar(\"top\", \"center\", \"已复制到剪切板\", \"success\");\r\n    };\r\n\r\n    const loadList = () => {\r\n        API.get(\"/webdav/accounts\")\r\n            .then((response) => {\r\n                setAccounts(response.data.accounts);\r\n                setFolders(response.data.folders);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadList();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const deleteAccount = (id) => {\r\n        const account = accounts[id];\r\n        API.delete(\"/webdav/accounts/\" + account.ID)\r\n            .then(() => {\r\n                let accountCopy = [...accounts];\r\n                accountCopy = accountCopy.filter((v, i) => {\r\n                    return i !== id;\r\n                });\r\n                setAccounts(accountCopy);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const deleteMount = (id) => {\r\n        const folder = folders[id];\r\n        API.delete(\"/webdav/mount/\" + folder.id)\r\n            .then(() => {\r\n                let folderCopy = [...folders];\r\n                folderCopy = folderCopy.filter((v, i) => {\r\n                    return i !== id;\r\n                });\r\n                setFolders(folderCopy);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addAccount = (account) => {\r\n        setCreate(false);\r\n        API.post(\"/webdav/accounts\", {\r\n            path: account.path,\r\n            name: account.name,\r\n        })\r\n            .then((response) => {\r\n                setAccounts([\r\n                    {\r\n                        ID: response.data.id,\r\n                        Password: response.data.password,\r\n                        CreatedAt: response.data.created_at,\r\n                        Name: account.name,\r\n                        Root: account.path,\r\n                    },\r\n                    ...accounts,\r\n                ]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addMount = (mountInfo) => {\r\n        setMount(false);\r\n        API.post(\"/webdav/mount\", {\r\n            path: mountInfo.path,\r\n            policy: mountInfo.policy,\r\n        })\r\n            .then(() => {\r\n                loadList();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const user = Auth.GetUser();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <CreateWebDAVAccount\r\n                callback={addAccount}\r\n                open={create}\r\n                onClose={() => setCreate(false)}\r\n            />\r\n            <CreateWebDAVMount\r\n                callback={addMount}\r\n                open={mount}\r\n                onClose={() => setMount(false)}\r\n            />\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n                WebDAV\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.content}>\r\n                <Tabs\r\n                    value={tab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={(event, newValue) => setTab(newValue)}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    <Tab label=\"账号管理\" />\r\n                    <Tab label=\"存储策略挂载\" />\r\n                </Tabs>\r\n                <div className={classes.cardContent}>\r\n                    {tab === 0 && (\r\n                        <div>\r\n                            <Alert severity=\"info\">\r\n                                WebDAV的地址为：\r\n                                {window.location.origin + \"/dav\"}\r\n                                ；登陆用户名统一为：{user.user_name}{\" \"}\r\n                                ；密码为所创建账号的密码。\r\n                            </Alert>\r\n                            <TableContainer className={classes.tableContainer}>\r\n                                <Table\r\n                                    className={classes.table}\r\n                                    aria-label=\"simple table\"\r\n                                >\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>备注名</TableCell>\r\n                                            <TableCell>密码</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                根目录\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                创建日期\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                操作\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {accounts.map((row, id) => (\r\n                                            <TableRow key={id}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.Name}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row.Password}\r\n                                                    <Link\r\n                                                        className={classes.copy}\r\n                                                        onClick={() =>\r\n                                                            copyToClipboard(\r\n                                                                row.Password\r\n                                                            )\r\n                                                        }\r\n                                                        href={\"javascript:void\"}\r\n                                                    >\r\n                                                        复制\r\n                                                    </Link>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {row.Root}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <TimeAgo\r\n                                                        datetime={row.CreatedAt}\r\n                                                        locale=\"zh_CN\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton\r\n                                                        size={\"small\"}\r\n                                                        onClick={() =>\r\n                                                            deleteAccount(id)\r\n                                                        }\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <Button\r\n                                onClick={() => setCreate(true)}\r\n                                className={classes.create}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                创建新账号\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    {tab === 1 && (\r\n                        <div>\r\n                            <Alert severity=\"info\">\r\n                                为目录挂载存储策略后，在 WebDAV\r\n                                中上传至此目录的新文件将会使用挂载的存储策略存储。复制、移动到此目录不会应用挂载的存储策略；挂载设置不会被子目录继承。\r\n                            </Alert>\r\n                            <TableContainer className={classes.tableContainer}>\r\n                                <Table\r\n                                    size=\"small\"\r\n                                    className={classes.table}\r\n                                    aria-label=\"simple table\"\r\n                                >\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>目录名</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                挂载存储策略\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                操作\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {folders.map((row, id) => (\r\n                                            <TableRow key={id}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {row.policy_name}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton\r\n                                                        size={\"small\"}\r\n                                                        onClick={() =>\r\n                                                            deleteMount(id)\r\n                                                        }\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <Button\r\n                                onClick={() => setMount(true)}\r\n                                className={classes.create}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                挂载新目录\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport API from \"../../middleware/Api\";\r\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        overflowX: \"auto\",\r\n    },\r\n    cardContent: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n    create: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    noWrap: {\r\n        wordBreak: \"keepAll\",\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Tasks() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = (page) => {\r\n        API.get(\"/user/setting/tasks?page=\" + page)\r\n            .then((response) => {\r\n                setTasks(response.data.tasks);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList(page);\r\n        // eslint-disable-next-line\r\n    }, [page]);\r\n\r\n    const getError = (error) => {\r\n        if (error === \"\") {\r\n            return \"-\";\r\n        }\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg;\r\n        } catch (e) {\r\n            return \"未知\";\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n                任务队列\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.content}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                任务类型\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                状态\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                最后进度\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tasks.map((row, id) => (\r\n                            <TableRow key={id}>\r\n                                <TableCell\r\n                                    nowrap=\"nowrap\"\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                >\r\n                                    {formatLocalTime(\r\n                                        row.create_date,\r\n                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskType(row.type)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskStatus(row.status)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskProgress(row.type, row.progress)}\r\n                                </TableCell>\r\n                                <TableCell className={classes.noWrap}>\r\n                                    {getError(row.error)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <div className={classes.footer}>\r\n                    <Pagination\r\n                        count={Math.ceil(total / 10)}\r\n                        onChange={(e, v) => setPage(v)}\r\n                        color=\"secondary\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { useParams } from \"react-router\";\n\nexport default function Ifm() {\r\n    const params = useParams(\"action\");\r\n\tlet iFrameHeight = '500px';\r\n\tlet iframe = null;\r\n\r\n    const getCookie =(name)=> {\r\n        const strcookie = document.cookie;//获取cookie字符串\r\n            const arrcookie = strcookie.split(\"; \");//分割\r\n            //遍历匹配\r\n            for ( let i = 0; i < arrcookie.length; i++) {\r\n                const arr = arrcookie[i].split(\"=\");\r\n                if (arr[0] == name){\r\n                    return unescape(arr[1]);\r\n                }\r\n            }\r\n        return null;\r\n    }\r\n\t\r\n    const ifmUrl = ()=>{\r\n        return \"/app/index.php?\" + params.action + \"&token=\" + getCookie(\"token\");\r\n    }\n     return (\n        <iframe \n                style={{width:'100%', overflow:'visible'}}\n                onLoad={() => {\r\n\t\t\t\t\tiFrameHeight = (document.documentElement.clientHeight - (document.documentElement.clientHeight * 0.075)) + 'px';\r\n\t\t\t\t\tiframe.height = iFrameHeight;\r\n                }} \r\n\t\t\t\tref={(c) => { iframe = c; }}\n                src={ifmUrl()} \n                width=\"100%\" \n                height={iFrameHeight} \n                frameBorder=\"0\"\n\t\t\t\tscrolling=\"auto\"\n            />\n     );\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nimport {\r\n    withStyles,\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    Tabs,\r\n    Tab,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        marginBottom: \"30px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    userNav: {\r\n        height: \"270px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: \"20px 20px 2em\",\r\n        backgroundImage:\r\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\r\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"bottom\",\r\n    },\r\n    avatarContainer: {\r\n        height: \"80px\",\r\n        width: \"80px\",\r\n        borderRaidus: \"50%\",\r\n        margin: \"auto\",\r\n        marginTop: \"50px\",\r\n        boxShadow:\r\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\r\n        border: \"2px solid #fff\",\r\n    },\r\n    nickName: {\r\n        width: \"200px\",\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        marginTop: \"1px\",\r\n        fontSize: \"25px\",\r\n        color: \"#ffffff\",\r\n        opacity: \"0.81\",\r\n    },\r\n    th: {\r\n        minWidth: \"106px\",\r\n    },\r\n    mobileHide: {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    tableLink: {\r\n        cursor: \"pointer\",\r\n    },\r\n    navigator: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    pageInfo: {\r\n        marginTop: \"14px\",\r\n        marginLeft: \"23px\",\r\n    },\r\n    infoItem: {\r\n        paddingLeft: \"46px!important\",\r\n        paddingBottom: \"20px!important\",\r\n    },\r\n    infoContainer: {\r\n        marginTop: \"30px\",\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass ProfileCompoment extends Component {\r\n    state = {\r\n        listType: 0,\r\n        shareList: [],\r\n        page: 1,\r\n        user: null,\r\n        total: 0,\r\n    };\r\n\r\n    handleChange = (event, listType) => {\r\n        this.setState({ listType });\r\n        if (listType === 1) {\r\n            this.loadList(1, \"hot\");\r\n        } else if (listType === 0) {\r\n            this.loadList(1, \"default\");\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadList(1, \"default\");\r\n    };\r\n\r\n    loadList = (page, order) => {\r\n        API.get(\r\n            \"/user/profile/\" +\r\n                this.props.match.params.id +\r\n                \"?page=\" +\r\n                page +\r\n                \"&type=\" +\r\n                order\r\n        )\r\n            .then((response) => {\r\n                this.setState({\r\n                    shareList: response.data.items,\r\n                    user: response.data.user,\r\n                    total: response.data.total,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadNext = () => {\r\n        this.loadList(\r\n            this.state.page + 1,\r\n            this.state.listType === 0 ? \"default\" : \"hot\"\r\n        );\r\n    };\r\n\r\n    loadPrev = () => {\r\n        this.loadList(\r\n            this.state.page - 1,\r\n            this.state.listType === 0 ? \"default\" : \"hot\"\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                {this.state.user === null && <div></div>}\r\n                {this.state.user !== null && (\r\n                    <Paper square>\r\n                        <div className={classes.userNav}>\r\n                            <div>\r\n                                <Avatar\r\n                                    className={classes.avatarContainer}\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" +\r\n                                        this.state.user.id +\r\n                                        \"/l\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Typography className={classes.nickName} noWrap>\r\n                                    {this.state.user.nick}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs\r\n                            value={this.state.listType}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={this.handleChange}\r\n                            centered\r\n                        >\r\n                            <Tab label=\"全部分享\" />\r\n                            <Tab label=\"热门分享\" />\r\n                            <Tab label=\"个人资料\" />\r\n                        </Tabs>\r\n                        {this.state.listType === 2 && (\r\n                            <div className={classes.infoContainer}>\r\n                                <Grid container spacing={24}>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            UID\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.id}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            昵称\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.nick}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            用户组\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.group}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            分享总数\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.total}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            注册日期\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.date}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        )}\r\n                        {(this.state.listType === 0 ||\r\n                            this.state.listType === 1) && (\r\n                            <div>\r\n                                <div className={classes.tableContainer}>\r\n                                    <Table className={classes.table}>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>文件名</TableCell>\r\n                                                <TableCell\r\n                                                    className={\r\n                                                        classes.mobileHide\r\n                                                    }\r\n                                                >\r\n                                                    分享日期\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={[\r\n                                                        classes.th,\r\n                                                        classes.mobileHide,\r\n                                                    ]}\r\n                                                >\r\n                                                    下载次数\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={[\r\n                                                        classes.th,\r\n                                                        classes.mobileHide,\r\n                                                    ]}\r\n                                                >\r\n                                                    浏览次数\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.state.shareList.map(\r\n                                                (row, id) => (\r\n                                                    <TableRow\r\n                                                        key={id}\r\n                                                        className={\r\n                                                            classes.tableLink\r\n                                                        }\r\n                                                        onClick={() =>\r\n                                                            this.props.history.push(\r\n                                                                \"/s/\" + row.key\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <TableCell>\r\n                                                            <Typography>\r\n                                                                {row.source\r\n                                                                    ? row.source\r\n                                                                          .name\r\n                                                                    : \"[已失效]\"}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            nowrap={\"nowrap\"}\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.create_date}\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.downloads}\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.views}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            )}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                                {this.state.shareList.length !== 0 &&\r\n                                    this.state.listType === 0 && (\r\n                                        <div className={classes.navigator}>\r\n                                            <Pagination\r\n                                                count={Math.ceil(\r\n                                                    this.state.total / 10\r\n                                                )}\r\n                                                onChange={(e, v) =>\r\n                                                    this.loadList(\r\n                                                        v,\r\n                                                        this.state.listType ===\r\n                                                            0\r\n                                                            ? \"default\"\r\n                                                            : \"hot\"\r\n                                                    )\r\n                                                }\r\n                                                color=\"secondary\"\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                    </Paper>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Profile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ProfileCompoment)));\r\n\r\nexport default Profile;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\r\nimport API from \"../../middleware/Api\";\r\nimport { bufferDecode, bufferEncode } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sectionTitle: {\r\n        paddingBottom: \"10px\",\r\n        paddingTop: \"30px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"4px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    desenList: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    iconFix: {\r\n        marginRight: \"11px\",\r\n        marginLeft: \"7px\",\r\n        minWidth: 40,\r\n    },\r\n    flexContainer: {\r\n        display: \"flex\",\r\n    },\r\n}));\r\n\r\nexport default function Authn(props) {\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteCredential = (id) => {\r\n        API.patch(\"/user/setting/authn\", {\r\n            id: id,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"凭证已删除\", \"success\");\r\n                props.remove(id);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setConfirm(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const addCredential = () => {\r\n        if (!navigator.credentials) {\r\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\r\n\r\n            return;\r\n        }\r\n        API.put(\"/user/authn\", {})\r\n            .then((response) => {\r\n                const credentialCreationOptions = response.data;\r\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\r\n                    credentialCreationOptions.publicKey.challenge\r\n                );\r\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\r\n                    credentialCreationOptions.publicKey.user.id\r\n                );\r\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        credentialCreationOptions.publicKey.excludeCredentials\r\n                            .length;\r\n                        i++\r\n                    ) {\r\n                        credentialCreationOptions.publicKey.excludeCredentials[\r\n                            i\r\n                        ].id = bufferDecode(\r\n                            credentialCreationOptions.publicKey\r\n                                .excludeCredentials[i].id\r\n                        );\r\n                    }\r\n                }\r\n\r\n                return navigator.credentials.create({\r\n                    publicKey: credentialCreationOptions.publicKey,\r\n                });\r\n            })\r\n            .then((credential) => {\r\n                const attestationObject = credential.response.attestationObject;\r\n                const clientDataJSON = credential.response.clientDataJSON;\r\n                const rawId = credential.rawId;\r\n                return API.put(\r\n                    \"/user/authn/finish\",\r\n                    JSON.stringify({\r\n                        id: credential.id,\r\n                        rawId: bufferEncode(rawId),\r\n                        type: credential.type,\r\n                        response: {\r\n                            attestationObject: bufferEncode(attestationObject),\r\n                            clientDataJSON: bufferEncode(clientDataJSON),\r\n                        },\r\n                    })\r\n                );\r\n            })\r\n            .then((response) => {\r\n                props.add(response.data);\r\n                ToggleSnackbar(\"top\", \"right\", \"验证器已添加\", \"success\");\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\r\n                <DialogTitle>删除凭证</DialogTitle>\r\n                <DialogContent>确定要吊销这个凭证吗？</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => deleteCredential(selected)}\r\n                        color=\"primary\"\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\r\n                外部认证器\r\n            </Typography>\r\n            <Paper>\r\n                <List className={classes.desenList}>\r\n                    {props.list.map((v) => (\r\n                        <>\r\n                            <ListItem\r\n                                button\r\n                                style={{\r\n                                    paddingRight: 60,\r\n                                }}\r\n                                onClick={() => {\r\n                                    setConfirm(true);\r\n                                    setSelected(v.id);\r\n                                }}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Fingerprint />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={v.fingerprint} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() => deleteCredential(v.id)}\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <HighlightOff\r\n                                        className={classes.rightIcon}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </>\r\n                    ))}\r\n                    <ListItem button onClick={() => addCredential()}>\r\n                        <ListItemIcon className={classes.iconFix}>\r\n                            <Add />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"添加新验证器\" />\r\n\r\n                        <ListItemSecondaryAction\r\n                            className={classes.flexContainer}\r\n                        >\r\n                            <RightIcon className={classes.rightIcon} />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { FormLabel, makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {\r\n    refreshTimeZone,\r\n    timeZone,\r\n    validateTimeZone,\r\n} from \"../../utils/datetime\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function TimeZoneDialog(props) {\r\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const saveZoneInfo = () => {\r\n        if (!validateTimeZone(timeZoneValue)) {\r\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\r\n            return;\r\n        }\r\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\r\n        refreshTimeZone();\r\n        props.onClose();\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">更改时区</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <FormControl>\r\n                    <TextField\r\n                        label={\"IANA 时区名称标识\"}\r\n                        value={timeZoneValue}\r\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={timeZoneValue === \"\"}\r\n                        onClick={() => saveZoneInfo()}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport DateIcon from \"@material-ui/icons/DateRange\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\r\nimport AlarmOff from \"@material-ui/icons/AlarmOff\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\r\nimport ColorIcon from \"@material-ui/icons/Palette\";\r\nimport {\r\n    applyThemes,\r\n    changeViewMethod,\r\n    toggleDaylightMode,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport axios from \"axios\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport {\r\n    ListItemIcon,\r\n    withStyles,\r\n    Button,\r\n    Divider,\r\n    TextField,\r\n    Avatar,\r\n    Paper,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Switch,\r\n} from \"@material-ui/core\";\r\nimport Backup from \"@material-ui/icons/Backup\";\r\nimport SettingsInputHdmi from \"@material-ui/icons/SettingsInputHdmi\";\r\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { withRouter } from \"react-router\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport QRCode from \"qrcode-react\";\r\nimport {\r\n    Brightness3,\r\n    Check,\r\n    ConfirmationNumber,\r\n    ListAlt,\r\n    PermContactCalendar,\r\n    Schedule,\r\n} from \"@material-ui/icons\";\r\nimport { transformTime } from \"../../utils\";\r\nimport Authn from \"./Authn\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\r\nimport TimeZoneDialog from \"../Modals/TimeZone\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    sectionTitle: {\r\n        paddingBottom: \"10px\",\r\n        paddingTop: \"30px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"4px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    uploadFromFile: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    userGravatar: {\r\n        backgroundColor: yellow[100],\r\n        color: yellow[800],\r\n    },\r\n    policySelected: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n    infoText: {\r\n        marginRight: \"17px\",\r\n    },\r\n    infoTextWithIcon: {\r\n        marginRight: \"17px\",\r\n        marginTop: \"1px\",\r\n    },\r\n    rightIconWithText: {\r\n        marginTop: \"0px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    iconFix: {\r\n        marginRight: \"11px\",\r\n        marginLeft: \"7px\",\r\n        minWidth: 40,\r\n    },\r\n    flexContainer: {\r\n        display: \"flex\",\r\n    },\r\n    desenList: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    flexContainerResponse: {\r\n        display: \"flex\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"initial\",\r\n        },\r\n    },\r\n    desText: {\r\n        marginTop: \"10px\",\r\n    },\r\n    secondColor: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n        borderRadius: \"50%\",\r\n        marginRight: \"17px\",\r\n    },\r\n    firstColor: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: \"50%\",\r\n        marginRight: \"6px\",\r\n    },\r\n    themeBlock: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n    },\r\n    paddingBottom: {\r\n        marginBottom: \"30px\",\r\n    },\r\n    paddingText: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    qrcode: {\r\n        width: 128,\r\n        marginTop: 16,\r\n        marginRight: 16,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        title: state.siteConfig.title,\r\n        authn: state.siteConfig.authn,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        applyThemes: (color) => {\r\n            dispatch(applyThemes(color));\r\n        },\r\n        toggleDaylightMode: () => {\r\n            dispatch(toggleDaylightMode());\r\n        },\r\n        changeView: (method) => {\r\n            dispatch(changeViewMethod(method));\r\n        },\r\n    };\r\n};\r\n\r\nclass UserSettingCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        avatarModal: false,\r\n        nickModal: false,\r\n        changePassword: false,\r\n        loading: \"\",\r\n        oldPwd: \"\",\r\n        newPwd: \"\",\r\n        webdavPwd: \"\",\r\n        newPwdRepeat: \"\",\r\n        twoFactor: false,\r\n        authCode: \"\",\r\n        changeTheme: false,\r\n        chosenTheme: null,\r\n        showWebDavUrl: false,\r\n        showWebDavUserName: false,\r\n        changeWebDavPwd: false,\r\n        groupBackModal: false,\r\n        changePolicy: false,\r\n        changeTimeZone: false,\r\n        settings: {\r\n            uid: 0,\r\n            group_expires: 0,\r\n            policy: {\r\n                current: {\r\n                    name: \"-\",\r\n                    id: \"\",\r\n                },\r\n                options: [],\r\n            },\r\n            qq: \"\",\r\n            homepage: true,\r\n            two_factor: \"\",\r\n            two_fa_secret: \"\",\r\n            prefer_theme: \"\",\r\n            themes: {},\r\n            authn: [],\r\n        },\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            avatarModal: false,\r\n            nickModal: false,\r\n            changePassword: false,\r\n            loading: \"\",\r\n            twoFactor: false,\r\n            changeTheme: false,\r\n            showWebDavUrl: false,\r\n            showWebDavUserName: false,\r\n            changeWebDavPwd: false,\r\n            groupBackModal: false,\r\n            changePolicy: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadSetting();\r\n    }\r\n\r\n    toggleViewMethod = () => {\r\n        const newMethod =\r\n            this.props.viewMethod === \"icon\"\r\n                ? \"list\"\r\n                : this.props.viewMethod === \"list\"\r\n                ? \"smallIcon\"\r\n                : \"icon\";\r\n        Auth.SetPreference(\"view_method\", newMethod);\r\n        this.props.changeView(newMethod);\r\n    };\r\n\r\n    loadSetting = () => {\r\n        API.get(\"/user/setting\")\r\n            .then((response) => {\r\n                const theme = JSON.parse(response.data.themes);\r\n                response.data.themes = theme;\r\n                this.setState({\r\n                    settings: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    doChangeGroup = () => {\r\n        API.patch(\"/user/setting/vip\", {})\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"解约成功，更改会在数分钟后生效\",\r\n                    \"success\"\r\n                );\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useGravatar = () => {\r\n        this.setState({\r\n            loading: \"gravatar\",\r\n        });\r\n        API.put(\"/user/setting/avatar\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"头像已更新，刷新后生效\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changePolicy = (id) => {\r\n        API.patch(\"/user/setting/policy\", {\r\n            id: id,\r\n        })\r\n            .then(() => {\r\n                window.location.reload();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changeNick = () => {\r\n        this.setState({\r\n            loading: \"nick\",\r\n        });\r\n        API.patch(\"/user/setting/nick\", {\r\n            nick: this.state.nick,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"昵称已更改，刷新后生效\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    bindQQ = () => {\r\n        this.setState({\r\n            loading: \"nick\",\r\n        });\r\n        API.patch(\"/user/setting/qq\", {})\r\n            .then((response) => {\r\n                if (response.data === \"\") {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"已解除与QQ账户的关联\",\r\n                        \"success\"\r\n                    );\r\n                    this.setState({\r\n                        settings: {\r\n                            ...this.state.settings,\r\n                            qq: false,\r\n                        },\r\n                    });\r\n                } else {\r\n                    window.location.href = response.data;\r\n                }\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    uploadAvatar = () => {\r\n        this.setState({\r\n            loading: \"avatar\",\r\n        });\r\n        const formData = new FormData();\r\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\r\n        API.post(\"/user/setting/avatar\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"头像已更新，刷新后生效\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    handleToggle = () => {\r\n        API.patch(\"/user/setting/homepage\", {\r\n            status: !this.state.settings.homepage,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"设置已保存\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    settings: {\r\n                        ...this.state.settings,\r\n                        homepage: !this.state.settings.homepage,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changhePwd = () => {\r\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"两次密码输入不一致\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: \"changePassword\",\r\n        });\r\n        API.patch(\"/user/setting/password\", {\r\n            old: this.state.oldPwd,\r\n            new: this.state.newPwd,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"密码已更新\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changeTheme = () => {\r\n        this.setState({\r\n            loading: \"changeTheme\",\r\n        });\r\n        API.patch(\"/user/setting/theme\", {\r\n            theme: this.state.chosenTheme,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"主题配色已更换\",\r\n                    \"success\"\r\n                );\r\n                this.props.applyThemes(this.state.chosenTheme);\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changheWebdavPwd = () => {\r\n        this.setState({\r\n            loading: \"changheWebdavPwd\",\r\n        });\r\n        axios\r\n            .post(\"/Member/setWebdavPwd\", {\r\n                pwd: this.state.webdavPwd,\r\n            })\r\n            .then((response) => {\r\n                if (response.data.error === \"1\") {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.data.msg,\r\n                        \"error\"\r\n                    );\r\n                    this.setState({\r\n                        loading: \"\",\r\n                    });\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.data.msg,\r\n                        \"success\"\r\n                    );\r\n                    this.setState({\r\n                        loading: \"\",\r\n                        changeWebDavPwd: false,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    init2FA = () => {\r\n        if (this.state.settings.two_factor) {\r\n            this.setState({ twoFactor: true });\r\n            return;\r\n        }\r\n        API.get(\"/user/setting/2fa\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    two_fa_secret: response.data,\r\n                    twoFactor: true,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    twoFactor = () => {\r\n        this.setState({\r\n            loading: \"twoFactor\",\r\n        });\r\n        API.patch(\"/user/setting/2fa\", {\r\n            code: this.state.authCode,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"设定已保存\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                    settings: {\r\n                        ...this.state.settings,\r\n                        two_factor: !this.state.settings.two_factor,\r\n                    },\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\r\n\r\n    toggleThemeMode = (current) => {\r\n        if (current !== null) {\r\n            this.props.toggleDaylightMode();\r\n            Auth.SetPreference(\"theme_mode\", null);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const dark = Auth.GetPreference(\"theme_mode\");\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.layout}>\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        个人资料\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ avatarModal: true })\r\n                                }\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        src={\r\n                                            \"/api/v3/user/avatar/\" +\r\n                                            user.id +\r\n                                            \"/l\"\r\n                                        }\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"头像\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <RightIcon className={classes.rightIcon} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <PermContactCalendar />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"UID\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.settings.uid}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ nickModal: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <NickIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"昵称\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() =>\r\n                                        this.setState({ nickModal: true })\r\n                                    }\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.nickname}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <EmailIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Email\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.user_name}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.props.history.push(\"/buy?tab=1\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <GroupIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"用户组\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.group.name}\r\n                                        {this.state.settings.group_expires && (\r\n                                            <span>\r\n                                                {\" \"}\r\n                                                <Tooltip\r\n                                                    title={formatLocalTime(\r\n                                                        this.state.settings\r\n                                                            .group_expires,\r\n                                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                                    )}\r\n                                                >\r\n                                                    <TimeAgo\r\n                                                        datetime={\r\n                                                            this.state.settings\r\n                                                                .group_expires\r\n                                                        }\r\n                                                        locale=\"zh_CN\"\r\n                                                    />\r\n                                                </Tooltip>{\" \"}\r\n                                                过期\r\n                                            </span>\r\n                                        )}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            {this.state.settings.group_expires > 0 && (\r\n                                <div>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                groupBackModal: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <AlarmOff />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"手动解约当前用户组\" />\r\n\r\n                                        <ListItemSecondaryAction>\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                </div>\r\n                            )}\r\n                            <Divider />\r\n                            <ListItem button onClick={() => this.bindQQ()}>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <SettingsInputHdmi />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"QQ账号\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.settings.qq\r\n                                            ? \"解除绑定\"\r\n                                            : \"绑定\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changePolicy: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Backup />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"存储策略\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {\r\n                                            this.state.settings.policy.current\r\n                                                .name\r\n                                        }\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ConfirmationNumber />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"积分\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.score}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <DateIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"注册时间\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {formatLocalTime(\r\n                                            user.created_at,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        安全隐私\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"个人主页\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Switch\r\n                                        onChange={this.handleToggle}\r\n                                        checked={this.state.settings.homepage}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changePassword: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <LockIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"登录密码\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <RightIcon className={classes.rightIcon} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => this.init2FA()}>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <VerifyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"二步验证\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {!this.state.settings.two_factor\r\n                                            ? \"未开启\"\r\n                                            : \"已开启\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n\r\n                    <Authn\r\n                        list={this.state.settings.authn}\r\n                        add={(credential) => {\r\n                            this.setState({\r\n                                settings: {\r\n                                    ...this.state.settings,\r\n                                    authn: [\r\n                                        ...this.state.settings.authn,\r\n                                        credential,\r\n                                    ],\r\n                                },\r\n                            });\r\n                        }}\r\n                        remove={(id) => {\r\n                            let credentials = [...this.state.settings.authn];\r\n                            credentials = credentials.filter((v) => {\r\n                                return v.id !== id;\r\n                            });\r\n                            this.setState({\r\n                                settings: {\r\n                                    ...this.state.settings,\r\n                                    authn: credentials,\r\n                                },\r\n                            });\r\n                        }}\r\n                    />\r\n\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        个性化\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changeTheme: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ColorIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"主题配色\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <div className={classes.firstColor}></div>\r\n                                    <div className={classes.secondColor}></div>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() => this.toggleThemeMode(dark)}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Brightness3 />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"黑暗模式\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {dark &&\r\n                                            (dark === \"dark\"\r\n                                                ? \"偏好开启\"\r\n                                                : \"偏好关闭\")}\r\n                                        {dark === null && \"跟随系统\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() => this.toggleViewMethod()}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ListAlt />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"文件列表\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.props.viewMethod === \"icon\" &&\r\n                                            \"大图标\"}\r\n                                        {this.props.viewMethod === \"list\" &&\r\n                                            \"列表\"}\r\n                                        {this.props.viewMethod ===\r\n                                            \"smallIcon\" && \"小图标\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                onClick={() =>\r\n                                    this.setState({ changeTimeZone: true })\r\n                                }\r\n                                button\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Schedule />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"时区\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {timeZone}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                    {user.group.webdav && (\r\n                        <div>\r\n                            <Typography\r\n                                className={classes.sectionTitle}\r\n                                variant=\"subtitle2\"\r\n                            >\r\n                                WebDAV\r\n                            </Typography>\r\n                            <Paper>\r\n                                <List className={classes.desenList}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showWebDavUrl: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <LinkIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"连接地址\" />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showWebDavUserName: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <InputIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"用户名\" />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/webdav?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <SecurityIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"账号管理\" />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Paper>\r\n                        </div>\r\n                    )}\r\n                    <div className={classes.paddingBottom}></div>\r\n                </div>\r\n                <TimeZoneDialog\r\n                    onClose={() => this.setState({ changeTimeZone: false })}\r\n                    open={this.state.changeTimeZone}\r\n                />\r\n                <Dialog\r\n                    open={this.state.changePolicy}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>切换存储策略</DialogTitle>\r\n                    <List>\r\n                        {this.state.settings.policy.options.map(\r\n                            (value, index) => (\r\n                                <ListItem\r\n                                    button\r\n                                    component=\"label\"\r\n                                    key={index}\r\n                                    onClick={() => this.changePolicy(value.id)}\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        {value.id ===\r\n                                            this.state.settings.policy.current\r\n                                                .id && (\r\n                                            <Avatar\r\n                                                className={\r\n                                                    classes.policySelected\r\n                                                }\r\n                                            >\r\n                                                <Check />\r\n                                            </Avatar>\r\n                                        )}\r\n                                        {value.id !==\r\n                                            this.state.settings.policy.current\r\n                                                .id && (\r\n                                            <Avatar\r\n                                                className={\r\n                                                    classes.uploadFromFile\r\n                                                }\r\n                                            >\r\n                                                <Backup />\r\n                                            </Avatar>\r\n                                        )}\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={value.name} />\r\n                                </ListItem>\r\n                            )\r\n                        )}\r\n                    </List>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.avatarModal}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>修改头像</DialogTitle>\r\n                    <List>\r\n                        <ListItem\r\n                            button\r\n                            component=\"label\"\r\n                            disabled={this.state.loading === \"avatar\"}\r\n                        >\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                style={{ display: \"none\" }}\r\n                                ref={this.fileInput}\r\n                                onChange={this.uploadAvatar}\r\n                            />\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.uploadFromFile}>\r\n                                    <PhotoIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"从文件上传\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            onClick={this.useGravatar}\r\n                            disabled={this.state.loading === \"gravatar\"}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.userGravatar}>\r\n                                    <FingerprintIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                className={classes.paddingText}\r\n                                primary=\"使用 Gravatar 头像 \"\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            取消\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\r\n                    <DialogTitle>修改昵称</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label=\"昵称\"\r\n                            className={classes.textField}\r\n                            value={this.state.nick}\r\n                            onChange={this.handleChange(\"nick\")}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changeNick}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"nick\" ||\r\n                                this.state.nick === \"\"\r\n                            }\r\n                        >\r\n                            保存\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.groupBackModal}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>解约用户组</DialogTitle>\r\n                    <DialogContent>\r\n                        将要退回到初始用户组，且所支付金额无法退还，确定要继续吗？\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button onClick={this.doChangeGroup} color=\"primary\">\r\n                            确定\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.changePassword}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>修改登录密码</DialogTitle>\r\n                    <DialogContent>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"原密码\"\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.oldPwd}\r\n                                onChange={this.handleChange(\"oldPwd\")}\r\n                                margin=\"normal\"\r\n                                autoFocus\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"新密码\"\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.newPwd}\r\n                                onChange={this.handleChange(\"newPwd\")}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"确认新密码\"\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.newPwdRepeat}\r\n                                onChange={this.handleChange(\"newPwdRepeat\")}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changhePwd}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"changePassword\" ||\r\n                                this.state.oldPwd === \"\" ||\r\n                                this.state.newPwdRepeat === \"\" ||\r\n                                this.state.newPwd === \"\"\r\n                            }\r\n                        >\r\n                            保存\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\r\n                    <DialogTitle>\r\n                        {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\r\n                        二步验证\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <div className={classes.flexContainerResponse}>\r\n                            {!this.state.settings.two_factor && (\r\n                                <div className={classes.qrcode}>\r\n                                    <QRCode\r\n                                        value={\r\n                                            \"otpauth://totp/\" +\r\n                                            this.props.title +\r\n                                            \"?secret=\" +\r\n                                            this.state.two_fa_secret\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className={classes.desText}>\r\n                                {!this.state.settings.two_factor && (\r\n                                    <Typography>\r\n                                        请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\r\n                                    </Typography>\r\n                                )}\r\n                                {this.state.settings.two_factor && (\r\n                                    <Typography>\r\n                                        请验证当前二步验证代码。\r\n                                    </Typography>\r\n                                )}\r\n                                <TextField\r\n                                    id=\"standard-name\"\r\n                                    label=\"6位验证码\"\r\n                                    type=\"number\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.authCode}\r\n                                    onChange={this.handleChange(\"authCode\")}\r\n                                    margin=\"normal\"\r\n                                    autoFocus\r\n                                    fullWidth\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.twoFactor}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"twoFactor\" ||\r\n                                this.state.authCode === \"\"\r\n                            }\r\n                        >\r\n                            {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\r\n                            二步验证\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.changeTheme}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>更改主题配色</DialogTitle>\r\n                    <DialogContent>\r\n                        <ToggleButtonGroup\r\n                            value={this.state.chosenTheme}\r\n                            exclusive\r\n                            onChange={this.handleAlignment}\r\n                        >\r\n                            {Object.keys(this.state.settings.themes).map(\r\n                                (value, key) => (\r\n                                    <ToggleButton value={value} key={key}>\r\n                                        <div\r\n                                            className={classes.themeBlock}\r\n                                            style={{ backgroundColor: value }}\r\n                                        />\r\n                                    </ToggleButton>\r\n                                )\r\n                            )}\r\n                        </ToggleButtonGroup>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changeTheme}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"changeTheme\" ||\r\n                                this.state.chosenTheme === null\r\n                            }\r\n                        >\r\n                            保存\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.showWebDavUrl}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            className={classes.textField}\r\n                            value={window.location.origin + \"/dav\"}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.showWebDavUserName}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>WebDAV用户名</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            className={classes.textField}\r\n                            value={user.user_name}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst UserSetting = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\r\n\r\nexport default UserSetting;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { applyThemes, setSessionStatus, toggleSnackbar } from \"../../actions\";\r\nimport Notice from \"../Share/NotFound\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { enableUploaderLoad } from \"../../middleware/Init\";\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function QQCallback() {\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\r\n        dispatch,\r\n    ]);\r\n    const SetSessionStatus = useCallback(\r\n        (status) => dispatch(setSessionStatus(status)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const getCookie =(name)=> {\r\n        const strcookie = document.cookie;//获取cookie字符串\r\n            const arrcookie = strcookie.split(\"; \");//分割\r\n            //遍历匹配\r\n            for ( let i = 0; i < arrcookie.length; i++) {\r\n                const arr = arrcookie[i].split(\"=\");\r\n                if (arr[0] == name){\r\n                    return unescape(arr[1]);\r\n                }\r\n            }\r\n        return null;\r\n    }\r\n\r\n    const GetQueryString =(name)=> {\r\n        const reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\",\"i\"); \r\n        const r = window.location.search.substr(1).match(reg); \r\n        if (r!=null) return (r[2]); return \"\"; \r\n    }\r\n    \r\n    const afterLogin = (data) => {\r\n        Auth.authenticate(data);\r\n\r\n        // 设置用户主题色\r\n        if (data[\"preferred_theme\"] !== \"\") {\r\n            ApplyThemes(data[\"preferred_theme\"]);\r\n        }\r\n        enableUploaderLoad();\r\n\r\n        // 设置登录状态\r\n        SetSessionStatus(true);\r\n        const backurl = GetQueryString(\"backurl\");\r\n        if (backurl==\"\"){\r\n            history.push(\"/home\");\r\n        }else{\r\n            const backurl_path = backurl.split(\".\");\r\n            if (backurl_path[1]!=\"bilnn\"){\r\n                history.push(\"/home\");\r\n            }else{\r\n                window.location.href = decodeURIComponent(backurl)+\"?token=\"+getCookie(\"token\");\r\n            } \r\n        }\r\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\r\n\r\n        localStorage.removeItem(\"siteConfigCache\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"error_description\")) {\r\n            setMsg(query.get(\"error_description\"));\r\n            return;\r\n        }\r\n        if (query.get(\"code\") === null) {\r\n            return;\r\n        }\r\n        API.post(\"/callback/qq\", {\r\n            code: query.get(\"code\"),\r\n            state: query.get(\"state\"),\r\n        })\r\n            .then((response) => {\r\n                if (response.rawData.code === 203) {\r\n                    afterLogin(response.data);\r\n                } else {\r\n                    history.push(response.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setMsg(error.message);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [location]);\r\n\r\n    return <>{msg !== \"\" && <Notice msg={msg} />}</>;\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n    captchaPlaceholder: {\r\n        width: 200,\r\n    },\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    authnLink: {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n    },\r\n    avatarSuccess: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nfunction Register() {\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        password_repeat: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailActive, setEmailActive] = useState(false);\r\n\r\n    const title = useSelector((state) => state.siteConfig.title);\r\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n    const classes = useStyles();\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (input.password !== input.password_repeat) {\r\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && regCaptcha) {\r\n            validate(() => register(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user\", {\r\n            userName: input.email,\r\n            Password: input.password,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                if (response.rawData.code === 203) {\r\n                    setEmailActive(true);\r\n                } else {\r\n                    history.push(\"/login?username=\" + input.email);\r\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <>\r\n                {!emailActive && (\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <RegIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            注册 {title}\r\n                        </Typography>\r\n\r\n                        <form className={classes.form} onSubmit={register}>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"email\">\r\n                                    电子邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={handleInputChange(\"email\")}\r\n                                    autoComplete\r\n                                    value={input.email}\r\n                                    autoFocus\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"password\">密码</InputLabel>\r\n                                <Input\r\n                                    name=\"password\"\r\n                                    onChange={handleInputChange(\"password\")}\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={input.password}\r\n                                    autoComplete\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"password\">\r\n                                    确认密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    name=\"pwdRepeat\"\r\n                                    onChange={handleInputChange(\r\n                                        \"password_repeat\"\r\n                                    )}\r\n                                    type=\"password\"\r\n                                    id=\"pwdRepeat\"\r\n                                    value={input.password_repeat}\r\n                                    autoComplete\r\n                                />\r\n                            </FormControl>\r\n                            {regCaptcha && <CaptchaRender />}\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    loading ||\r\n                                    (regCaptcha ? captchaLoading : false)\r\n                                }\r\n                                className={classes.submit}\r\n                            >\r\n                                注册账号\r\n                            </Button>\r\n                        </form>\r\n\r\n                        <Divider />\r\n                        <div className={classes.link}>\r\n                            <div>\r\n                                <Link href={\"/login\"}>返回登录</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link href={\"https://support.qq.com/products/261676/blog/480523\"} target=\"_blank\">注册协议</Link>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                )}\r\n                {emailActive && (\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatarSuccess}>\r\n                            <EmailIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            邮件激活\r\n                        </Typography>\r\n                        <Typography style={{ marginTop: \"10px\" }}>\r\n                            一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。\r\n                        </Typography>\r\n                    </Paper>\r\n                )}\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Apps() {\r\n\r\n    const JumpUrl = () =>{\r\n        const history = useHistory();\r\n        const Days = 365;\r\n        const exp = new Date(); \r\n        exp.setTime(exp.getTime() + Days*24*60*60*1000);\r\n        document.cookie = \"thisapp=ok; expires=\"+exp.toGMTString()+\"; path=/\";\r\n        history.push(\"/home\");\r\n    }\r\n\r\n    return (\r\n        <div>{JumpUrl()}</div>\r\n    );\r\n}\r\n\r\nexport default Apps;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport { Button, Paper, Avatar, Typography } from \"@material-ui/core\";\r\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport { useLocation } from \"react-router\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction Activation() {\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        API.get(\r\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\r\n        )\r\n            .then((response) => {\r\n                setEmail(response.data);\r\n                setSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                history.push(\"/login\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            {success && (\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <EmailIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        激活成功\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: \"20px\" }}>\r\n                        您的账号已被成功激活。\r\n                    </Typography>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={() => history.push(\"/login?username=\" + email)}\r\n                    >\r\n                        返回登录\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Activation;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Divider,\r\n    Link,\r\n    Input,\r\n    InputLabel,\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router\";\r\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction ResetForm() {\r\n    const query = useQuery();\r\n    const [input, setInput] = useState({\r\n        password: \"\",\r\n        password_repeat: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (input.password !== input.password_repeat) {\r\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        API.patch(\"/user/reset\", {\r\n            secret: query.get(\"sign\"),\r\n            id: query.get(\"id\"),\r\n            Password: input.password,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                history.push(\"/login\");\r\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <KeyIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    找回密码\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\r\n                        <Input\r\n                            id=\"pwd\"\r\n                            type=\"password\"\r\n                            name=\"pwd\"\r\n                            onChange={handleInputChange(\"password\")}\r\n                            autoComplete\r\n                            value={input.password}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\r\n                        <Input\r\n                            id=\"pwdRepeat\"\r\n                            type=\"password\"\r\n                            name=\"pwdRepeat\"\r\n                            onChange={handleInputChange(\"password_repeat\")}\r\n                            autoComplete\r\n                            value={input.password_repeat}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                        className={classes.submit}\r\n                    >\r\n                        重设密码\r\n                    </Button>{\" \"}\r\n                </form>{\" \"}\r\n                <Divider />\r\n                <div className={classes.link}>\r\n                    <div>\r\n                        <Link href={\"/login\"}>返回登录</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link href={\"/signup\"}>注册账号</Link>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetForm;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport API from \"../../middleware/Api\";\r\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n    },\r\n    captchaPlaceholder: {\r\n        width: 200,\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nfunction Reset() {\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const forgetCaptcha = useSelector(\r\n        (state) => state.siteConfig.forgetCaptcha\r\n    );\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && forgetCaptcha) {\r\n            validate(() => submit(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user/reset\", {\r\n            userName: input.email,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"密码重置邮件已发送，请注意查收\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <KeyIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    找回密码\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\r\n                        <Input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleInputChange(\"email\")}\r\n                            autoComplete\r\n                            value={input.email}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    {forgetCaptcha && <CaptchaRender />}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={\r\n                            loading || (forgetCaptcha ? captchaLoading : false)\r\n                        }\r\n                        className={classes.submit}\r\n                    >\r\n                        发送密码重置邮件\r\n                    </Button>{\" \"}\r\n                </form>{\" \"}\r\n                <Divider />\r\n                <div className={classes.link}>\r\n                    <div>\r\n                        <Link href={\"/login\"}>返回登录</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link href={\"/signup\"}>注册账号</Link>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { FormControl, makeStyles, TextField } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { reportReasons } from \"../../config\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widthAnimation: {},\r\n    content: {\r\n        overflowWrap: \"break-word\",\r\n    },\r\n}));\r\n\r\nexport default function SiteNotice() {\r\n    const content = useSelector((state) => state.siteConfig.site_notice);\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const setRead = () => {\r\n        setShow(false);\r\n        Auth.SetPreference(\"notice_read\", content);\r\n    };\r\n    useEffect(() => {\r\n        const newNotice = Auth.GetPreference(\"notice_read\");\r\n        if (content !== \"\" && newNotice !== content) {\r\n            setShow(true);\r\n        }\r\n    }, [content]);\r\n    return (\r\n        <Dialog\r\n            open={show}\r\n            onClose={() => setShow(false)}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">公告</DialogTitle>\r\n            <DialogContent\r\n                className={classes.content}\r\n                dangerouslySetInnerHTML={{ __html: content }}\r\n            />\r\n\r\n            <DialogActions>\r\n                <Button onClick={() => setRead()} color=\"primary\">\r\n                    不再显示\r\n                </Button>\r\n                <Button onClick={() => setShow(false)}>关闭</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport AuthRoute from \"./middleware/AuthRoute\";\r\nimport Navbar from \"./component/Navbar/Navbar.js\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AlertBar from \"./component/Common/Snackbar\";\r\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport Auth from \"./middleware/Auth\";\r\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport PageLoading from \"./component/Placeholder/PageLoading.js\";\r\nimport { changeThemeColor } from \"./utils\";\r\nimport NotFound from \"./component/Share/NotFound\";\r\n// Lazy loads\r\nimport LoginForm from \"./component/Login/LoginForm\";\r\nimport FileManager from \"./component/FileManager/FileManager.js\";\r\nimport VideoPreview from \"./component/Viewer/Video.js\";\r\nimport SearchResult from \"./component/Share/SearchResult\";\r\nimport MyShare from \"./component/Share/MyShare\";\r\nimport Download from \"./component/Download/Download\";\r\nimport SharePreload from \"./component/Share/SharePreload\";\r\nimport DocViewer from \"./component/Viewer/Doc\";\r\nimport TextViewer from \"./component/Viewer/Text\";\r\nimport Quota from \"./component/VAS/Quota\";\r\nimport BuyQuota from \"./component/VAS/BuyQuota\";\r\nimport WebDAV from \"./component/Setting/WebDAV\";\r\nimport Tasks from \"./component/Setting/Tasks\";\r\nimport Ifm from \"./component/Setting/Ifm\";\r\nimport Profile from \"./component/Setting/Profile\";\r\nimport UserSetting from \"./component/Setting/UserSetting\";\r\nimport QQCallback from \"./component/Login/QQ\";\r\nimport Register from \"./component/Login/Register\";\r\nimport Apps from \"./component/Login/Apps\";\r\nimport Activation from \"./component/Login/Activication\";\r\nimport ResetForm from \"./component/Login/ResetForm\";\r\nimport Reset from \"./component/Login/Reset\";\r\nimport CodeViewer from \"./component/Viewer/Code\";\r\nimport SiteNotice from \"./component/Modals/SiteNotice\";\r\n\r\nconst PDFViewer = React.lazy(() =>\r\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\r\n);\r\n\r\nexport default function App() {\r\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\r\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\r\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n    const theme = React.useMemo(() => {\r\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\r\n        const prefer = Auth.GetPreference(\"theme_mode\");\r\n        if (prefer) {\r\n            themeConfig.palette.type = prefer;\r\n        }\r\n        const theme = createMuiTheme({\r\n            ...themeConfig,\r\n            palette: {\r\n                ...themeConfig.palette,\r\n                primary: {\r\n                    ...themeConfig.palette.primary,\r\n                    main:\r\n                        themeConfig.palette.type === \"dark\"\r\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\r\n                            : themeConfig.palette.primary.main,\r\n                },\r\n            },\r\n        });\r\n        changeThemeColor(\r\n            themeConfig.palette.type === \"dark\"\r\n                ? theme.palette.background.default\r\n                : theme.palette.primary.main\r\n        );\r\n        return theme;\r\n    }, [prefersDarkMode, themeConfig]);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(0),\r\n            minWidth: 0,\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const { path } = useRouteMatch();\r\n    return (\r\n        <React.Fragment>\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.root} id=\"container\">\r\n                    <CssBaseline />\r\n                    <AlertBar />\r\n                    <Navbar />\r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <Switch>\r\n                            <AuthRoute exact path={path} isLogin={isLogin}>\r\n                                <Redirect\r\n                                    to={{\r\n                                        pathname: \"/home\",\r\n                                    }}\r\n                                />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\r\n                                <>\r\n                                    <SiteNotice />\r\n                                    <FileManager />\r\n                                </>\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\r\n                                <VideoPreview />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\r\n                                <TextViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\r\n                                <DocViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\r\n                                <Suspense fallback={<PageLoading />}>\r\n                                    <PDFViewer />\r\n                                </Suspense>\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\r\n                                <CodeViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\r\n                                <Download />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\r\n                                <MyShare />\r\n                            </AuthRoute>\r\n\r\n                            <Route path={`${path}search`} isLogin={isLogin}>\r\n                                <SearchResult />\r\n                            </Route>\r\n\r\n                            <AuthRoute path={`${path}quota`} isLogin={isLogin}>\r\n                                <Quota />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}buy`} isLogin={isLogin}>\r\n                                <BuyQuota />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute\r\n                                path={`${path}setting`}\r\n                                isLogin={isLogin}\r\n                            >\r\n                                <UserSetting />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute\r\n                                path={`${path}profile/:id`}\r\n                                isLogin={isLogin}\r\n                            >\r\n                                <Profile />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\r\n                                <WebDAV />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\r\n                                <Tasks />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}ifm/:action`} isLogin={isLogin}>\r\n                                <Ifm />\r\n                            </AuthRoute>\r\n\r\n                            <Route path={`${path}apps`} exact>\r\n                                <Apps />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}login`} exact>\r\n                                <LoginForm />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}signup`} exact>\r\n                                <Register />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}activate`} exact>\r\n                                <Activation />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}reset`} exact>\r\n                                <ResetForm />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}forget`} exact>\r\n                                <Reset />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}login/qq`}>\r\n                                <QQCallback />\r\n                            </Route>\r\n\r\n                            <Route exact path={`${path}s/:id`}>\r\n                                <SharePreload />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/video(/)*`}>\r\n                                <VideoPreview />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/doc(/)*`}>\r\n                                <DocViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/text(/)*`}>\r\n                                <TextViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/pdf(/)*`}>\r\n                                <Suspense fallback={<PageLoading />}>\r\n                                    <PDFViewer />\r\n                                </Suspense>\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/code(/)*`}>\r\n                                <CodeViewer />\r\n                            </Route>\r\n\r\n                            <Route path=\"*\">\r\n                                <NotFound msg={\"页面不存在\"} />\r\n                            </Route>\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        shareKey: any;\r\n    }\r\n}\r\n\r\nexport interface ViewUpdateState {\r\n    isLogin: boolean;\r\n    loadUploader: boolean;\r\n    open: boolean;\r\n    explorerViewMethod: string;\r\n    sortMethod:\r\n        | \"sizePos\"\r\n        | \"sizeRes\"\r\n        | \"namePos\"\r\n        | \"nameRev\"\r\n        | \"timePos\"\r\n        | \"timeRev\";\r\n    subTitle: string | null;\r\n    contextType: string;\r\n    contextOpen: boolean;\r\n    menuOpen: boolean;\r\n    navigatorLoading: boolean;\r\n    navigatorError: boolean;\r\n    navigatorErrorMsg: string | null;\r\n    modalsLoading: boolean;\r\n    storageRefresh: boolean;\r\n    userPopoverAnchorEl: any;\r\n    shareUserPopoverAnchorEl: any;\r\n    modals: {\r\n        createNewFolder: boolean;\r\n        createNewFile: boolean;\r\n        rename: boolean;\r\n        move: boolean;\r\n        remove: boolean;\r\n        share: boolean;\r\n        music: boolean;\r\n        remoteDownload: boolean;\r\n        torrentDownload: boolean;\r\n        getSource: boolean;\r\n        copy: boolean;\r\n        resave: boolean;\r\n        compress: boolean;\r\n        decompress: boolean;\r\n        relocate: boolean;\r\n        loading: boolean;\r\n        loadingText: string;\r\n    };\r\n    snackbar: {\r\n        toggle: boolean;\r\n        vertical: string;\r\n        horizontal: string;\r\n        msg: string;\r\n        color: string;\r\n    };\r\n}\r\nexport const initState: ViewUpdateState = {\r\n    // 是否登录\r\n    isLogin: Auth.Check(),\r\n    loadUploader: false,\r\n    open: false,\r\n    explorerViewMethod: \"icon\",\r\n    sortMethod: \"timePos\",\r\n    subTitle: null,\r\n    contextType: \"none\",\r\n    contextOpen: false,\r\n    menuOpen: false,\r\n    navigatorLoading: true,\r\n    navigatorError: false,\r\n    navigatorErrorMsg: null,\r\n    modalsLoading: false,\r\n    storageRefresh: false,\r\n    userPopoverAnchorEl: null,\r\n    shareUserPopoverAnchorEl: null,\r\n    modals: {\r\n        createNewFolder: false,\r\n        createNewFile: false,\r\n        rename: false,\r\n        move: false,\r\n        remove: false,\r\n        share: false,\r\n        music: false,\r\n        remoteDownload: false,\r\n        torrentDownload: false,\r\n        getSource: false,\r\n        copy: false,\r\n        resave: false,\r\n        compress: false,\r\n        relocate: false,\r\n        decompress: false,\r\n        loading: false,\r\n        loadingText: \"\",\r\n    },\r\n    snackbar: {\r\n        toggle: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        color: \"\",\r\n    },\r\n};\r\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\r\n    switch (action.type) {\r\n        case \"DRAWER_TOGGLE\":\r\n            return Object.assign({}, state, {\r\n                open: action.open,\r\n            });\r\n        case \"CHANGE_VIEW_METHOD\":\r\n            return Object.assign({}, state, {\r\n                explorerViewMethod: action.method,\r\n            });\r\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\r\n            return Object.assign({}, state, {\r\n                navigatorLoading: action.status,\r\n            });\r\n        case \"SET_NAVIGATOR_ERROR\":\r\n            return Object.assign({}, state, {\r\n                navigatorError: action.status,\r\n                navigatorErrorMsg: action.msg,\r\n            });\r\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFolder: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_CREATE_FILE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFile: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RENAME_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    rename: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_REMOVE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    remove: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_MOVE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    move: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RESAVE_DIALOG\":\r\n            window.shareKey = action.key;\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    resave: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"SET_USER_POPOVER\":\r\n            return Object.assign({}, state, {\r\n                userPopoverAnchorEl: action.anchor,\r\n            });\r\n        case \"SET_SHARE_USER_POPOVER\":\r\n            return Object.assign({}, state, {\r\n                shareUserPopoverAnchorEl: action.anchor,\r\n            });\r\n        case \"OPEN_SHARE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    share: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_MUSIC_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    music: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    remoteDownload: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    torrentDownload: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_DECOMPRESS_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    decompress: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_COMPRESS_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    compress: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_GET_SOURCE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    getSource: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RELOCATE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    relocate: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_COPY_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    copy: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_LOADING_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    loading: true,\r\n                    loadingText: action.text,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"CLOSE_CONTEXT_MENU\":\r\n            return Object.assign({}, state, {\r\n                contextOpen: false,\r\n            });\r\n        case \"CLOSE_ALL_MODALS\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFolder: false,\r\n                    createNewFile: false,\r\n                    rename: false,\r\n                    move: false,\r\n                    remove: false,\r\n                    share: false,\r\n                    music: false,\r\n                    remoteDownload: false,\r\n                    torrentDownload: false,\r\n                    getSource: false,\r\n                    resave: false,\r\n                    copy: false,\r\n                    loading: false,\r\n                    relocate: false,\r\n                    compress: false,\r\n                    decompress: false,\r\n                }),\r\n            });\r\n        case \"TOGGLE_SNACKBAR\":\r\n            return Object.assign({}, state, {\r\n                snackbar: {\r\n                    toggle: !state.snackbar.toggle,\r\n                    vertical: action.vertical,\r\n                    horizontal: action.horizontal,\r\n                    msg: action.msg,\r\n                    color: action.color,\r\n                },\r\n            });\r\n        case \"SET_MODALS_LOADING\":\r\n            return Object.assign({}, state, {\r\n                modalsLoading: action.status,\r\n            });\r\n        case \"SET_SESSION_STATUS\":\r\n            return {\r\n                ...state,\r\n                isLogin: action.status,\r\n            };\r\n        case \"ENABLE_LOAD_UPLOADER\":\r\n            return Object.assign({}, state, {\r\n                loadUploader: true,\r\n            });\r\n        case \"REFRESH_STORAGE\":\r\n            return Object.assign({}, state, {\r\n                storageRefresh: !state.storageRefresh,\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                contextOpen: false,\r\n                navigatorError: false,\r\n                navigatorLoading: true,\r\n            });\r\n        case \"CHANGE_CONTEXT_MENU\":\r\n            if (state.contextOpen && action.open) {\r\n                return Object.assign({}, state);\r\n            }\r\n            return Object.assign({}, state, {\r\n                contextOpen: action.open,\r\n                contextType: action.menuType,\r\n            });\r\n        case \"SET_SUBTITLE\":\r\n            return Object.assign({}, state, {\r\n                subTitle: action.title,\r\n            });\r\n        case \"SET_SORT_METHOD\":\r\n            return {\r\n                ...state,\r\n                sortMethod: action.method,\r\n            };\r\n        case \"SET_NAVIGATOR\":\r\n            return {\r\n                ...state,\r\n                contextOpen: false,\r\n                navigatorError: false,\r\n                navigatorLoading: action.navigatorLoading,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewUpdate;\r\n","import { InitSiteConfig } from \"../middleware/Init\";\r\nimport { combineReducers } from \"../redux/combineReducers\";\r\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\r\nimport explorer from \"../redux/explorer/reducer\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nconst doNavigate = (path, state) => {\r\n    window.currntPath = path;\r\n    return Object.assign({}, state, {\r\n        navigator: Object.assign({}, state.navigator, {\r\n            path: path,\r\n        }),\r\n    });\r\n};\r\n\r\nexport const initState = {\r\n    siteConfig: {\r\n        title: window.subTitle,\r\n        siteICPId: \"\",\r\n        loginCaptcha: false,\r\n        regCaptcha: false,\r\n        forgetCaptcha: false,\r\n        emailActive: false,\r\n        QQLogin: false,\r\n        themes: null,\r\n        authn: false,\r\n        theme: {\r\n            palette: {\r\n                common: { black: \"#000\", white: \"#fff\" },\r\n                background: { paper: \"#fff\", default: \"#fafafa\" },\r\n                primary: {\r\n                    light: \"#7986cb\",\r\n                    main: \"#3f51b5\",\r\n                    dark: \"#303f9f\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                secondary: {\r\n                    light: \"#ff4081\",\r\n                    main: \"#f50057\",\r\n                    dark: \"#c51162\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                error: {\r\n                    light: \"#e57373\",\r\n                    main: \"#f44336\",\r\n                    dark: \"#d32f2f\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                text: {\r\n                    primary: \"rgba(0, 0, 0, 0.87)\",\r\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\r\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\r\n                    hint: \"rgba(0, 0, 0, 0.38)\",\r\n                },\r\n                explorer: {\r\n                    filename: \"#474849\",\r\n                    icon: \"#8f8f8f\",\r\n                    bgSelected: \"#D5DAF0\",\r\n                    emptyIcon: \"#e8e8e8\",\r\n                },\r\n            },\r\n        },\r\n        captcha_ReCaptchaKey: \"defaultKey\",\r\n        site_notice: \"\",\r\n        captcha_type: \"normal\",\r\n        tcaptcha_captcha_app_id: \"\",\r\n    },\r\n    navigator: {\r\n        path: \"/\",\r\n        refresh: true,\r\n    },\r\n};\r\n\r\nconst defaultStatus = InitSiteConfig(initState);\r\n\r\n// TODO: 将cloureveApp切分成小的reducer\r\nconst cloudreveApp = (state = defaultStatus, action) => {\r\n    switch (action.type) {\r\n        case \"SET_NAVIGATOR\":\r\n            return doNavigate(action.path, state);\r\n        case \"TOGGLE_DAYLIGHT_MODE\": {\r\n            const copy = Object.assign({}, state);\r\n            if (\r\n                copy.siteConfig.theme.palette.type === undefined ||\r\n                copy.siteConfig.theme.palette.type === \"light\"\r\n            ) {\r\n                return {\r\n                    ...state,\r\n                    siteConfig: {\r\n                        ...state.siteConfig,\r\n                        theme: {\r\n                            ...state.siteConfig.theme,\r\n                            palette: {\r\n                                ...state.siteConfig.theme.palette,\r\n                                type: \"dark\",\r\n                            },\r\n                        },\r\n                    },\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                siteConfig: {\r\n                    ...state.siteConfig,\r\n                    theme: {\r\n                        ...state.siteConfig.theme,\r\n                        palette: {\r\n                            ...state.siteConfig.theme.palette,\r\n                            type: \"light\",\r\n                        },\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case \"APPLY_THEME\":\r\n            if (state.siteConfig.themes !== null) {\r\n                const themes = JSON.parse(state.siteConfig.themes);\r\n                if (themes[action.theme] === undefined) {\r\n                    return state;\r\n                }\r\n                return Object.assign({}, state, {\r\n                    siteConfig: Object.assign({}, state.siteConfig, {\r\n                        theme: themes[action.theme],\r\n                    }),\r\n                });\r\n            }\r\n            break;\r\n        case \"NAVIGATOR_UP\":\r\n            return doNavigate(action.path, state);\r\n        case \"SET_SITE_CONFIG\":\r\n            return Object.assign({}, state, {\r\n                siteConfig: action.config,\r\n            });\r\n\r\n        case \"REFRESH_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                navigator: Object.assign({}, state.navigator, {\r\n                    refresh: !state.navigator.refresh,\r\n                }),\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                navigator: Object.assign({}, state.navigator, {\r\n                    path: \"/搜索结果\",\r\n                    refresh:\r\n                        state.explorer.keywords === \"\"\r\n                            ? state.navigator.refresh\r\n                            : !state.navigator.refresh,\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default (history) => (state, action) => {\r\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\r\n        state || {};\r\n    const appState = cloudreveApp(state, action);\r\n    const combinedState = combineReducers({\r\n        viewUpdate,\r\n        explorer,\r\n        router: connectRouter(history),\r\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\r\n    return {\r\n        ...appState,\r\n        ...combinedState,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    h1: {\r\n        color: \"#a4a4a4\",\r\n        margin: \"5px 0px\",\r\n    },\r\n    h2: {\r\n        margin: \"15px 0px\",\r\n    },\r\n};\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false, error: null, errorInfo: null };\r\n    }\r\n\r\n    static getDerivedStateFromError() {\r\n        // 更新 state 使下一次渲染能够显示降级后的 UI\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.hasError) {\r\n            // 你可以自定义降级后的 UI 并渲染\r\n            return (\r\n                <>\r\n                    <h1 className={classes.h1}>:(</h1>\r\n                    <h2 className={classes.h2}>\r\n                        页面渲染出现错误，请尝试刷新此页面。\r\n                    </h2>\r\n                    {this.state.error &&\r\n                        this.state.errorInfo &&\r\n                        this.state.errorInfo.componentStack && (\r\n                            <details>\r\n                                <summary>错误详情</summary>\r\n                                <pre>\r\n                                    <code>{this.state.error.toString()}</code>\r\n                                </pre>\r\n                                <pre>\r\n                                    <code>\r\n                                        {this.state.errorInfo.componentStack}\r\n                                    </code>\r\n                                </pre>\r\n                            </details>\r\n                        )}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ErrorBoundary);\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./App\";\r\nimport cloureveApp from \"./reducers\";\r\nimport { UpdateSiteConfig } from \"./middleware/Init\";\r\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nconst Admin = React.lazy(() => import(\"./Admin\"));\r\n\r\nif (window.location.hash !== \"\") {\r\n    window.location.href = window.location.hash.split(\"#\")[1];\r\n}\r\n\r\nserviceWorker.register();\r\nexport const history = createBrowserHistory();\r\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\r\nif (\r\n    process.env.NODE_ENV === \"development\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\nconst store = createStore(cloureveApp(history), reduxEnhance);\r\nUpdateSiteConfig(store);\r\n\r\nReactDOM.render(\r\n    <ErrorBoundary>\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <Switch>\r\n                    <Route path=\"/admin\">\r\n                        <Suspense fallback={\"Loading...\"}>\r\n                            <Admin />\r\n                        </Suspense>\r\n                    </Route>\r\n                    <Route exact path=\"\">\r\n                        <App />\r\n                    </Route>\r\n                </Switch>\r\n            </ConnectedRouter>\r\n        </Provider>\r\n    </ErrorBoundary>,\r\n    document.getElementById(\"root\")\r\n);\r\n","import {\r\n    combineReducers as combine,\r\n    ReducersMapObject,\r\n    AnyAction,\r\n} from \"redux\";\r\nimport invariant from \"invariant\";\r\n\r\nexport const combineReducers = (reducers: ReducersMapObject) => {\r\n    const combinedReducer = combine(reducers);\r\n    // TODO: define state type\r\n    return (state: any, action: AnyAction) => {\r\n        if (\r\n            action.type &&\r\n            !action.type.startsWith(\"@@\") &&\r\n            action.type.split(\"/\").length > 1\r\n        ) {\r\n            const namespace = action.type.split(\"/\")[0];\r\n            const reducer = reducers[namespace];\r\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\r\n            return reducer && reducer(state, action);\r\n        }\r\n        return combinedReducer(state, action);\r\n    };\r\n};\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nexport interface ActionSetSubtitle extends AnyAction {\r\n    type: \"SET_SUBTITLE\";\r\n    title: string;\r\n}\r\n\r\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\r\n    return {\r\n        type: \"SET_SUBTITLE\",\r\n        title,\r\n    };\r\n};\r\n\r\nexport const closeContextMenu = () => {\r\n    return {\r\n        type: \"CLOSE_CONTEXT_MENU\",\r\n    };\r\n};\r\n\r\nexport const changeSubTitle = (\r\n    title: string\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        document.title =\r\n            title === null || title === undefined\r\n                ? state.siteConfig.title\r\n                : title + \" - \" + state.siteConfig.title;\r\n        dispatch(setSubtitle(title));\r\n    };\r\n};\r\n"],"sourceRoot":""}